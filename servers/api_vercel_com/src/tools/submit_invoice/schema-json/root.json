{
  "type": "object",
  "properties": {
    "integrationConfigurationId": {
      "type": "string"
    },
    "externalId": {
      "type": "string"
    },
    "invoiceDate": {
      "description": "Invoice date. Must be within the period's start and end.",
      "type": "string",
      "format": "date-time"
    },
    "memo": {
      "type": "string",
      "description": "Additional memo for the invoice."
    },
    "period": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `period` to the tool, first call the tool `expandSchema` with \"/properties/period\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Subscription period for this billing cycle.</property-description>",
      "additionalProperties": true
    },
    "items": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "resourceId": {
            "type": "string",
            "description": "Partner's resource ID."
          },
          "billingPlanId": {
            "type": "string",
            "description": "Partner's billing plan ID."
          },
          "start": {
            "description": "Start and end are only needed if different from the period's start/end.",
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "description": "Start and end are only needed if different from the period's start/end.",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "price": {
            "type": "string",
            "pattern": "^[0-9]+(\\\\.[0-9]+)?$",
            "description": "Currency amount as a decimal string."
          },
          "quantity": {
            "type": "number"
          },
          "units": {
            "type": "string"
          },
          "total": {
            "type": "string",
            "pattern": "^[0-9]+(\\\\.[0-9]+)?$",
            "description": "Currency amount as a decimal string."
          }
        },
        "required": [
          "billingPlanId",
          "name",
          "price",
          "quantity",
          "units",
          "total"
        ],
        "additionalProperties": false
      }
    },
    "discounts": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "resourceId": {
            "type": "string",
            "description": "Partner's resource ID."
          },
          "billingPlanId": {
            "type": "string",
            "description": "Partner's billing plan ID."
          },
          "start": {
            "description": "Start and end are only needed if different from the period's start/end.",
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "description": "Start and end are only needed if different from the period's start/end.",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "amount": {
            "type": "string",
            "pattern": "^[0-9]+(\\\\.[0-9]+)?$",
            "description": "Currency amount as a decimal string."
          }
        },
        "required": [
          "billingPlanId",
          "name",
          "amount"
        ],
        "additionalProperties": false
      }
    },
    "test": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `test` to the tool, first call the tool `expandSchema` with \"/properties/test\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Test mode</property-description>",
      "additionalProperties": true
    }
  },
  "required": [
    "integrationConfigurationId",
    "invoiceDate",
    "period",
    "items"
  ]
}