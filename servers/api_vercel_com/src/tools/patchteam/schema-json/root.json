{
  "type": "object",
  "properties": {
    "teamId": {
      "description": "The Team identifier to perform the request on behalf of.",
      "type": "string"
    },
    "slug": {
      "description": "The Team slug to perform the request on behalf of.",
      "type": "string"
    },
    "avatar": {
      "type": "string",
      "format": "regex",
      "regex": "^[0-9a-f]{40}$",
      "description": "The hash value of an uploaded image."
    },
    "description": {
      "type": "string",
      "maxLength": 140,
      "example": "Our mission is to make cloud computing accessible to everyone",
      "description": "A short text that describes the team."
    },
    "emailDomain": {
      "type": "string",
      "format": "regex",
      "regex": "\\\\b((?=[a-z0-9-]{1,63}\\\\.)(xn--)?[a-z0-9]+(-[a-z0-9]+)*\\\\.)+[a-z]{2,63}\\\\b",
      "example": "example.com",
      "nullable": true
    },
    "name": {
      "type": "string",
      "maxLength": 256,
      "example": "My Team",
      "description": "The name of the team."
    },
    "previewDeploymentSuffix": {
      "type": "string",
      "format": "hostname",
      "example": "example.dev",
      "description": "Suffix that will be used for all preview deployments.",
      "nullable": true
    },
    "regenerateInviteCode": {
      "type": "boolean",
      "example": true,
      "description": "Create a new invite code and replace the current one."
    },
    "saml": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `saml` to the tool, first call the tool `expandSchema` with \"/properties/saml\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>",
      "additionalProperties": true
    },
    "b_slug": {
      "type": "string",
      "example": "my-team",
      "description": "A new slug for the team."
    },
    "enablePreviewFeedback": {
      "type": "string",
      "example": "on",
      "description": "Enable preview toolbar: one of on, off or default."
    },
    "enableProductionFeedback": {
      "type": "string",
      "example": "on",
      "description": "Enable production toolbar: one of on, off or default."
    },
    "sensitiveEnvironmentVariablePolicy": {
      "type": "string",
      "example": "on",
      "description": "Sensitive environment variable policy: one of on, off or default."
    },
    "remoteCaching": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `remoteCaching` to the tool, first call the tool `expandSchema` with \"/properties/remoteCaching\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Whether or not remote caching is enabled for the team</property-description>",
      "additionalProperties": true
    },
    "hideIpAddresses": {
      "type": "boolean",
      "example": false,
      "description": "Display or hide IP addresses in Monitoring queries."
    },
    "hideIpAddressesInLogDrains": {
      "type": "boolean",
      "example": false,
      "description": "Display or hide IP addresses in Log Drains."
    }
  },
  "required": [
    "teamId"
  ]
}