{
  "type": "object",
  "properties": {
    "customer": {
      "type": "string",
      "description": "Unique customer identifier in Asaas",
      "nullable": false,
      "example": "cus_0T1mdomVMi39",
      "deprecated": false
    },
    "billingType": {
      "type": "string",
      "description": "Billing type",
      "nullable": false,
      "example": "BOLETO",
      "deprecated": false,
      "enum": [
        "UNDEFINED",
        "BOLETO",
        "CREDIT_CARD",
        "PIX"
      ]
    },
    "value": {
      "type": "number",
      "description": "Subscription value",
      "nullable": false,
      "example": 19.9,
      "deprecated": false
    },
    "nextDueDate": {
      "type": "string",
      "description": "First payment due",
      "format": "date",
      "nullable": false,
      "example": "2017-05-15",
      "deprecated": false
    },
    "discount": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `discount` to the tool, first call the tool `expandSchema` with \"/properties/discount\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Discount information</property-description>",
      "additionalProperties": true
    },
    "interest": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `interest` to the tool, first call the tool `expandSchema` with \"/properties/interest\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Interest information for payment after due date</property-description>",
      "additionalProperties": true
    },
    "fine": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `fine` to the tool, first call the tool `expandSchema` with \"/properties/fine\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Fine information for payment after due date</property-description>",
      "additionalProperties": true
    },
    "cycle": {
      "type": "string",
      "description": "Billing frequency",
      "nullable": false,
      "example": "MONTHLY",
      "deprecated": false,
      "enum": [
        "WEEKLY",
        "BIWEEKLY",
        "MONTHLY",
        "BIMONTHLY",
        "QUARTERLY",
        "SEMIANNUALLY",
        "YEARLY"
      ]
    },
    "description": {
      "type": "string",
      "description": "Subscription description (max. 500 characters)",
      "example": "Pro Plan Subscription",
      "deprecated": false
    },
    "endDate": {
      "type": "string",
      "description": "Deadline for payments to be due",
      "format": "date",
      "deprecated": false,
      "example": null
    },
    "maxPayments": {
      "type": "integer",
      "description": "Maximum number of payments to be generated for this subscription",
      "format": "int32",
      "deprecated": false,
      "example": null
    },
    "externalReference": {
      "type": "string",
      "description": "Subscription identifier on your system",
      "deprecated": false,
      "example": null
    },
    "split": {
      "type": "array",
      "description": "Split information",
      "deprecated": false,
      "items": {
        "required": [
          "walletId"
        ],
        "type": "object",
        "properties": {
          "walletId": {
            "type": "string",
            "description": "Asaas wallet identifier that will be transferred",
            "nullable": false,
            "deprecated": false,
            "example": null
          },
          "fixedValue": {
            "type": "number",
            "description": "Fixed amount to be transferred to the account when the payment is received",
            "deprecated": false,
            "example": null
          },
          "percentualValue": {
            "type": "number",
            "description": "Percentage of the net value of the charge to be transferred when received",
            "deprecated": false,
            "example": null
          },
          "externalReference": {
            "type": "string",
            "description": "Split identifier in your system",
            "deprecated": false,
            "example": null
          },
          "description": {
            "type": "string",
            "description": "Split description",
            "deprecated": false,
            "example": null
          }
        },
        "description": "Split information",
        "deprecated": false
      }
    },
    "callback": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `callback` to the tool, first call the tool `expandSchema` with \"/properties/callback\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Automatic redirection information after the payment of the link payment</property-description>",
      "additionalProperties": true
    },
    "creditCard": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `creditCard` to the tool, first call the tool `expandSchema` with \"/properties/creditCard\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Credit card information</property-description>",
      "additionalProperties": true
    },
    "creditCardHolderInfo": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `creditCardHolderInfo` to the tool, first call the tool `expandSchema` with \"/properties/creditCardHolderInfo\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Credit card holder information</property-description>",
      "additionalProperties": true
    },
    "creditCardToken": {
      "type": "string",
      "description": "Credit card token for using the credit card tokenization functionality. If informed, the fields above are not mandatory.",
      "example": "a75a1d98-c52d-4a6b-a413-71e00b193c99",
      "deprecated": false
    },
    "remoteIp": {
      "type": "string",
      "description": "IP from where the customer is making the purchase. Your server's IP must not be entered.",
      "nullable": false,
      "deprecated": false,
      "example": null
    }
  },
  "required": [
    "customer",
    "billingType",
    "value",
    "nextDueDate",
    "cycle",
    "creditCard",
    "creditCardHolderInfo",
    "remoteIp"
  ]
}