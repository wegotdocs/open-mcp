import { z } from "zod"

export const inputParams = {
  "amount": z.string().describe("订单总金额：某笔交易订单优惠前的总金额，单位为【元】</br>\t<a href=\"https://mdn.alipayobjects.com/portal_ykdvdu/afts/img/A*UuuWRpmekegAAAAAAAAAAAAAAQAAAQ/original\" target=\"_blank\">实际案例一</a>\t<br><a href=\"https://mdn.alipayobjects.com/portal_ykdvdu/afts/img/A*kBkOTZpqP40AAAAAAAAAAAAAAQAAAQ/original\" target=\"_blank\">实际案例二</a>\t<br><a href=\"https://mdn.alipayobjects.com/portal_ykdvdu/afts/img/A*ZpkjTJQlFVAAAAAAAAAAAAAAAQAAAQ/original\" target=\"_blank\">实际案例三</a>").optional(),
  "buyer_id": z.string().describe("买家userId").optional(),
  "buyer_info": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `buyer_info` to the tool, first call the tool `expandSchema` with \"/properties/buyer_info\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "buyer_open_id": z.string().describe("用户open_id").optional(),
  "category_id": z.string().describe("标准服务类目").optional(),
  "discount_amount": z.string().describe("商户总计优惠金额：代表商户侧给予用户的总计优惠金额 （不包含选择支付宝付款时，支付宝给予的优惠减免金额），单位为【元】。</br>\t<a href=\"https://mdn.alipayobjects.com/portal_ykdvdu/afts/img/A*UuuWRpmekegAAAAAAAAAAAAAAQAAAQ/original\" target=\"_blank\">实际案例一</a>\t<br><a href=\"https://mdn.alipayobjects.com/portal_ykdvdu/afts/img/A*kBkOTZpqP40AAAAAAAAAAAAAAQAAAQ/original\" target=\"_blank\">实际案例二</a>\t<br><a href=\"https://mdn.alipayobjects.com/portal_ykdvdu/afts/img/A*ZpkjTJQlFVAAAAAAAAAAAAAAAQAAAQ/original\" target=\"_blank\">实际案例三</a>").optional(),
  "discount_info_list": z.array(z.object({ "discount_amount": z.string().describe("优惠金额").optional(), "discount_name": z.string().describe("优惠名称").optional(), "discount_page_link": z.string().describe("优惠跳转链接地址").optional(), "discount_quantity": z.number().int().describe("优惠数量").optional(), "external_discount_id": z.string().describe("外部优惠id").optional() })).describe("订单优惠信息").optional(),
  "ext_info": z.array(z.object({ "ext_key": z.string().describe("键值").optional(), "ext_value": z.string().describe("值").optional() })).describe("扩展信息，请参见 <a href=\"https://opendocs.alipay.com/mini/04zsxt?pathHash=654d4f10\">小程序订单中心模板</a>").optional(),
  "item_order_list": z.array(z.object({ "ext_info": z.array(z.object({ "ext_key": z.string().describe("键值").optional(), "ext_value": z.string().describe("值").optional() })).describe("扩展信息，请参见产品文档。小程序订单助手业务中，扩展参数必须传递素材id；其他业务场景参见对应的产品文档。").optional(), "item_id": z.string().describe("商品ID").optional(), "item_name": z.string().describe("商品名称").optional(), "quantity": z.number().int().describe("商品数量（单位：自拟）").optional(), "sku_id": z.string().describe("商品 sku id").optional(), "status": z.string().describe("商品状态枚举").optional(), "status_desc": z.string().describe("商品状态描述，默认无需传入，如需使用请联系业务负责人").optional(), "unit": z.string().describe("商品规格").optional(), "unit_price": z.string().describe("商品单价（单位：元）").optional() })).describe("商品信息列表").optional(),
  "journey_order_list": z.array(z.object({ "action": z.string().describe("操作动作").optional(), "ext_info": z.array(z.object({ "ext_key": z.string().describe("键值").optional(), "ext_value": z.string().describe("值").optional() })).describe("扩展信息").optional(), "journey_create_time": z.string().describe("行程创建时间").optional(), "journey_desc": z.string().describe("行程描述").optional(), "journey_elements": z.array(z.object({ "arrival": z.object({ "aoi_id": z.string().describe("支付宝域内aoiId").optional(), "city": z.string().describe("城市名").optional(), "ext_info": z.array(z.object({ "ext_key": z.string().describe("键值").optional(), "ext_value": z.string().describe("值").optional() })).describe("扩展信息").optional(), "location_id": z.string().describe("支付宝侧地点id").optional(), "location_id_type": z.string().describe("地点id类型").optional(), "merchant_division_id": z.string().describe("商户侧行政区划代码").optional(), "merchant_id": z.string().describe("(废弃)商户侧地点id").optional(), "merchant_poi": z.string().describe("商户侧poi信息").optional(), "name": z.string().describe("地点名称").optional(), "poi_id": z.string().describe("支付宝域内poiId").optional() }).optional(), "departure": z.object({ "aoi_id": z.string().describe("支付宝域内aoiId").optional(), "city": z.string().describe("城市名").optional(), "ext_info": z.array(z.object({ "ext_key": z.string().describe("键值").optional(), "ext_value": z.string().describe("值").optional() })).describe("扩展信息").optional(), "location_id": z.string().describe("支付宝侧地点id").optional(), "location_id_type": z.string().describe("地点id类型").optional(), "merchant_division_id": z.string().describe("商户侧行政区划代码").optional(), "merchant_id": z.string().describe("(废弃)商户侧地点id").optional(), "merchant_poi": z.string().describe("商户侧poi信息").optional(), "name": z.string().describe("地点名称").optional(), "poi_id": z.string().describe("支付宝域内poiId").optional() }).optional(), "duration": z.string().describe("行程时长").optional(), "end_time": z.string().describe("结束时间").optional(), "end_time_desc": z.string().describe("结束时间描述（非结构化）").optional(), "ext_info": z.array(z.object({ "ext_key": z.string().describe("键值").optional(), "ext_value": z.string().describe("值").optional() })).describe("扩展信息").optional(), "functional_services": z.array(z.object({ "content": z.string().describe("功能内容").optional(), "ext_info": z.array(z.object({ "ext_key": z.string().describe("键值").optional(), "ext_value": z.string().describe("值").optional() })).describe("扩展信息").optional(), "function_code": z.string().describe("功能码\t支持的功能码请与产品或对应技术确认").optional(), "function_name": z.string().describe("功能名称").optional(), "function_type": z.string().describe("功能类型").optional(), "function_url": z.string().describe("功能入口").optional(), "memo": z.string().describe("备注信息").optional() })).describe("功能服务列表").optional(), "passagers": z.array(z.object({ "cert_no": z.string().describe("证件号").optional(), "cert_type": z.string().describe("证件类型。").optional(), "ext_info": z.array(z.object({ "ext_key": z.string().describe("键值").optional(), "ext_value": z.string().describe("值").optional() })).describe("扩展信息").optional(), "mobile": z.string().describe("手机号").optional(), "name": z.string().describe("姓名").optional(), "open_id": z.string().describe("支付宝用户openId").optional(), "user_id": z.string().describe("支付宝用户ID，可以通过支付结果通知、用户授权等渠道获取").optional() })).describe("出行人").optional(), "service_change_info": z.object({ "change_status": z.string().describe("变更状态").optional(), "detail_url": z.string().describe("详情url").optional(), "ext_info": z.array(z.object({ "ext_key": z.string().describe("键值").optional(), "ext_value": z.string().describe("值").optional() })).describe("扩展信息").optional(), "remind_content": z.string().describe("提醒内容").optional() }).optional(), "service_provider": z.object({ "ext_info": z.array(z.object({ "ext_key": z.string().describe("键值").optional(), "ext_value": z.string().describe("值").optional() })).describe("扩展信息").optional(), "logo": z.string().describe("商户logo链接").optional(), "name": z.string().describe("商家名称").optional(), "short_name": z.string().describe("商家简称").optional() }).optional(), "start_time": z.string().describe("开始时间").optional(), "start_time_desc": z.string().describe("开始时间描述（非结构化）").optional() })).describe("行程元素列表").optional(), "journey_index": z.string().describe("描述本行程为整个行程中的第几程").optional(), "journey_modify_time": z.string().describe("行程修改时间").optional(), "merchant_journey_no": z.string().describe("商户行程单号").optional(), "status": z.string().describe("行程状态").optional(), "status_desc": z.string().describe("行程状态描述").optional(), "sub_type": z.string().describe("行程子类型").optional(), "title": z.string().describe("行程标题").optional(), "type": z.string().describe("行程类型").optional() })).describe("行程信息").optional(),
  "logistics_info_list": z.array(z.object({ "logistics_code": z.string().describe("物流公司编号。物流公司编号值请查看<a href=\"https://opendocs.alipay.com/mini/00au7e?highlight_field=logistics_code\" target=\"_blank\">产品文档</a>").optional(), "phone_no": z.string().describe("手机号后四位").optional(), "tracking_no": z.string().describe("物流单号").optional() })).describe("物流信息列表").optional(),
  "order_create_time": z.string().describe("订单创建时间").optional(),
  "order_modified_time": z.string().describe("订单修改时间").optional(),
  "order_pay_time": z.string().describe("订单支付时间").optional(),
  "order_type": z.string().describe("订单类型").optional(),
  "out_biz_no": z.string().describe("外部订单号\tout_biz_no唯一对应一笔订单，相同的订单需传入相同的out_biz_no").optional(),
  "pay_amount": z.string().describe("用户应付金额 ：用户最终结算时需要支付金额（不包含选择支付宝付款时，支付宝给予的优惠减免金额），单位为【元】</br>\t<a href=\"https://mdn.alipayobjects.com/portal_ykdvdu/afts/img/A*UuuWRpmekegAAAAAAAAAAAAAAQAAAQ/original\" target=\"_blank\">实际案例一</a>\t<br><a href=\"https://mdn.alipayobjects.com/portal_ykdvdu/afts/img/A*kBkOTZpqP40AAAAAAAAAAAAAAQAAAQ/original\" target=\"_blank\">实际案例二</a>\t<br><a href=\"https://mdn.alipayobjects.com/portal_ykdvdu/afts/img/A*ZpkjTJQlFVAAAAAAAAAAAAAAAQAAAQ/original\" target=\"_blank\">实际案例三</a>").optional(),
  "pay_timeout_express": z.string().describe("支付超时时间，超过时间支付宝自行关闭订单").optional(),
  "send_msg": z.string().describe("是否需要小程序订单代理发送模版消息。不传默认不发送").optional(),
  "service_code": z.string().describe("服务code：传入小程序后台提报的服务id，将订单与服务关联，有利于提高服务曝光机会；入参服务id的类目须与订单类型相符，若不相符将会报错；如订单类型为“外卖”，则入参的服务ID所对应的服务类目也必须得是”外卖“；service_code 通过 <a href=\"https://opendocs.alipay.com/mini/e1c835a1_alipay.open.app.service.apply\" target=\"_blank\">alipay.open.app.service.apply</a> ，(服务提报申请)接口创建服务后获取。").optional(),
  "shop_info": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `shop_info` to the tool, first call the tool `expandSchema` with \"/properties/shop_info\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "source_app": z.string().describe("用于区分用户下单的订单来源").optional(),
  "sync_content": z.string().describe("同步内容").optional(),
  "ticket_info": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `ticket_info` to the tool, first call the tool `expandSchema` with \"/properties/ticket_info\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "ticket_order_list": z.array(z.object({ "arrival": z.object({ "aoi_id": z.string().describe("支付宝域内aoiId").optional(), "city": z.string().describe("城市名").optional(), "ext_info": z.array(z.object({ "ext_key": z.string().describe("键值").optional(), "ext_value": z.string().describe("值").optional() })).describe("扩展信息").optional(), "location_id": z.string().describe("支付宝侧地点id").optional(), "location_id_type": z.string().describe("地点id类型").optional(), "merchant_division_id": z.string().describe("商户侧行政区划代码").optional(), "merchant_id": z.string().describe("(废弃)商户侧地点id").optional(), "merchant_poi": z.string().describe("商户侧poi信息").optional(), "name": z.string().describe("地点名称").optional(), "poi_id": z.string().describe("支付宝域内poiId").optional() }).optional(), "content": z.string().describe("凭证内容").optional(), "departure": z.object({ "aoi_id": z.string().describe("支付宝域内aoiId").optional(), "city": z.string().describe("城市名").optional(), "ext_info": z.array(z.object({ "ext_key": z.string().describe("键值").optional(), "ext_value": z.string().describe("值").optional() })).describe("扩展信息").optional(), "location_id": z.string().describe("支付宝侧地点id").optional(), "location_id_type": z.string().describe("地点id类型").optional(), "merchant_division_id": z.string().describe("商户侧行政区划代码").optional(), "merchant_id": z.string().describe("(废弃)商户侧地点id").optional(), "merchant_poi": z.string().describe("商户侧poi信息").optional(), "name": z.string().describe("地点名称").optional(), "poi_id": z.string().describe("支付宝域内poiId").optional() }).optional(), "effective_num": z.number().int().describe("凭证有效数").optional(), "end_time": z.string().describe("凭证结束时间").optional(), "ext_info": z.array(z.object({ "ext_key": z.string().describe("键值").optional(), "ext_value": z.string().describe("值").optional() })).describe("扩展信息").optional(), "face_value": z.string().describe("票面价").optional(), "functional_services": z.array(z.object({ "content": z.string().describe("功能内容").optional(), "ext_info": z.array(z.object({ "ext_key": z.string().describe("键值").optional(), "ext_value": z.string().describe("值").optional() })).describe("扩展信息").optional(), "function_code": z.string().describe("功能码\t支持的功能码请与产品或对应技术确认").optional(), "function_name": z.string().describe("功能名称").optional(), "function_type": z.string().describe("功能类型").optional(), "function_url": z.string().describe("功能入口").optional(), "memo": z.string().describe("备注信息").optional() })).describe("功能服务信息").optional(), "invalid_reason": z.string().describe("凭证失效原因").optional(), "locations": z.array(z.object({ "aoi_id": z.string().describe("支付宝域内aoiId").optional(), "city": z.string().describe("城市名").optional(), "ext_info": z.array(z.object({ "ext_key": z.string().describe("键值").optional(), "ext_value": z.string().describe("值").optional() })).describe("扩展信息").optional(), "location_id": z.string().describe("支付宝侧地点id").optional(), "location_id_type": z.string().describe("地点id类型").optional(), "merchant_division_id": z.string().describe("商户侧行政区划代码").optional(), "merchant_id": z.string().describe("(废弃)商户侧地点id").optional(), "merchant_poi": z.string().describe("商户侧poi信息").optional(), "name": z.string().describe("地点名称").optional(), "poi_id": z.string().describe("支付宝域内poiId").optional() })).describe("凭证可使用地点").optional(), "merchant_ticket_no": z.string().describe("商户侧凭证ID或核销码").optional(), "seat_infos": z.array(z.object({ "seat_class": z.string().describe("座位等级").optional(), "seat_no": z.string().describe("座位号").optional() })).describe("座位信息").optional(), "service_provider": z.object({ "ext_info": z.array(z.object({ "ext_key": z.string().describe("键值").optional(), "ext_value": z.string().describe("值").optional() })).describe("扩展信息").optional(), "logo_material_id": z.string().describe("参与方logo素材id\t开发者通过 alipay.merchant.item.file.upload(商品文件上传接口)上传图片，获取到对应的素材 ID( material_id )").optional(), "name": z.string().describe("参与方名称").optional(), "short_name": z.string().describe("参与方简称").optional(), "type": z.string().describe("参与方类型").optional(), "uid": z.string().describe("参与方支付宝uid").optional() }).optional(), "shops": z.array(z.object({ "address": z.string().describe("店铺地址").optional(), "alipay_shop_id": z.string().describe("蚂蚁门店shop_id").optional(), "ext_info": z.array(z.object({ "ext_key": z.string().describe("键值").optional(), "ext_value": z.string().describe("值").optional() })).describe("门店其他业务属性，不同业务场景KEY枚举值不同，使用前请参考产品文档").optional(), "merchant_shop_id": z.string().describe("商户门店id\t支持英文、数字的组合").optional(), "merchant_shop_link_page": z.string().describe("店铺详情链接地址").optional(), "name": z.string().describe("店铺名称").optional(), "phone_num": z.string().describe("联系电话-支持固话或手机号 仅支持数字、+、- 。例如 手机：1380***1111、固话：021-888**888").optional(), "type": z.string().describe("仅当alipay_shop_id字段值为非标准蚂蚁门店时使用，其他场景无需传入").optional() })).describe("凭证可使用门店列表").optional(), "start_time": z.string().describe("凭证开始时间").optional(), "status": z.string().describe("凭证状态").optional(), "ticket_create_time": z.string().describe("凭证创建时间").optional(), "ticket_modify_time": z.string().describe("凭证修改时间").optional(), "ticket_num": z.number().int().describe("凭证购买数").optional(), "ticket_users": z.array(z.object({ "cert_no": z.string().describe("证件号").optional(), "cert_type": z.string().describe("证件类型。").optional(), "ext_info": z.array(z.object({ "ext_key": z.string().describe("键值").optional(), "ext_value": z.string().describe("值").optional() })).describe("扩展信息").optional(), "mobile": z.string().describe("手机号").optional(), "name": z.string().describe("姓名").optional(), "open_id": z.string().describe("支付宝用户openId").optional(), "user_id": z.string().describe("支付宝用户ID，可以通过支付结果通知、用户授权等渠道获取").optional() })).describe("凭证使用者信息").optional(), "title": z.string().describe("凭证标题").optional(), "vehicle_info": z.object({ "license_plate_no": z.string().describe("交通工具牌照号，如车牌号等").optional(), "memo": z.string().describe("备注信息").optional(), "shift_no": z.string().describe("班次").optional() }).optional() })).describe("凭证信息").optional(),
  "trade_no": z.string().describe("订单所对应的支付宝交易号").optional(),
  "trade_type": z.string().describe("交易号类型").optional()
}