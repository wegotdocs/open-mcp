import { z } from "zod"

export const inputParams = {
  "account_day": z.string().describe("出账日").optional(),
  "accrued_date": z.string().describe("应收日期(yyyyMMdd)").optional(),
  "adjust_amt": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `adjust_amt` to the tool, first call the tool `expandSchema` with \"/properties/monthly_bill/properties/adjust_amt\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "analysis_dmsn_1": z.string().describe("分析维度1").optional(),
  "analysis_dmsn_2": z.string().describe("分析维度2").optional(),
  "analysis_dmsn_3": z.string().describe("分析维度3").optional(),
  "analysis_dmsn_4": z.string().describe("分析维度4").optional(),
  "arrangement_no": z.string().describe("合约号，商户签约产品对应的合约号").optional(),
  "bill_amt": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `bill_amt` to the tool, first call the tool `expandSchema` with \"/properties/monthly_bill/properties/bill_amt\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "bill_end_date": z.string().describe("账单结束日期").optional(),
  "bill_month": z.string().describe("账单月").optional(),
  "bill_no": z.string().describe("月账单号,唯一标识月账单的ID").optional(),
  "bill_start_date": z.string().describe("账单开始日期").optional(),
  "bill_type": z.string().describe("账单类型\r\t21：应收月账单\r\t目前仅支持该类型的账单类型").optional(),
  "charge_item_code": z.string().describe("收费项编码").optional(),
  "charge_type": z.string().describe("计费类型\r\t01：云在线计费，02：离线计费，03：老主站计收费，04：芝麻在线计收费").optional(),
  "check_status": z.string().describe("出账状态\r\t01：账单生成，02：待确认出账，03：已出账，04：客户已对账，05：对账差异，06：部分出账").optional(),
  "checked_amt": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `checked_amt` to the tool, first call the tool `expandSchema` with \"/properties/monthly_bill/properties/checked_amt\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "checking_amt": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `checking_amt` to the tool, first call the tool `expandSchema` with \"/properties/monthly_bill/properties/checking_amt\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "clcn_basic_amt": z.number().int().describe("计算依据").optional(),
  "clcn_basic_type": z.string().describe("计算依据类型\r\t01：交易金额，02：交易笔数，03：交易张数，04：资费依据扩展，05：其他").optional(),
  "clcn_method": z.string().describe("计算方法\r\t01：差额累进，02：全额累进，03：按传入金额收费，04：价格包量，05：包时间周期，06：按时间全额累进，07：包时间周期差额累进，08：期间差额累进，09：期间全额累进，10：包时间周期单笔，11：标准单笔计费，12：包时间周期单笔-按照传入金额计费，13：期间靠档差额累进，靠档计息使用，14：自定义").optional(),
  "freeze_amt": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `freeze_amt` to the tool, first call the tool `expandSchema` with \"/properties/monthly_bill/properties/freeze_amt\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "gmt_create": z.string().describe("创建时间（创建备份时需要）").optional(),
  "gmt_modified": z.string().describe("修改时间（创建备份时需要）").optional(),
  "gmt_pay": z.string().describe("付款时间").optional(),
  "inst_id": z.string().describe("分支机构号").optional(),
  "invoice_amt": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `invoice_amt` to the tool, first call the tool `expandSchema` with \"/properties/monthly_bill/properties/invoice_amt\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "invoiced_amt": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `invoiced_amt` to the tool, first call the tool `expandSchema` with \"/properties/monthly_bill/properties/invoiced_amt\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "ip_id": z.string().describe("结算对象参与者标识").optional(),
  "ip_name": z.string().describe("参与者名字").optional(),
  "ip_role_id": z.string().describe("结算对象参与者角色标识").optional(),
  "last_moder": z.string().describe("最后修改人").optional(),
  "link_invoice_amt": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `link_invoice_amt` to the tool, first call the tool `expandSchema` with \"/properties/monthly_bill/properties/link_invoice_amt\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "pay_original": z.string().describe("付款来源\r\t1：主账务，2：包量，3：预收，4：预存，5：银行，6：积分，7：统一支付，8：支付受理").optional(),
  "pay_status": z.string().describe("付款状态\r\t01：待结算；02：部分结算；03：结算完成").optional(),
  "pay_way": z.string().describe("付款方式\r\t1：资金；2：包量").optional(),
  "payee_account": z.string().describe("收款方账号").optional(),
  "payer_account": z.string().describe("付款方账号").optional(),
  "payer_ip_role_id": z.string().describe("扣款对象pid").optional(),
  "prod_code": z.string().describe("产品码").optional(),
  "received_amt": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `received_amt` to the tool, first call the tool `expandSchema` with \"/properties/monthly_bill/properties/received_amt\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "record_id": z.string().describe("记录id，账单全局唯一号").optional(),
  "service_amt": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `service_amt` to the tool, first call the tool `expandSchema` with \"/properties/monthly_bill/properties/service_amt\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "settle_type": z.string().describe("结算类型\r\t01：实时；02：预收；03：后收；04：周期结算；05：按日汇总结算；09：延期结算").optional(),
  "sign_ip_id": z.string().describe("签约对象参与者标识").optional(),
  "sign_ip_role_id": z.string().describe("签约对象参与者角色标识").optional(),
  "stl_ip_role_id": z.string().describe("结算对象PID").optional(),
  "tax_amt": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `tax_amt` to the tool, first call the tool `expandSchema` with \"/properties/monthly_bill/properties/tax_amt\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "tax_rate": z.number().int().describe("税率").optional(),
  "tax_type": z.string().describe("税收类型，01：增值税，02：营业税\r\t营业税已经在大部分行业废弃，要传入需咨询后再确认").optional(),
  "to_writeoff_detail_count": z.number().int().describe("待核销明细数量").optional(),
  "type": z.string().describe("账单分类 1应收，2返点").optional(),
  "writeoff_detail_dount": z.number().int().describe("核销明细数量").optional(),
  "writingoff_amt": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `writingoff_amt` to the tool, first call the tool `expandSchema` with \"/properties/monthly_bill/properties/writingoff_amt\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional()
}