import { z } from "zod"

export const inputParams = {
  "goods_detail": z.array(z.object({ "alipay_goods_id": z.string().describe("支付宝定义的统一商品编号").optional(), "body": z.string().describe("商品描述信息").optional(), "categories_tree": z.string().describe("商品类目树，从商品类目根节点到叶子节点的类目id组成，类目id值使用|分割").optional(), "goods_category": z.string().describe("商品类目").optional(), "goods_id": z.string().describe("商品的编号，该参数传入支付券上绑定商品goods_id,\t倘若无支付券需要消费，该字段传入商品最小粒度的商品ID（如：若商品有sku粒度，则传商户sku粒度的ID）").optional(), "goods_name": z.string().describe("商品名称").optional(), "out_item_id": z.string().describe("商家侧小程序商品ID，指商家提报给小程序商品库的商品。当前接口的extend_params.trade_component_order_id字段不为空时该字段必填，且与交易组件订单参数保持一致。了解小程序商品请参考：<a href=\"https://opendocs.alipay.com/mini/06uila?pathHash=63b6fba7\">https://opendocs.alipay.com/mini/06uila?pathHash=63b6fba7</a>").optional(), "out_sku_id": z.string().describe("商家侧小程序商品ID，指商家提报给小程序商品库的商品。当前接口的extend_params.trade_component_order_id字段不为空时该字段必填，且与交易组件订单参数保持一致。了解小程序商品请参考：<a target=\"_blank\" href=\"https://opendocs.alipay.com/mini/06uila?pathHash=63b6fba7\" >https://opendocs.alipay.com/mini/06uila?pathHash=63b6fba7</a>").optional(), "price": z.string().describe("商品单价，单位为元").optional(), "quantity": z.number().int().describe("商品数量").optional(), "show_url": z.string().describe("商品的展示地址").optional() })).describe("退款包含的商品列表信息，Json格式。").optional(),
  "operator_id": z.string().describe("商户的操作员编号").optional(),
  "org_pid": z.string().describe("银行间联模式下有用，其它场景请不要使用；\r\t双联通过该参数指定需要退款的交易所属收单机构的pid;").optional(),
  "out_request_no": z.string().describe("退款请求号。\t标识一次退款请求，需要保证在交易号下唯一，如需部分退款，则此参数必传。\t注：针对同一次退款请求，如果调用接口失败或异常了，重试时需要保证退款请求号不能变更，防止该笔交易重复退款。支付宝会保证同样的退款请求号多次请求只会退一次。").optional(),
  "out_trade_no": z.string().describe("商户订单号。\t订单支付时传入的商户订单号，商家自定义且保证商家系统中唯一。与支付宝交易号 trade_no 不能同时为空。").optional(),
  "query_options": z.array(z.string()).describe("查询选项。\t商户通过上送该参数来定制同步需要额外返回的信息字段，数组格式。").optional(),
  "refund_advance_account": z.string().describe("指定垫资退款账号主体，可能是用户id或登录名").optional(),
  "refund_advance_account_type": z.string().describe("指定垫资退款账号的类型，取值范围：default，userId，loginName").optional(),
  "refund_amount": z.string().describe("退款金额。\t需要退款的金额，该金额不能大于订单金额，单位为元，支持两位小数。\t注：如果正向交易使用了营销，该退款金额包含营销金额，支付宝会按业务规则分配营销和买家自有资金分别退多少，默认优先退买家的自有资金。如交易总金额100元，用户支付时使用了80元自有资金和20元无资金流的营销券，商家实际收款80元。如果首次请求退款60元，则60元全部从商家收款资金扣除退回给用户自有资产；如果再请求退款40元，则从商家收款资金扣除20元退回用户资产以及把20元的营销券退回给用户（券是否可再使用取决于券的规则配置）。").optional(),
  "refund_currency": z.string().describe("订单退款币种信息。支持英镑：GBP、港币：HKD、美元：USD、新加坡元：SGD、日元：JPY、加拿大元：CAD、澳元：AUD、欧元：EUR、新西兰元：NZD、韩元：KRW、泰铢：THB、瑞士法郎：CHF、瑞典克朗：SEK、丹麦克朗：DKK、挪威克朗：NOK、马来西亚林吉特：MYR、印尼卢比：IDR、菲律宾比索：PHP、毛里求斯卢比：MUR、以色列新谢克尔：ILS、斯里兰卡卢比：LKR、俄罗斯卢布：RUB、阿联酋迪拉姆：AED、捷克克朗：CZK、南非兰特：ZAR、人民币：CNY").optional(),
  "refund_goods_detail": z.array(z.object({ "goods_id": z.string().describe("商品编号。\t对应支付时传入的goods_id").optional(), "out_certificate_no_list": z.array(z.string()).describe("外部商品凭证编号列表").optional(), "out_item_id": z.string().describe("商家侧小程序商品ID，对应支付时传入的out_item_id").optional(), "out_sku_id": z.string().describe("商家侧小程序商品sku ID，对应支付时传入的out_sku_id").optional(), "refund_amount": z.string().describe("该商品的退款总金额，单位为元").optional() })).describe("退款包含的商品列表信息").optional(),
  "refund_reason": z.string().describe("退款原因说明。\t商家自定义，将在会在商户和用户的pc退款账单详情中展示").optional(),
  "refund_royalty_parameters": z.array(z.object({ "amount": z.string().describe("分账的金额，单位为元").optional(), "amount_percentage": z.number().int().describe("分账信息中分账百分比。取值范围为大于0，少于或等于100的整数。").optional(), "desc": z.string().describe("分账描述").optional(), "royalty_scene": z.string().describe("可选值：达人佣金、平台服务费、技术服务费、其他").optional(), "royalty_type": z.string().describe("分账类型.").optional(), "trans_in": z.string().describe("收入方账户。如果收入方账户类型为userId，本参数为收入方的支付宝账号对应的支付宝唯一用户号，以2088开头的纯16位数字；如果收入方类型为cardAliasNo，本参数为收入方在支付宝绑定的卡编号；如果收入方类型为loginName，本参数为收入方的支付宝登录号；").optional(), "trans_in_name": z.string().describe("分账收款方姓名，上送则进行姓名与支付宝账号的一致性校验，校验不一致则分账失败。不上送则不进行姓名校验").optional(), "trans_in_type": z.string().describe("收入方账户类型。").optional(), "trans_out": z.string().describe("支出方账户。如果支出方账户类型为userId，本参数为支出方的支付宝账号对应的支付宝唯一用户号，以2088开头的纯16位数字；如果支出方类型为loginName，本参数为支出方的支付宝登录号。 泛金融类商户分账时，该字段不要上送。").optional(), "trans_out_type": z.string().describe("支出方账户类型。").optional() })).describe("退分账明细信息。\t 注： 1.当面付且非直付通模式无需传入退分账明细，系统自动按退款金额与订单金额的比率，从收款方和分账收入方退款，不支持指定退款金额与退款方。 \t2.直付通模式，电脑网站支付，手机 APP 支付，手机网站支付产品，须在退款请求中明确是否退分账，从哪个分账收入方退，退多少分账金额；如不明确，默认从收款方退款，收款方余额不足退款失败。不支持系统按比率退款。").optional(),
  "refund_trans_out": z.string().describe("指定退款账号，对应指定账号退款合约中的约定账号\t\t与refund_trans_out_type绑定使用\t1、refund_trans_out_type=userId时，传入对应的支付宝2088账号\t2、refund_trans_out_type=loginName时，传入对应的支付宝账号登录名").optional(),
  "refund_trans_out_type": z.string().describe("指定退款账号类型\tuserId：支付宝账号id\tloginName：支付宝账号登录名").optional(),
  "related_settle_confirm_no": z.string().describe("针对账期交易，在确认结算后退款的话，需要指定确认结算时的结算单号。").optional(),
  "store_id": z.string().describe("商户门店编号，由商家自定义。需保证当前商户下唯一。").optional(),
  "terminal_id": z.string().describe("商户的终端编号").optional(),
  "trade_no": z.string().describe("支付宝交易号。\t和商户订单号 out_trade_no 不能同时为空，两者同时存在时，优先取值trade_no").optional()
}