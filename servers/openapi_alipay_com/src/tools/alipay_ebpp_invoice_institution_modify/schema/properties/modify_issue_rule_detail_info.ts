import { z } from "zod"

export const inputParams = {
  "add_issue_rule_list": z.array(z.object({ "effective_period": z.string().describe("生效时间段").optional(), "invalid_mode": z.number().int().describe("累计类型，默认为0\t可选值：0（不可累计）、1（可累计）、2（累计天数）、3（累计到指定日期）").optional(), "invalid_mode_value": z.string().describe("累计类型值").optional(), "issue_amount_value": z.string().describe("发放金额，单位元").optional(), "issue_end_date": z.string().describe("发放规则有效结束时间").optional(), "issue_rule_id": z.string().describe("发放规则id").optional(), "issue_rule_name": z.string().describe("发放规则名称").optional(), "issue_start_date": z.string().describe("发放规则有效起始时间").optional(), "issue_type": z.string().describe("发放类型").optional(), "outer_source_id": z.string().describe("外部发放规则id").optional(), "quota_type": z.string().describe("额度类型").optional(), "share_mode": z.number().int().describe("是否可转赠").optional(), "target_id": z.string().describe("目标id").optional(), "target_type": z.string().describe("发放规则归属的目标类型").optional() })).describe("新增发放规则列表").optional(),
  "delete_issue_rule_id_list": z.array(z.string()).describe("删除的发放规则id列表").optional(),
  "modify_issue_rule_list": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `modify_issue_rule_list` to the tool, first call the tool `expandSchema` with \"/properties/modify_issue_rule_detail_info/properties/modify_issue_rule_list\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional()
}