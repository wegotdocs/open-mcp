import { z } from "zod"

export const inputParams = {
  "merchant_base": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `merchant_base` to the tool, first call the tool `expandSchema` with \"/properties/merchant_base\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "sub_merchant_common_info": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `sub_merchant_common_info` to the tool, first call the tool `expandSchema` with \"/properties/sub_merchant_common_info\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "sub_merchant_list": z.array(z.object({ "extend_fields": z.string().describe("扩展字段，为json字符串格式；入驻缴费后开票的产品如果需要传入自定义开票链接，由此字段传入。").optional(), "industry": z.string().describe("商户行业，枚举值如下：subway：地铁，etc：ETC，online_car_hailing：网约车，catering：餐饮，hotel：酒店，convenience_store：便利店，oil：加油，insurance：保险，service_provider：运营商，life_payment：生活缴费，political：政务，other：其他").optional(), "pid": z.string().describe("开票商户pid，入驻支付即开票场景的时候，非登录账号入驻模式，则该字段必传").optional(), "register_no": z.string().describe("商户门店税号。").optional(), "sub_m_name": z.string().describe("商户门店全称。").optional(), "sub_m_short_name": z.string().describe("商户门店简称").optional() })).describe("商户门店列表信息，最多传入30个门店信息").optional()
}