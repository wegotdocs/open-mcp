import { z } from "zod"

export const inputParams = {
  "card_info": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `card_info` to the tool, first call the tool `expandSchema` with \"/properties/card_info\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "ext_info": z.string().describe("扩展信息(暂时无用)").optional(),
  "mcard_style_info": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `mcard_style_info` to the tool, first call the tool `expandSchema` with \"/properties/mcard_style_info\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "merchant_card_msg_info": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `merchant_card_msg_info` to the tool, first call the tool `expandSchema` with \"/properties/merchant_card_msg_info\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "notify_messages": z.array(z.object({ "change_reason": z.string().describe("用户提醒信息，按如下格式拼装，需要ISV提供change_reason。\t\t积分变动模板：{change_reason}，您的积分有变动\t\t余额变动模板：{change_reason}，您的余额有变动\t\t等级变更无需提供原因。").optional(), "ext_info": z.string().describe("JSON格式扩展信息，主要是发送消息中的变量").optional(), "message_type": z.string().describe("消息类型，每种消息都定义了固定消息模板").optional() })).describe("注意：此字段已废弃。\t卡信息变更通知消息\t1、在列表中定义的消息，才会发送给用户，消息格式一定。\t2、根据卡信息变更情况，一次可发送多个消息").optional(),
  "occur_time": z.string().describe("业务发生时间，时间格式为\"yyyy-MM-dd HH:mm:ss\"。").optional(),
  "paid_outer_card_info": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `paid_outer_card_info` to the tool, first call the tool `expandSchema` with \"/properties/paid_outer_card_info\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "target_card_no": z.string().describe("支付宝业务卡号：1、3.0（历史版本）版本来源于alipay.marketing.card.open(会员卡开卡)接口开卡后获取的 card_info.biz_card_no 值；2、极速版来源于spi.alipay.user.opencard.get(会员卡开通，获取会员卡信息)请求参数中的biz_card_no值。").optional(),
  "target_card_no_type": z.string().describe("卡号ID类型").optional()
}