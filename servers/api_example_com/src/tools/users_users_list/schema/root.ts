import { z } from "zod"

export const inputParamsSchema = {
  "date_joined": z.array(z.string().datetime({ offset: true })).optional(),
  "date_joined__empty": z.boolean().optional(),
  "date_joined__gt": z.array(z.string().datetime({ offset: true })).optional(),
  "date_joined__gte": z.array(z.string().datetime({ offset: true })).optional(),
  "date_joined__lt": z.array(z.string().datetime({ offset: true })).optional(),
  "date_joined__lte": z.array(z.string().datetime({ offset: true })).optional(),
  "date_joined__n": z.array(z.string().datetime({ offset: true })).optional(),
  "email": z.array(z.string()).optional(),
  "email__empty": z.boolean().optional(),
  "email__ic": z.array(z.string()).optional(),
  "email__ie": z.array(z.string()).optional(),
  "email__iew": z.array(z.string()).optional(),
  "email__isw": z.array(z.string()).optional(),
  "email__n": z.array(z.string()).optional(),
  "email__nic": z.array(z.string()).optional(),
  "email__nie": z.array(z.string()).optional(),
  "email__niew": z.array(z.string()).optional(),
  "email__nisw": z.array(z.string()).optional(),
  "first_name": z.array(z.string()).optional(),
  "first_name__empty": z.boolean().optional(),
  "first_name__ic": z.array(z.string()).optional(),
  "first_name__ie": z.array(z.string()).optional(),
  "first_name__iew": z.array(z.string()).optional(),
  "first_name__isw": z.array(z.string()).optional(),
  "first_name__n": z.array(z.string()).optional(),
  "first_name__nic": z.array(z.string()).optional(),
  "first_name__nie": z.array(z.string()).optional(),
  "first_name__niew": z.array(z.string()).optional(),
  "first_name__nisw": z.array(z.string()).optional(),
  "group": z.array(z.string()).describe("Group (name)").optional(),
  "group__n": z.array(z.string()).describe("Group (name)").optional(),
  "group_id": z.array(z.number().int()).describe("Group").optional(),
  "group_id__n": z.array(z.number().int()).describe("Group").optional(),
  "id": z.array(z.number().int()).optional(),
  "id__empty": z.boolean().optional(),
  "id__gt": z.array(z.number().int()).optional(),
  "id__gte": z.array(z.number().int()).optional(),
  "id__lt": z.array(z.number().int()).optional(),
  "id__lte": z.array(z.number().int()).optional(),
  "id__n": z.array(z.number().int()).optional(),
  "is_active": z.boolean().optional(),
  "is_staff": z.boolean().optional(),
  "is_superuser": z.boolean().optional(),
  "last_login": z.array(z.string().datetime({ offset: true })).optional(),
  "last_login__empty": z.boolean().optional(),
  "last_login__gt": z.array(z.string().datetime({ offset: true })).optional(),
  "last_login__gte": z.array(z.string().datetime({ offset: true })).optional(),
  "last_login__lt": z.array(z.string().datetime({ offset: true })).optional(),
  "last_login__lte": z.array(z.string().datetime({ offset: true })).optional(),
  "last_login__n": z.array(z.string().datetime({ offset: true })).optional(),
  "last_name": z.array(z.string()).optional(),
  "last_name__empty": z.boolean().optional(),
  "last_name__ic": z.array(z.string()).optional(),
  "last_name__ie": z.array(z.string()).optional(),
  "last_name__iew": z.array(z.string()).optional(),
  "last_name__isw": z.array(z.string()).optional(),
  "last_name__n": z.array(z.string()).optional(),
  "last_name__nic": z.array(z.string()).optional(),
  "last_name__nie": z.array(z.string()).optional(),
  "last_name__niew": z.array(z.string()).optional(),
  "last_name__nisw": z.array(z.string()).optional(),
  "limit": z.number().int().describe("Number of results to return per page.").optional(),
  "notification_group_id": z.array(z.number().int()).describe("Notification group (ID)").optional(),
  "notification_group_id__n": z.array(z.number().int()).describe("Notification group (ID)").optional(),
  "offset": z.number().int().describe("The initial index from which to return the results.").optional(),
  "ordering": z.string().describe("Which field to use when ordering the results.").optional(),
  "permission_id": z.array(z.number().int()).describe("Permission (ID)").optional(),
  "permission_id__n": z.array(z.number().int()).describe("Permission (ID)").optional(),
  "q": z.string().describe("Search").optional(),
  "username": z.array(z.string()).optional(),
  "username__empty": z.boolean().optional(),
  "username__ic": z.array(z.string()).optional(),
  "username__ie": z.array(z.string()).optional(),
  "username__iew": z.array(z.string()).optional(),
  "username__isw": z.array(z.string()).optional(),
  "username__n": z.array(z.string()).optional(),
  "username__nic": z.array(z.string()).optional(),
  "username__nie": z.array(z.string()).optional(),
  "username__niew": z.array(z.string()).optional(),
  "username__nisw": z.array(z.string()).optional()
}