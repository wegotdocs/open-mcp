import { z } from "zod"

export const inputParamsSchema = {
  "style_id": z.number().int(),
  "rename_only": z.union([z.number().int(), z.null()]).describe("Rename only? Empty / 0: No, Any / 1: Yes").optional(),
  "session_id": z.string().optional(),
  "name": z.string(),
  "display_name": z.union([z.string(), z.null()]).optional(),
  "description": z.union([z.string(), z.null()]).optional(),
  "default": z.union([z.object({ "id": z.union([z.number().int(), z.null()]).describe("Provide id when updating.").optional(), "media_id": z.union([z.number().int(), z.null()]).optional(), "mirror_block_index": z.union([z.number().int(), z.null()]).optional(), "content": z.union([z.string(), z.null()]).optional(), "content_source": z.union([z.string(), z.null()]).optional(), "extra_content": z.union([z.record(z.any()), z.null()]).optional(), "argument": z.union([z.string(), z.null()]).optional(), "fore_color": z.union([z.string(), z.null()]).describe("#RGBA. Ex: #AABBCCFF").optional(), "back_color": z.union([z.string(), z.null()]).describe("#RGBA. Ex: #AABBCCFF").optional(), "font_prop": z.union([z.record(z.any()), z.null()]).optional(), "stretch": z.union([z.number().int(), z.null()]).optional(), "scale": z.union([z.number().int(), z.null()]).optional(), "interactive": z.union([z.boolean(), z.null()]).optional(), "volume": z.union([z.number().int(), z.null()]).optional(), "vertical_align": z.union([z.number().int(), z.null()]).describe("0: Top, 1: Middle, 2: Bottom").optional(), "horizontal_align": z.union([z.number().int(), z.null()]).describe("0: Left, 1: Middle, 2: Right").optional(), "margin": z.union([z.array(z.number().int()), z.null()]).describe("[Top, Right, Bottom, Left]").optional(), "padding": z.union([z.array(z.number().int()), z.null()]).describe("[Top, Right, Bottom, Left]").optional(), "border_prop": z.union([z.record(z.any()), z.null()]).optional() }), z.null()]).optional(),
  "pressed": z.union([z.object({ "id": z.union([z.number().int(), z.null()]).describe("Provide id when updating.").optional(), "media_id": z.union([z.number().int(), z.null()]).optional(), "mirror_block_index": z.union([z.number().int(), z.null()]).optional(), "content": z.union([z.string(), z.null()]).optional(), "content_source": z.union([z.string(), z.null()]).optional(), "extra_content": z.union([z.record(z.any()), z.null()]).optional(), "argument": z.union([z.string(), z.null()]).optional(), "fore_color": z.union([z.string(), z.null()]).describe("#RGBA. Ex: #AABBCCFF").optional(), "back_color": z.union([z.string(), z.null()]).describe("#RGBA. Ex: #AABBCCFF").optional(), "font_prop": z.union([z.record(z.any()), z.null()]).optional(), "stretch": z.union([z.number().int(), z.null()]).optional(), "scale": z.union([z.number().int(), z.null()]).optional(), "interactive": z.union([z.boolean(), z.null()]).optional(), "volume": z.union([z.number().int(), z.null()]).optional(), "vertical_align": z.union([z.number().int(), z.null()]).describe("0: Top, 1: Middle, 2: Bottom").optional(), "horizontal_align": z.union([z.number().int(), z.null()]).describe("0: Left, 1: Middle, 2: Right").optional(), "margin": z.union([z.array(z.number().int()), z.null()]).describe("[Top, Right, Bottom, Left]").optional(), "padding": z.union([z.array(z.number().int()), z.null()]).describe("[Top, Right, Bottom, Left]").optional(), "border_prop": z.union([z.record(z.any()), z.null()]).optional() }), z.null()]).optional(),
  "focused": z.union([z.object({ "id": z.union([z.number().int(), z.null()]).describe("Provide id when updating.").optional(), "media_id": z.union([z.number().int(), z.null()]).optional(), "mirror_block_index": z.union([z.number().int(), z.null()]).optional(), "content": z.union([z.string(), z.null()]).optional(), "content_source": z.union([z.string(), z.null()]).optional(), "extra_content": z.union([z.record(z.any()), z.null()]).optional(), "argument": z.union([z.string(), z.null()]).optional(), "fore_color": z.union([z.string(), z.null()]).describe("#RGBA. Ex: #AABBCCFF").optional(), "back_color": z.union([z.string(), z.null()]).describe("#RGBA. Ex: #AABBCCFF").optional(), "font_prop": z.union([z.record(z.any()), z.null()]).optional(), "stretch": z.union([z.number().int(), z.null()]).optional(), "scale": z.union([z.number().int(), z.null()]).optional(), "interactive": z.union([z.boolean(), z.null()]).optional(), "volume": z.union([z.number().int(), z.null()]).optional(), "vertical_align": z.union([z.number().int(), z.null()]).describe("0: Top, 1: Middle, 2: Bottom").optional(), "horizontal_align": z.union([z.number().int(), z.null()]).describe("0: Left, 1: Middle, 2: Right").optional(), "margin": z.union([z.array(z.number().int()), z.null()]).describe("[Top, Right, Bottom, Left]").optional(), "padding": z.union([z.array(z.number().int()), z.null()]).describe("[Top, Right, Bottom, Left]").optional(), "border_prop": z.union([z.record(z.any()), z.null()]).optional() }), z.null()]).optional(),
  "disabled": z.union([z.object({ "id": z.union([z.number().int(), z.null()]).describe("Provide id when updating.").optional(), "media_id": z.union([z.number().int(), z.null()]).optional(), "mirror_block_index": z.union([z.number().int(), z.null()]).optional(), "content": z.union([z.string(), z.null()]).optional(), "content_source": z.union([z.string(), z.null()]).optional(), "extra_content": z.union([z.record(z.any()), z.null()]).optional(), "argument": z.union([z.string(), z.null()]).optional(), "fore_color": z.union([z.string(), z.null()]).describe("#RGBA. Ex: #AABBCCFF").optional(), "back_color": z.union([z.string(), z.null()]).describe("#RGBA. Ex: #AABBCCFF").optional(), "font_prop": z.union([z.record(z.any()), z.null()]).optional(), "stretch": z.union([z.number().int(), z.null()]).optional(), "scale": z.union([z.number().int(), z.null()]).optional(), "interactive": z.union([z.boolean(), z.null()]).optional(), "volume": z.union([z.number().int(), z.null()]).optional(), "vertical_align": z.union([z.number().int(), z.null()]).describe("0: Top, 1: Middle, 2: Bottom").optional(), "horizontal_align": z.union([z.number().int(), z.null()]).describe("0: Left, 1: Middle, 2: Right").optional(), "margin": z.union([z.array(z.number().int()), z.null()]).describe("[Top, Right, Bottom, Left]").optional(), "padding": z.union([z.array(z.number().int()), z.null()]).describe("[Top, Right, Bottom, Left]").optional(), "border_prop": z.union([z.record(z.any()), z.null()]).optional() }), z.null()]).optional()
}