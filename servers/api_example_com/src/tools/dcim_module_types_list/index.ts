import { inputParamsSchema } from "./schema/root.js"
import type { OpenMCPServerTool } from "@open-mcp/core"

const tool: OpenMCPServerTool = {
  "toolName": "dcim_module_types_list",
  "toolDescription": "Get a list of module type objects.",
  "baseUrl": "https://api.example.com",
  "path": "/api/dcim/module-types/",
  "method": "get",
  "security": [
    {
      "key": "sessionid",
      "value": "<mcp-env-var>SESSIONID</mcp-env-var>",
      "in": "cookie",
      "envVarName": "SESSIONID"
    },
    {
      "key": "Authorization",
      "value": "<mcp-env-var>AUTHORIZATION</mcp-env-var>",
      "in": "header",
      "envVarName": "AUTHORIZATION"
    }
  ],
  "paramsMap": {
    "query": {
      "airflow": "airflow",
      "console_ports": "console_ports",
      "console_server_ports": "console_server_ports",
      "created": "created",
      "created__empty": "created__empty",
      "created__gt": "created__gt",
      "created__gte": "created__gte",
      "created__lt": "created__lt",
      "created__lte": "created__lte",
      "created__n": "created__n",
      "created_by_request": "created_by_request",
      "description": "description",
      "description__empty": "description__empty",
      "description__ic": "description__ic",
      "description__ie": "description__ie",
      "description__iew": "description__iew",
      "description__isw": "description__isw",
      "description__n": "description__n",
      "description__nic": "description__nic",
      "description__nie": "description__nie",
      "description__niew": "description__niew",
      "description__nisw": "description__nisw",
      "id": "id",
      "id__empty": "id__empty",
      "id__gt": "id__gt",
      "id__gte": "id__gte",
      "id__lt": "id__lt",
      "id__lte": "id__lte",
      "id__n": "id__n",
      "interfaces": "interfaces",
      "last_updated": "last_updated",
      "last_updated__empty": "last_updated__empty",
      "last_updated__gt": "last_updated__gt",
      "last_updated__gte": "last_updated__gte",
      "last_updated__lt": "last_updated__lt",
      "last_updated__lte": "last_updated__lte",
      "last_updated__n": "last_updated__n",
      "limit": "limit",
      "manufacturer": "manufacturer",
      "manufacturer__n": "manufacturer__n",
      "manufacturer_id": "manufacturer_id",
      "manufacturer_id__n": "manufacturer_id__n",
      "model": "model",
      "model__empty": "model__empty",
      "model__ic": "model__ic",
      "model__ie": "model__ie",
      "model__iew": "model__iew",
      "model__isw": "model__isw",
      "model__n": "model__n",
      "model__nic": "model__nic",
      "model__nie": "model__nie",
      "model__niew": "model__niew",
      "model__nisw": "model__nisw",
      "modified_by_request": "modified_by_request",
      "offset": "offset",
      "ordering": "ordering",
      "part_number": "part_number",
      "part_number__empty": "part_number__empty",
      "part_number__ic": "part_number__ic",
      "part_number__ie": "part_number__ie",
      "part_number__iew": "part_number__iew",
      "part_number__isw": "part_number__isw",
      "part_number__n": "part_number__n",
      "part_number__nic": "part_number__nic",
      "part_number__nie": "part_number__nie",
      "part_number__niew": "part_number__niew",
      "part_number__nisw": "part_number__nisw",
      "pass_through_ports": "pass_through_ports",
      "power_outlets": "power_outlets",
      "power_ports": "power_ports",
      "profile": "profile",
      "profile__n": "profile__n",
      "profile_id": "profile_id",
      "profile_id__n": "profile_id__n",
      "q": "q",
      "tag": "tag",
      "tag__n": "tag__n",
      "tag_id": "tag_id",
      "tag_id__n": "tag_id__n",
      "updated_by_request": "updated_by_request",
      "weight": "weight",
      "weight__empty": "weight__empty",
      "weight__gt": "weight__gt",
      "weight__gte": "weight__gte",
      "weight__lt": "weight__lt",
      "weight__lte": "weight__lte",
      "weight__n": "weight__n",
      "weight_unit": "weight_unit"
    }
  },
  inputParamsSchema
}

export default tool