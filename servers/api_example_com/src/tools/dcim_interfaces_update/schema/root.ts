import { z } from "zod"

export const inputParamsSchema = {
  "id": z.number().int().describe("A unique integer value identifying this interface."),
  "device": z.number().int(),
  "vdcs": z.array(z.number().int()).optional(),
  "module": z.number().int().nullable().optional(),
  "name": z.string().min(1).max(64),
  "label": z.string().max(64).describe("Physical label").optional(),
  "type": z.enum(["virtual","bridge","lag","100base-fx","100base-lfx","100base-tx","100base-t1","1000base-t","1000base-sx","1000base-lx","1000base-tx","2.5gbase-t","5gbase-t","10gbase-t","10gbase-cx4","100base-x-sfp","1000base-x-gbic","1000base-x-sfp","10gbase-x-sfpp","10gbase-x-xfp","10gbase-x-xenpak","10gbase-x-x2","25gbase-x-sfp28","50gbase-x-sfp56","40gbase-x-qsfpp","50gbase-x-sfp28","100gbase-x-cfp","100gbase-x-cfp2","200gbase-x-cfp2","400gbase-x-cfp2","100gbase-x-cfp4","100gbase-x-cxp","100gbase-x-cpak","100gbase-x-dsfp","100gbase-x-sfpdd","100gbase-x-qsfp28","100gbase-x-qsfpdd","200gbase-x-qsfp56","200gbase-x-qsfpdd","400gbase-x-qsfp112","400gbase-x-qsfpdd","400gbase-x-osfp","400gbase-x-osfp-rhs","400gbase-x-cdfp","400gbase-x-cfp8","800gbase-x-qsfpdd","800gbase-x-osfp","1000base-kx","2.5gbase-kx","5gbase-kr","10gbase-kr","10gbase-kx4","25gbase-kr","40gbase-kr4","50gbase-kr","100gbase-kp4","100gbase-kr2","100gbase-kr4","ieee802.11a","ieee802.11g","ieee802.11n","ieee802.11ac","ieee802.11ad","ieee802.11ax","ieee802.11ay","ieee802.11be","ieee802.15.1","ieee802.15.4","other-wireless","gsm","cdma","lte","4g","5g","sonet-oc3","sonet-oc12","sonet-oc48","sonet-oc192","sonet-oc768","sonet-oc1920","sonet-oc3840","1gfc-sfp","2gfc-sfp","4gfc-sfp","8gfc-sfpp","16gfc-sfpp","32gfc-sfp28","32gfc-sfpp","64gfc-qsfpp","64gfc-sfpdd","64gfc-sfpp","128gfc-qsfp28","infiniband-sdr","infiniband-ddr","infiniband-qdr","infiniband-fdr10","infiniband-fdr","infiniband-edr","infiniband-hdr","infiniband-ndr","infiniband-xdr","t1","e1","t3","e3","xdsl","docsis","moca","bpon","epon","10g-epon","gpon","xg-pon","xgs-pon","ng-pon2","25g-pon","50g-pon","cisco-stackwise","cisco-stackwise-plus","cisco-flexstack","cisco-flexstack-plus","cisco-stackwise-80","cisco-stackwise-160","cisco-stackwise-320","cisco-stackwise-480","cisco-stackwise-1t","juniper-vcp","extreme-summitstack","extreme-summitstack-128","extreme-summitstack-256","extreme-summitstack-512","other"]).describe("* `virtual` - Virtual\n* `bridge` - Bridge\n* `lag` - Link Aggregation Group (LAG)\n* `100base-fx` - 100BASE-FX (10/100ME FIBER)\n* `100base-lfx` - 100BASE-LFX (10/100ME FIBER)\n* `100base-tx` - 100BASE-TX (10/100ME)\n* `100base-t1` - 100BASE-T1 (10/100ME Single Pair)\n* `1000base-t` - 1000BASE-T (1GE)\n* `1000base-sx` - 1000BASE-SX (1GE)\n* `1000base-lx` - 1000BASE-LX (1GE)\n* `1000base-tx` - 1000BASE-TX (1GE)\n* `2.5gbase-t` - 2.5GBASE-T (2.5GE)\n* `5gbase-t` - 5GBASE-T (5GE)\n* `10gbase-t` - 10GBASE-T (10GE)\n* `10gbase-cx4` - 10GBASE-CX4 (10GE)\n* `100base-x-sfp` - SFP (100ME)\n* `1000base-x-gbic` - GBIC (1GE)\n* `1000base-x-sfp` - SFP (1GE)\n* `10gbase-x-sfpp` - SFP+ (10GE)\n* `10gbase-x-xfp` - XFP (10GE)\n* `10gbase-x-xenpak` - XENPAK (10GE)\n* `10gbase-x-x2` - X2 (10GE)\n* `25gbase-x-sfp28` - SFP28 (25GE)\n* `50gbase-x-sfp56` - SFP56 (50GE)\n* `40gbase-x-qsfpp` - QSFP+ (40GE)\n* `50gbase-x-sfp28` - QSFP28 (50GE)\n* `100gbase-x-cfp` - CFP (100GE)\n* `100gbase-x-cfp2` - CFP2 (100GE)\n* `200gbase-x-cfp2` - CFP2 (200GE)\n* `400gbase-x-cfp2` - CFP2 (400GE)\n* `100gbase-x-cfp4` - CFP4 (100GE)\n* `100gbase-x-cxp` - CXP (100GE)\n* `100gbase-x-cpak` - Cisco CPAK (100GE)\n* `100gbase-x-dsfp` - DSFP (100GE)\n* `100gbase-x-sfpdd` - SFP-DD (100GE)\n* `100gbase-x-qsfp28` - QSFP28 (100GE)\n* `100gbase-x-qsfpdd` - QSFP-DD (100GE)\n* `200gbase-x-qsfp56` - QSFP56 (200GE)\n* `200gbase-x-qsfpdd` - QSFP-DD (200GE)\n* `400gbase-x-qsfp112` - QSFP112 (400GE)\n* `400gbase-x-qsfpdd` - QSFP-DD (400GE)\n* `400gbase-x-osfp` - OSFP (400GE)\n* `400gbase-x-osfp-rhs` - OSFP-RHS (400GE)\n* `400gbase-x-cdfp` - CDFP (400GE)\n* `400gbase-x-cfp8` - CPF8 (400GE)\n* `800gbase-x-qsfpdd` - QSFP-DD (800GE)\n* `800gbase-x-osfp` - OSFP (800GE)\n* `1000base-kx` - 1000BASE-KX (1GE)\n* `2.5gbase-kx` - 2.5GBASE-KX (2.5GE)\n* `5gbase-kr` - 5GBASE-KR (5GE)\n* `10gbase-kr` - 10GBASE-KR (10GE)\n* `10gbase-kx4` - 10GBASE-KX4 (10GE)\n* `25gbase-kr` - 25GBASE-KR (25GE)\n* `40gbase-kr4` - 40GBASE-KR4 (40GE)\n* `50gbase-kr` - 50GBASE-KR (50GE)\n* `100gbase-kp4` - 100GBASE-KP4 (100GE)\n* `100gbase-kr2` - 100GBASE-KR2 (100GE)\n* `100gbase-kr4` - 100GBASE-KR4 (100GE)\n* `ieee802.11a` - IEEE 802.11a\n* `ieee802.11g` - IEEE 802.11b/g\n* `ieee802.11n` - IEEE 802.11n\n* `ieee802.11ac` - IEEE 802.11ac\n* `ieee802.11ad` - IEEE 802.11ad\n* `ieee802.11ax` - IEEE 802.11ax\n* `ieee802.11ay` - IEEE 802.11ay\n* `ieee802.11be` - IEEE 802.11be\n* `ieee802.15.1` - IEEE 802.15.1 (Bluetooth)\n* `ieee802.15.4` - IEEE 802.15.4 (LR-WPAN)\n* `other-wireless` - Other (Wireless)\n* `gsm` - GSM\n* `cdma` - CDMA\n* `lte` - LTE\n* `4g` - 4G\n* `5g` - 5G\n* `sonet-oc3` - OC-3/STM-1\n* `sonet-oc12` - OC-12/STM-4\n* `sonet-oc48` - OC-48/STM-16\n* `sonet-oc192` - OC-192/STM-64\n* `sonet-oc768` - OC-768/STM-256\n* `sonet-oc1920` - OC-1920/STM-640\n* `sonet-oc3840` - OC-3840/STM-1234\n* `1gfc-sfp` - SFP (1GFC)\n* `2gfc-sfp` - SFP (2GFC)\n* `4gfc-sfp` - SFP (4GFC)\n* `8gfc-sfpp` - SFP+ (8GFC)\n* `16gfc-sfpp` - SFP+ (16GFC)\n* `32gfc-sfp28` - SFP28 (32GFC)\n* `32gfc-sfpp` - SFP+ (32GFC)\n* `64gfc-qsfpp` - QSFP+ (64GFC)\n* `64gfc-sfpdd` - SFP-DD (64GFC)\n* `64gfc-sfpp` - SFP+ (64GFC)\n* `128gfc-qsfp28` - QSFP28 (128GFC)\n* `infiniband-sdr` - SDR (2 Gbps)\n* `infiniband-ddr` - DDR (4 Gbps)\n* `infiniband-qdr` - QDR (8 Gbps)\n* `infiniband-fdr10` - FDR10 (10 Gbps)\n* `infiniband-fdr` - FDR (13.5 Gbps)\n* `infiniband-edr` - EDR (25 Gbps)\n* `infiniband-hdr` - HDR (50 Gbps)\n* `infiniband-ndr` - NDR (100 Gbps)\n* `infiniband-xdr` - XDR (250 Gbps)\n* `t1` - T1 (1.544 Mbps)\n* `e1` - E1 (2.048 Mbps)\n* `t3` - T3 (45 Mbps)\n* `e3` - E3 (34 Mbps)\n* `xdsl` - xDSL\n* `docsis` - DOCSIS\n* `moca` - MoCA\n* `bpon` - BPON (622 Mbps / 155 Mbps)\n* `epon` - EPON (1 Gbps)\n* `10g-epon` - 10G-EPON (10 Gbps)\n* `gpon` - GPON (2.5 Gbps / 1.25 Gbps)\n* `xg-pon` - XG-PON (10 Gbps / 2.5 Gbps)\n* `xgs-pon` - XGS-PON (10 Gbps)\n* `ng-pon2` - NG-PON2 (TWDM-PON) (4x10 Gbps)\n* `25g-pon` - 25G-PON (25 Gbps)\n* `50g-pon` - 50G-PON (50 Gbps)\n* `cisco-stackwise` - Cisco StackWise\n* `cisco-stackwise-plus` - Cisco StackWise Plus\n* `cisco-flexstack` - Cisco FlexStack\n* `cisco-flexstack-plus` - Cisco FlexStack Plus\n* `cisco-stackwise-80` - Cisco StackWise-80\n* `cisco-stackwise-160` - Cisco StackWise-160\n* `cisco-stackwise-320` - Cisco StackWise-320\n* `cisco-stackwise-480` - Cisco StackWise-480\n* `cisco-stackwise-1t` - Cisco StackWise-1T\n* `juniper-vcp` - Juniper VCP\n* `extreme-summitstack` - Extreme SummitStack\n* `extreme-summitstack-128` - Extreme SummitStack-128\n* `extreme-summitstack-256` - Extreme SummitStack-256\n* `extreme-summitstack-512` - Extreme SummitStack-512\n* `other` - Other"),
  "enabled": z.boolean().optional(),
  "parent": z.number().int().nullable().optional(),
  "bridge": z.number().int().nullable().optional(),
  "lag": z.number().int().nullable().optional(),
  "mtu": z.number().int().gte(1).lte(65536).nullable().optional(),
  "primary_mac_address": z.number().int().nullable().optional(),
  "speed": z.number().int().gte(0).lte(2147483647).nullable().optional(),
  "duplex": z.union([z.literal("half"), z.literal("full"), z.literal("auto"), z.literal(""), z.literal(null)]).nullable().describe("* `half` - Half\n* `full` - Full\n* `auto` - Auto").optional(),
  "wwn": z.string().nullable().optional(),
  "mgmt_only": z.boolean().describe("This interface is used only for out-of-band management").optional(),
  "description": z.string().max(200).optional(),
  "mode": z.union([z.literal("access"), z.literal("tagged"), z.literal("tagged-all"), z.literal("q-in-q"), z.literal(""), z.literal(null)]).nullable().describe("IEEE 802.1Q tagging strategy\n\n* `access` - Access\n* `tagged` - Tagged\n* `tagged-all` - Tagged (All)\n* `q-in-q` - Q-in-Q (802.1ad)").optional(),
  "rf_role": z.union([z.literal("ap"), z.literal("station"), z.literal(""), z.literal(null)]).nullable().describe("* `ap` - Access point\n* `station` - Station").optional(),
  "rf_channel": z.union([z.literal("2.4g-1-2412-22"), z.literal("2.4g-2-2417-22"), z.literal("2.4g-3-2422-22"), z.literal("2.4g-4-2427-22"), z.literal("2.4g-5-2432-22"), z.literal("2.4g-6-2437-22"), z.literal("2.4g-7-2442-22"), z.literal("2.4g-8-2447-22"), z.literal("2.4g-9-2452-22"), z.literal("2.4g-10-2457-22"), z.literal("2.4g-11-2462-22"), z.literal("2.4g-12-2467-22"), z.literal("2.4g-13-2472-22"), z.literal("5g-32-5160-20"), z.literal("5g-34-5170-40"), z.literal("5g-36-5180-20"), z.literal("5g-38-5190-40"), z.literal("5g-40-5200-20"), z.literal("5g-42-5210-80"), z.literal("5g-44-5220-20"), z.literal("5g-46-5230-40"), z.literal("5g-48-5240-20"), z.literal("5g-50-5250-160"), z.literal("5g-52-5260-20"), z.literal("5g-54-5270-40"), z.literal("5g-56-5280-20"), z.literal("5g-58-5290-80"), z.literal("5g-60-5300-20"), z.literal("5g-62-5310-40"), z.literal("5g-64-5320-20"), z.literal("5g-100-5500-20"), z.literal("5g-102-5510-40"), z.literal("5g-104-5520-20"), z.literal("5g-106-5530-80"), z.literal("5g-108-5540-20"), z.literal("5g-110-5550-40"), z.literal("5g-112-5560-20"), z.literal("5g-114-5570-160"), z.literal("5g-116-5580-20"), z.literal("5g-118-5590-40"), z.literal("5g-120-5600-20"), z.literal("5g-122-5610-80"), z.literal("5g-124-5620-20"), z.literal("5g-126-5630-40"), z.literal("5g-128-5640-20"), z.literal("5g-132-5660-20"), z.literal("5g-134-5670-40"), z.literal("5g-136-5680-20"), z.literal("5g-138-5690-80"), z.literal("5g-140-5700-20"), z.literal("5g-142-5710-40"), z.literal("5g-144-5720-20"), z.literal("5g-149-5745-20"), z.literal("5g-151-5755-40"), z.literal("5g-153-5765-20"), z.literal("5g-155-5775-80"), z.literal("5g-157-5785-20"), z.literal("5g-159-5795-40"), z.literal("5g-161-5805-20"), z.literal("5g-163-5815-160"), z.literal("5g-165-5825-20"), z.literal("5g-167-5835-40"), z.literal("5g-169-5845-20"), z.literal("5g-171-5855-80"), z.literal("5g-173-5865-20"), z.literal("5g-175-5875-40"), z.literal("5g-177-5885-20"), z.literal("6g-1-5955-20"), z.literal("6g-3-5965-40"), z.literal("6g-5-5975-20"), z.literal("6g-7-5985-80"), z.literal("6g-9-5995-20"), z.literal("6g-11-6005-40"), z.literal("6g-13-6015-20"), z.literal("6g-15-6025-160"), z.literal("6g-17-6035-20"), z.literal("6g-19-6045-40"), z.literal("6g-21-6055-20"), z.literal("6g-23-6065-80"), z.literal("6g-25-6075-20"), z.literal("6g-27-6085-40"), z.literal("6g-29-6095-20"), z.literal("6g-31-6105-320"), z.literal("6g-33-6115-20"), z.literal("6g-35-6125-40"), z.literal("6g-37-6135-20"), z.literal("6g-39-6145-80"), z.literal("6g-41-6155-20"), z.literal("6g-43-6165-40"), z.literal("6g-45-6175-20"), z.literal("6g-47-6185-160"), z.literal("6g-49-6195-20"), z.literal("6g-51-6205-40"), z.literal("6g-53-6215-20"), z.literal("6g-55-6225-80"), z.literal("6g-57-6235-20"), z.literal("6g-59-6245-40"), z.literal("6g-61-6255-20"), z.literal("6g-65-6275-20"), z.literal("6g-67-6285-40"), z.literal("6g-69-6295-20"), z.literal("6g-71-6305-80"), z.literal("6g-73-6315-20"), z.literal("6g-75-6325-40"), z.literal("6g-77-6335-20"), z.literal("6g-79-6345-160"), z.literal("6g-81-6355-20"), z.literal("6g-83-6365-40"), z.literal("6g-85-6375-20"), z.literal("6g-87-6385-80"), z.literal("6g-89-6395-20"), z.literal("6g-91-6405-40"), z.literal("6g-93-6415-20"), z.literal("6g-95-6425-320"), z.literal("6g-97-6435-20"), z.literal("6g-99-6445-40"), z.literal("6g-101-6455-20"), z.literal("6g-103-6465-80"), z.literal("6g-105-6475-20"), z.literal("6g-107-6485-40"), z.literal("6g-109-6495-20"), z.literal("6g-111-6505-160"), z.literal("6g-113-6515-20"), z.literal("6g-115-6525-40"), z.literal("6g-117-6535-20"), z.literal("6g-119-6545-80"), z.literal("6g-121-6555-20"), z.literal("6g-123-6565-40"), z.literal("6g-125-6575-20"), z.literal("6g-129-6595-20"), z.literal("6g-131-6605-40"), z.literal("6g-133-6615-20"), z.literal("6g-135-6625-80"), z.literal("6g-137-6635-20"), z.literal("6g-139-6645-40"), z.literal("6g-141-6655-20"), z.literal("6g-143-6665-160"), z.literal("6g-145-6675-20"), z.literal("6g-147-6685-40"), z.literal("6g-149-6695-20"), z.literal("6g-151-6705-80"), z.literal("6g-153-6715-20"), z.literal("6g-155-6725-40"), z.literal("6g-157-6735-20"), z.literal("6g-159-6745-320"), z.literal("6g-161-6755-20"), z.literal("6g-163-6765-40"), z.literal("6g-165-6775-20"), z.literal("6g-167-6785-80"), z.literal("6g-169-6795-20"), z.literal("6g-171-6805-40"), z.literal("6g-173-6815-20"), z.literal("6g-175-6825-160"), z.literal("6g-177-6835-20"), z.literal("6g-179-6845-40"), z.literal("6g-181-6855-20"), z.literal("6g-183-6865-80"), z.literal("6g-185-6875-20"), z.literal("6g-187-6885-40"), z.literal("6g-189-6895-20"), z.literal("6g-193-6915-20"), z.literal("6g-195-6925-40"), z.literal("6g-197-6935-20"), z.literal("6g-199-6945-80"), z.literal("6g-201-6955-20"), z.literal("6g-203-6965-40"), z.literal("6g-205-6975-20"), z.literal("6g-207-6985-160"), z.literal("6g-209-6995-20"), z.literal("6g-211-7005-40"), z.literal("6g-213-7015-20"), z.literal("6g-215-7025-80"), z.literal("6g-217-7035-20"), z.literal("6g-219-7045-40"), z.literal("6g-221-7055-20"), z.literal("6g-225-7075-20"), z.literal("6g-227-7085-40"), z.literal("6g-229-7095-20"), z.literal("6g-233-7115-20"), z.literal("60g-1-58320-2160"), z.literal("60g-2-60480-2160"), z.literal("60g-3-62640-2160"), z.literal("60g-4-64800-2160"), z.literal("60g-5-66960-2160"), z.literal("60g-6-69120-2160"), z.literal("60g-9-59400-4320"), z.literal("60g-10-61560-4320"), z.literal("60g-11-63720-4320"), z.literal("60g-12-65880-4320"), z.literal("60g-13-68040-4320"), z.literal("60g-17-60480-6480"), z.literal("60g-18-62640-6480"), z.literal("60g-19-64800-6480"), z.literal("60g-20-66960-6480"), z.literal("60g-25-61560-6480"), z.literal("60g-26-63720-6480"), z.literal("60g-27-65880-6480"), z.literal(""), z.literal(null)]).nullable().describe("* `2.4g-1-2412-22` - 1 (2412 MHz)\n* `2.4g-2-2417-22` - 2 (2417 MHz)\n* `2.4g-3-2422-22` - 3 (2422 MHz)\n* `2.4g-4-2427-22` - 4 (2427 MHz)\n* `2.4g-5-2432-22` - 5 (2432 MHz)\n* `2.4g-6-2437-22` - 6 (2437 MHz)\n* `2.4g-7-2442-22` - 7 (2442 MHz)\n* `2.4g-8-2447-22` - 8 (2447 MHz)\n* `2.4g-9-2452-22` - 9 (2452 MHz)\n* `2.4g-10-2457-22` - 10 (2457 MHz)\n* `2.4g-11-2462-22` - 11 (2462 MHz)\n* `2.4g-12-2467-22` - 12 (2467 MHz)\n* `2.4g-13-2472-22` - 13 (2472 MHz)\n* `5g-32-5160-20` - 32 (5160/20 MHz)\n* `5g-34-5170-40` - 34 (5170/40 MHz)\n* `5g-36-5180-20` - 36 (5180/20 MHz)\n* `5g-38-5190-40` - 38 (5190/40 MHz)\n* `5g-40-5200-20` - 40 (5200/20 MHz)\n* `5g-42-5210-80` - 42 (5210/80 MHz)\n* `5g-44-5220-20` - 44 (5220/20 MHz)\n* `5g-46-5230-40` - 46 (5230/40 MHz)\n* `5g-48-5240-20` - 48 (5240/20 MHz)\n* `5g-50-5250-160` - 50 (5250/160 MHz)\n* `5g-52-5260-20` - 52 (5260/20 MHz)\n* `5g-54-5270-40` - 54 (5270/40 MHz)\n* `5g-56-5280-20` - 56 (5280/20 MHz)\n* `5g-58-5290-80` - 58 (5290/80 MHz)\n* `5g-60-5300-20` - 60 (5300/20 MHz)\n* `5g-62-5310-40` - 62 (5310/40 MHz)\n* `5g-64-5320-20` - 64 (5320/20 MHz)\n* `5g-100-5500-20` - 100 (5500/20 MHz)\n* `5g-102-5510-40` - 102 (5510/40 MHz)\n* `5g-104-5520-20` - 104 (5520/20 MHz)\n* `5g-106-5530-80` - 106 (5530/80 MHz)\n* `5g-108-5540-20` - 108 (5540/20 MHz)\n* `5g-110-5550-40` - 110 (5550/40 MHz)\n* `5g-112-5560-20` - 112 (5560/20 MHz)\n* `5g-114-5570-160` - 114 (5570/160 MHz)\n* `5g-116-5580-20` - 116 (5580/20 MHz)\n* `5g-118-5590-40` - 118 (5590/40 MHz)\n* `5g-120-5600-20` - 120 (5600/20 MHz)\n* `5g-122-5610-80` - 122 (5610/80 MHz)\n* `5g-124-5620-20` - 124 (5620/20 MHz)\n* `5g-126-5630-40` - 126 (5630/40 MHz)\n* `5g-128-5640-20` - 128 (5640/20 MHz)\n* `5g-132-5660-20` - 132 (5660/20 MHz)\n* `5g-134-5670-40` - 134 (5670/40 MHz)\n* `5g-136-5680-20` - 136 (5680/20 MHz)\n* `5g-138-5690-80` - 138 (5690/80 MHz)\n* `5g-140-5700-20` - 140 (5700/20 MHz)\n* `5g-142-5710-40` - 142 (5710/40 MHz)\n* `5g-144-5720-20` - 144 (5720/20 MHz)\n* `5g-149-5745-20` - 149 (5745/20 MHz)\n* `5g-151-5755-40` - 151 (5755/40 MHz)\n* `5g-153-5765-20` - 153 (5765/20 MHz)\n* `5g-155-5775-80` - 155 (5775/80 MHz)\n* `5g-157-5785-20` - 157 (5785/20 MHz)\n* `5g-159-5795-40` - 159 (5795/40 MHz)\n* `5g-161-5805-20` - 161 (5805/20 MHz)\n* `5g-163-5815-160` - 163 (5815/160 MHz)\n* `5g-165-5825-20` - 165 (5825/20 MHz)\n* `5g-167-5835-40` - 167 (5835/40 MHz)\n* `5g-169-5845-20` - 169 (5845/20 MHz)\n* `5g-171-5855-80` - 171 (5855/80 MHz)\n* `5g-173-5865-20` - 173 (5865/20 MHz)\n* `5g-175-5875-40` - 175 (5875/40 MHz)\n* `5g-177-5885-20` - 177 (5885/20 MHz)\n* `6g-1-5955-20` - 1 (5955/20 MHz)\n* `6g-3-5965-40` - 3 (5965/40 MHz)\n* `6g-5-5975-20` - 5 (5975/20 MHz)\n* `6g-7-5985-80` - 7 (5985/80 MHz)\n* `6g-9-5995-20` - 9 (5995/20 MHz)\n* `6g-11-6005-40` - 11 (6005/40 MHz)\n* `6g-13-6015-20` - 13 (6015/20 MHz)\n* `6g-15-6025-160` - 15 (6025/160 MHz)\n* `6g-17-6035-20` - 17 (6035/20 MHz)\n* `6g-19-6045-40` - 19 (6045/40 MHz)\n* `6g-21-6055-20` - 21 (6055/20 MHz)\n* `6g-23-6065-80` - 23 (6065/80 MHz)\n* `6g-25-6075-20` - 25 (6075/20 MHz)\n* `6g-27-6085-40` - 27 (6085/40 MHz)\n* `6g-29-6095-20` - 29 (6095/20 MHz)\n* `6g-31-6105-320` - 31 (6105/320 MHz)\n* `6g-33-6115-20` - 33 (6115/20 MHz)\n* `6g-35-6125-40` - 35 (6125/40 MHz)\n* `6g-37-6135-20` - 37 (6135/20 MHz)\n* `6g-39-6145-80` - 39 (6145/80 MHz)\n* `6g-41-6155-20` - 41 (6155/20 MHz)\n* `6g-43-6165-40` - 43 (6165/40 MHz)\n* `6g-45-6175-20` - 45 (6175/20 MHz)\n* `6g-47-6185-160` - 47 (6185/160 MHz)\n* `6g-49-6195-20` - 49 (6195/20 MHz)\n* `6g-51-6205-40` - 51 (6205/40 MHz)\n* `6g-53-6215-20` - 53 (6215/20 MHz)\n* `6g-55-6225-80` - 55 (6225/80 MHz)\n* `6g-57-6235-20` - 57 (6235/20 MHz)\n* `6g-59-6245-40` - 59 (6245/40 MHz)\n* `6g-61-6255-20` - 61 (6255/20 MHz)\n* `6g-65-6275-20` - 65 (6275/20 MHz)\n* `6g-67-6285-40` - 67 (6285/40 MHz)\n* `6g-69-6295-20` - 69 (6295/20 MHz)\n* `6g-71-6305-80` - 71 (6305/80 MHz)\n* `6g-73-6315-20` - 73 (6315/20 MHz)\n* `6g-75-6325-40` - 75 (6325/40 MHz)\n* `6g-77-6335-20` - 77 (6335/20 MHz)\n* `6g-79-6345-160` - 79 (6345/160 MHz)\n* `6g-81-6355-20` - 81 (6355/20 MHz)\n* `6g-83-6365-40` - 83 (6365/40 MHz)\n* `6g-85-6375-20` - 85 (6375/20 MHz)\n* `6g-87-6385-80` - 87 (6385/80 MHz)\n* `6g-89-6395-20` - 89 (6395/20 MHz)\n* `6g-91-6405-40` - 91 (6405/40 MHz)\n* `6g-93-6415-20` - 93 (6415/20 MHz)\n* `6g-95-6425-320` - 95 (6425/320 MHz)\n* `6g-97-6435-20` - 97 (6435/20 MHz)\n* `6g-99-6445-40` - 99 (6445/40 MHz)\n* `6g-101-6455-20` - 101 (6455/20 MHz)\n* `6g-103-6465-80` - 103 (6465/80 MHz)\n* `6g-105-6475-20` - 105 (6475/20 MHz)\n* `6g-107-6485-40` - 107 (6485/40 MHz)\n* `6g-109-6495-20` - 109 (6495/20 MHz)\n* `6g-111-6505-160` - 111 (6505/160 MHz)\n* `6g-113-6515-20` - 113 (6515/20 MHz)\n* `6g-115-6525-40` - 115 (6525/40 MHz)\n* `6g-117-6535-20` - 117 (6535/20 MHz)\n* `6g-119-6545-80` - 119 (6545/80 MHz)\n* `6g-121-6555-20` - 121 (6555/20 MHz)\n* `6g-123-6565-40` - 123 (6565/40 MHz)\n* `6g-125-6575-20` - 125 (6575/20 MHz)\n* `6g-129-6595-20` - 129 (6595/20 MHz)\n* `6g-131-6605-40` - 131 (6605/40 MHz)\n* `6g-133-6615-20` - 133 (6615/20 MHz)\n* `6g-135-6625-80` - 135 (6625/80 MHz)\n* `6g-137-6635-20` - 137 (6635/20 MHz)\n* `6g-139-6645-40` - 139 (6645/40 MHz)\n* `6g-141-6655-20` - 141 (6655/20 MHz)\n* `6g-143-6665-160` - 143 (6665/160 MHz)\n* `6g-145-6675-20` - 145 (6675/20 MHz)\n* `6g-147-6685-40` - 147 (6685/40 MHz)\n* `6g-149-6695-20` - 149 (6695/20 MHz)\n* `6g-151-6705-80` - 151 (6705/80 MHz)\n* `6g-153-6715-20` - 153 (6715/20 MHz)\n* `6g-155-6725-40` - 155 (6725/40 MHz)\n* `6g-157-6735-20` - 157 (6735/20 MHz)\n* `6g-159-6745-320` - 159 (6745/320 MHz)\n* `6g-161-6755-20` - 161 (6755/20 MHz)\n* `6g-163-6765-40` - 163 (6765/40 MHz)\n* `6g-165-6775-20` - 165 (6775/20 MHz)\n* `6g-167-6785-80` - 167 (6785/80 MHz)\n* `6g-169-6795-20` - 169 (6795/20 MHz)\n* `6g-171-6805-40` - 171 (6805/40 MHz)\n* `6g-173-6815-20` - 173 (6815/20 MHz)\n* `6g-175-6825-160` - 175 (6825/160 MHz)\n* `6g-177-6835-20` - 177 (6835/20 MHz)\n* `6g-179-6845-40` - 179 (6845/40 MHz)\n* `6g-181-6855-20` - 181 (6855/20 MHz)\n* `6g-183-6865-80` - 183 (6865/80 MHz)\n* `6g-185-6875-20` - 185 (6875/20 MHz)\n* `6g-187-6885-40` - 187 (6885/40 MHz)\n* `6g-189-6895-20` - 189 (6895/20 MHz)\n* `6g-193-6915-20` - 193 (6915/20 MHz)\n* `6g-195-6925-40` - 195 (6925/40 MHz)\n* `6g-197-6935-20` - 197 (6935/20 MHz)\n* `6g-199-6945-80` - 199 (6945/80 MHz)\n* `6g-201-6955-20` - 201 (6955/20 MHz)\n* `6g-203-6965-40` - 203 (6965/40 MHz)\n* `6g-205-6975-20` - 205 (6975/20 MHz)\n* `6g-207-6985-160` - 207 (6985/160 MHz)\n* `6g-209-6995-20` - 209 (6995/20 MHz)\n* `6g-211-7005-40` - 211 (7005/40 MHz)\n* `6g-213-7015-20` - 213 (7015/20 MHz)\n* `6g-215-7025-80` - 215 (7025/80 MHz)\n* `6g-217-7035-20` - 217 (7035/20 MHz)\n* `6g-219-7045-40` - 219 (7045/40 MHz)\n* `6g-221-7055-20` - 221 (7055/20 MHz)\n* `6g-225-7075-20` - 225 (7075/20 MHz)\n* `6g-227-7085-40` - 227 (7085/40 MHz)\n* `6g-229-7095-20` - 229 (7095/20 MHz)\n* `6g-233-7115-20` - 233 (7115/20 MHz)\n* `60g-1-58320-2160` - 1 (58.32/2.16 GHz)\n* `60g-2-60480-2160` - 2 (60.48/2.16 GHz)\n* `60g-3-62640-2160` - 3 (62.64/2.16 GHz)\n* `60g-4-64800-2160` - 4 (64.80/2.16 GHz)\n* `60g-5-66960-2160` - 5 (66.96/2.16 GHz)\n* `60g-6-69120-2160` - 6 (69.12/2.16 GHz)\n* `60g-9-59400-4320` - 9 (59.40/4.32 GHz)\n* `60g-10-61560-4320` - 10 (61.56/4.32 GHz)\n* `60g-11-63720-4320` - 11 (63.72/4.32 GHz)\n* `60g-12-65880-4320` - 12 (65.88/4.32 GHz)\n* `60g-13-68040-4320` - 13 (68.04/4.32 GHz)\n* `60g-17-60480-6480` - 17 (60.48/6.48 GHz)\n* `60g-18-62640-6480` - 18 (62.64/6.48 GHz)\n* `60g-19-64800-6480` - 19 (64.80/6.48 GHz)\n* `60g-20-66960-6480` - 20 (66.96/6.48 GHz)\n* `60g-25-61560-6480` - 25 (61.56/8.64 GHz)\n* `60g-26-63720-6480` - 26 (63.72/8.64 GHz)\n* `60g-27-65880-6480` - 27 (65.88/8.64 GHz)").optional(),
  "poe_mode": z.union([z.literal("pd"), z.literal("pse"), z.literal(""), z.literal(null)]).nullable().describe("* `pd` - PD\n* `pse` - PSE").optional(),
  "poe_type": z.union([z.literal("type1-ieee802.3af"), z.literal("type2-ieee802.3at"), z.literal("type3-ieee802.3bt"), z.literal("type4-ieee802.3bt"), z.literal("passive-24v-2pair"), z.literal("passive-24v-4pair"), z.literal("passive-48v-2pair"), z.literal("passive-48v-4pair"), z.literal(""), z.literal(null)]).nullable().describe("* `type1-ieee802.3af` - 802.3af (Type 1)\n* `type2-ieee802.3at` - 802.3at (Type 2)\n* `type3-ieee802.3bt` - 802.3bt (Type 3)\n* `type4-ieee802.3bt` - 802.3bt (Type 4)\n* `passive-24v-2pair` - Passive 24V (2-pair)\n* `passive-24v-4pair` - Passive 24V (4-pair)\n* `passive-48v-2pair` - Passive 48V (2-pair)\n* `passive-48v-4pair` - Passive 48V (4-pair)").optional(),
  "rf_channel_frequency": z.number().gt(-100000).lt(100000).nullable().describe("Populated by selected channel (if set)").optional(),
  "rf_channel_width": z.number().gt(-10000).lt(10000).nullable().describe("Populated by selected channel (if set)").optional(),
  "tx_power": z.number().int().gte(0).lte(127).nullable().optional(),
  "untagged_vlan": z.number().int().nullable().optional(),
  "tagged_vlans": z.array(z.number().int()).optional(),
  "qinq_svlan": z.number().int().nullable().optional(),
  "vlan_translation_policy": z.number().int().nullable().optional(),
  "mark_connected": z.boolean().describe("Treat as if a cable is connected").optional(),
  "wireless_lans": z.array(z.number().int()).optional(),
  "vrf": z.number().int().nullable().optional(),
  "tags": z.array(z.object({ "name": z.string().min(1).max(100), "slug": z.string().regex(new RegExp("^[-\\w]+$")).min(1).max(100), "color": z.string().regex(new RegExp("^[0-9a-f]{6}$")).min(1).max(6).optional() }).describe("Represents an object related through a ForeignKey field. On write, it accepts a primary key (PK) value or a\ndictionary of attributes which can be used to uniquely identify the related object. This class should be\nsubclassed to return a full representation of the related object on read.")).optional(),
  "custom_fields": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `custom_fields` to the tool, first call the tool `expandSchema` with \"/properties/custom_fields\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional()
}