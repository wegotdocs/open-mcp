import { z } from "zod"

export const toolName = `calls_query_stats_calls_query_stats_post`
export const toolDescription = `Calls Query Stats`
export const baseUrl = `https://api.example.com`
export const path = `/calls/query_stats`
export const method = `post`
export const security = [
  {
    "key": "Authorization",
    "value": "Basic <mcp-env-var>USERNAME_PASSWORD_BASE64</mcp-env-var>",
    "in": "header",
    "envVarName": "USERNAME_PASSWORD_BASE64",
    "schemeType": "http",
    "schemeScheme": "basic"
  }
]
export const keys = {
  "query": [],
  "header": [],
  "path": [],
  "cookie": [],
  "body": [
    "project_id",
    "filter",
    "query"
  ]
}
export const flatMap = {}

export const inputParams = {
  "project_id": z.string(),
  "filter": z.union([z.object({ "op_names": z.union([z.array(z.string()), z.null()]).optional(), "input_refs": z.union([z.array(z.string()), z.null()]).optional(), "output_refs": z.union([z.array(z.string()), z.null()]).optional(), "parent_ids": z.union([z.array(z.string()), z.null()]).optional(), "trace_ids": z.union([z.array(z.string()), z.null()]).optional(), "call_ids": z.union([z.array(z.string()), z.null()]).optional(), "trace_roots_only": z.union([z.boolean(), z.null()]).optional(), "wb_user_ids": z.union([z.array(z.string()), z.null()]).optional(), "wb_run_ids": z.union([z.array(z.string()), z.null()]).optional() }), z.null()]).optional(),
  "query": z.union([z.object({ "$expr": z.union([z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.array(z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) })), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$or": z.array(z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "substr": z.union([z.object({ "$literal": z.union([z.string(), z.number().int(), z.number(), z.boolean(), z.record(z.string()), z.array(z.string()), z.null()]) }), z.object({ "$getField": z.string() }), z.object({ "$convert": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "to": z.enum(["double","string","int","bool","exists"]) }) }), z.object({ "$and": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$or": z.array(z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()])) }), z.object({ "$not": z.array(z.any()).min(1).max(1) }), z.object({ "$eq": z.array(z.any()).min(2).max(2) }), z.object({ "$gt": z.array(z.any()).min(2).max(2) }), z.object({ "$gte": z.array(z.any()).min(2).max(2) }), z.object({ "$in": z.array(z.any()).min(2).max(2) }), z.object({ "$contains": z.object({ "input": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "substr": z.union([z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string(), z.string()]), "case_insensitive": z.union([z.string(), z.string()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]), "case_insensitive": z.union([z.boolean(), z.null()]) }) })]) }), z.null()]).optional()
}