import { z } from "zod"

export const inputParamsSchema = {
  "widgets": z.array(z.object({ "title": z.string().optional(), "fields": z.array(z.enum(["_id","type","source","sourceRef","externalLink","title","description","severity","date","tags","tlp","pap","status","stage","assignee","summary","inProgressDate","closedDate","importedDate","timeToDetect","timeToTriage","timeToQualify","timeToAcknowledge","_createdAt","_createdBy","_updatedAt","_updatedBy"])).optional(), "filter": z.object({ "_and": z.array(z.object({ "_and": z.array(z.object({ "_and": z.array(z.object({ "_and": z.array(z.object({ "_and": z.string().optional() })).optional() })).optional() })).optional() })).optional() }).optional(), "sort": z.array(z.object({ "field": z.string(), "direction": z.enum(["asc","desc"]) })).optional(), "maxElements": z.number().int().gt(0).optional(), "_kind": z.enum(["Text","Image","CustomFields","CustomFieldsList","AlertTable","AlertList","ObservableTable","ObservableList","TaskTable","TaskList","TTPTable","TTPList","Timeline","Comments","Pages"]) })).optional(),
  "header": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `header` to the tool, first call the tool `expandSchema` with \"/properties/definition/properties/header\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "footer": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `footer` to the tool, first call the tool `expandSchema` with \"/properties/definition/properties/footer\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "dateFormat": z.string().optional(),
  "dateTimeFormat": z.string().optional(),
  "i18n": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `i18n` to the tool, first call the tool `expandSchema` with \"/properties/definition/properties/i18n\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>")
}