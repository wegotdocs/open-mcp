{
  "type": "object",
  "properties": {
    "from": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `from` to the tool, first call the tool `expandSchema` with \"/properties/from\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>",
      "additionalProperties": true
    },
    "to": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `to` to the tool, first call the tool `expandSchema` with \"/properties/to\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>",
      "additionalProperties": true
    },
    "message": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `message` to the tool, first call the tool `expandSchema` with \"/properties/message\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>",
      "additionalProperties": true
    },
    "reference": {
      "type": "string",
      "title": "Reference"
    },
    "groupings": {
      "items": {
        "type": "string"
      },
      "type": "array",
      "title": "Groupings"
    },
    "timeUtc": {
      "type": "string",
      "title": "Timeutc"
    },
    "channel": {
      "type": "string",
      "title": "Channel"
    }
  },
  "required": [
    "from",
    "to",
    "message",
    "reference",
    "groupings",
    "timeUtc",
    "channel"
  ]
}