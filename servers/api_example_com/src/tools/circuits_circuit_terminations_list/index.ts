import { inputParamsSchema } from "./schema/root.js"
import type { OpenMCPServerTool } from "@open-mcp/core"

const tool: OpenMCPServerTool = {
  "toolName": "circuits_circuit_terminations_list",
  "toolDescription": "Get a list of circuit termination objects.",
  "baseUrl": "https://api.example.com",
  "path": "/api/circuits/circuit-terminations/",
  "method": "get",
  "security": [
    {
      "key": "sessionid",
      "value": "<mcp-env-var>SESSIONID</mcp-env-var>",
      "in": "cookie",
      "envVarName": "SESSIONID"
    },
    {
      "key": "Authorization",
      "value": "<mcp-env-var>AUTHORIZATION</mcp-env-var>",
      "in": "header",
      "envVarName": "AUTHORIZATION"
    }
  ],
  "paramsMap": {
    "query": {
      "cable_end": "cable_end",
      "cable_id": "cable_id",
      "cable_id__n": "cable_id__n",
      "cabled": "cabled",
      "circuit_id": "circuit_id",
      "circuit_id__n": "circuit_id__n",
      "created": "created",
      "created__empty": "created__empty",
      "created__gt": "created__gt",
      "created__gte": "created__gte",
      "created__lt": "created__lt",
      "created__lte": "created__lte",
      "created__n": "created__n",
      "created_by_request": "created_by_request",
      "description": "description",
      "description__empty": "description__empty",
      "description__ic": "description__ic",
      "description__ie": "description__ie",
      "description__iew": "description__iew",
      "description__isw": "description__isw",
      "description__n": "description__n",
      "description__nic": "description__nic",
      "description__nie": "description__nie",
      "description__niew": "description__niew",
      "description__nisw": "description__nisw",
      "id": "id",
      "id__empty": "id__empty",
      "id__gt": "id__gt",
      "id__gte": "id__gte",
      "id__lt": "id__lt",
      "id__lte": "id__lte",
      "id__n": "id__n",
      "last_updated": "last_updated",
      "last_updated__empty": "last_updated__empty",
      "last_updated__gt": "last_updated__gt",
      "last_updated__gte": "last_updated__gte",
      "last_updated__lt": "last_updated__lt",
      "last_updated__lte": "last_updated__lte",
      "last_updated__n": "last_updated__n",
      "limit": "limit",
      "location": "location",
      "location__n": "location__n",
      "location_id": "location_id",
      "location_id__n": "location_id__n",
      "mark_connected": "mark_connected",
      "modified_by_request": "modified_by_request",
      "occupied": "occupied",
      "offset": "offset",
      "ordering": "ordering",
      "port_speed": "port_speed",
      "port_speed__empty": "port_speed__empty",
      "port_speed__gt": "port_speed__gt",
      "port_speed__gte": "port_speed__gte",
      "port_speed__lt": "port_speed__lt",
      "port_speed__lte": "port_speed__lte",
      "port_speed__n": "port_speed__n",
      "pp_info": "pp_info",
      "pp_info__empty": "pp_info__empty",
      "pp_info__ic": "pp_info__ic",
      "pp_info__ie": "pp_info__ie",
      "pp_info__iew": "pp_info__iew",
      "pp_info__isw": "pp_info__isw",
      "pp_info__n": "pp_info__n",
      "pp_info__nic": "pp_info__nic",
      "pp_info__nie": "pp_info__nie",
      "pp_info__niew": "pp_info__niew",
      "pp_info__nisw": "pp_info__nisw",
      "provider": "provider",
      "provider__n": "provider__n",
      "provider_id": "provider_id",
      "provider_id__n": "provider_id__n",
      "provider_network_id": "provider_network_id",
      "provider_network_id__n": "provider_network_id__n",
      "q": "q",
      "region": "region",
      "region__n": "region__n",
      "region_id": "region_id",
      "region_id__n": "region_id__n",
      "site": "site",
      "site__n": "site__n",
      "site_group": "site_group",
      "site_group__n": "site_group__n",
      "site_group_id": "site_group_id",
      "site_group_id__n": "site_group_id__n",
      "site_id": "site_id",
      "site_id__n": "site_id__n",
      "tag": "tag",
      "tag__n": "tag__n",
      "tag_id": "tag_id",
      "tag_id__n": "tag_id__n",
      "term_side": "term_side",
      "termination_id": "termination_id",
      "termination_id__empty": "termination_id__empty",
      "termination_id__gt": "termination_id__gt",
      "termination_id__gte": "termination_id__gte",
      "termination_id__lt": "termination_id__lt",
      "termination_id__lte": "termination_id__lte",
      "termination_id__n": "termination_id__n",
      "termination_type": "termination_type",
      "termination_type__n": "termination_type__n",
      "updated_by_request": "updated_by_request",
      "upstream_speed": "upstream_speed",
      "upstream_speed__empty": "upstream_speed__empty",
      "upstream_speed__gt": "upstream_speed__gt",
      "upstream_speed__gte": "upstream_speed__gte",
      "upstream_speed__lt": "upstream_speed__lt",
      "upstream_speed__lte": "upstream_speed__lte",
      "upstream_speed__n": "upstream_speed__n",
      "xconnect_id": "xconnect_id",
      "xconnect_id__empty": "xconnect_id__empty",
      "xconnect_id__ic": "xconnect_id__ic",
      "xconnect_id__ie": "xconnect_id__ie",
      "xconnect_id__iew": "xconnect_id__iew",
      "xconnect_id__isw": "xconnect_id__isw",
      "xconnect_id__n": "xconnect_id__n",
      "xconnect_id__nic": "xconnect_id__nic",
      "xconnect_id__nie": "xconnect_id__nie",
      "xconnect_id__niew": "xconnect_id__niew",
      "xconnect_id__nisw": "xconnect_id__nisw"
    }
  },
  inputParamsSchema
}

export default tool