import { z } from "zod"

export const inputParamsSchema = {
  "created": z.string().datetime({ offset: true }).optional(),
  "id": z.array(z.number().int()).optional(),
  "id__empty": z.boolean().optional(),
  "id__gt": z.array(z.number().int()).optional(),
  "id__gte": z.array(z.number().int()).optional(),
  "id__lt": z.array(z.number().int()).optional(),
  "id__lte": z.array(z.number().int()).optional(),
  "id__n": z.array(z.number().int()).optional(),
  "limit": z.number().int().describe("Number of results to return per page.").optional(),
  "object_id": z.array(z.number().int()).optional(),
  "object_id__empty": z.boolean().optional(),
  "object_id__gt": z.array(z.number().int()).optional(),
  "object_id__gte": z.array(z.number().int()).optional(),
  "object_id__lt": z.array(z.number().int()).optional(),
  "object_id__lte": z.array(z.number().int()).optional(),
  "object_id__n": z.array(z.number().int()).optional(),
  "object_type": z.string().optional(),
  "object_type__n": z.string().optional(),
  "object_type_id": z.array(z.number().int()).optional(),
  "object_type_id__empty": z.array(z.number().int()).optional(),
  "object_type_id__gt": z.array(z.number().int()).optional(),
  "object_type_id__gte": z.array(z.number().int()).optional(),
  "object_type_id__lt": z.array(z.number().int()).optional(),
  "object_type_id__lte": z.array(z.number().int()).optional(),
  "object_type_id__n": z.array(z.number().int()).optional(),
  "offset": z.number().int().describe("The initial index from which to return the results.").optional(),
  "ordering": z.string().describe("Which field to use when ordering the results.").optional(),
  "user": z.array(z.string()).describe("User (name)").optional(),
  "user__n": z.array(z.string()).describe("User (name)").optional(),
  "user_id": z.array(z.number().int()).describe("User (ID)").optional(),
  "user_id__n": z.array(z.number().int()).describe("User (ID)").optional()
}