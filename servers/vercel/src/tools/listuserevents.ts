import { z } from "zod"

export const toolName = `listuserevents`
export const toolDescription = `List User Events`
export const baseUrl = `https://api.vercel.com`
export const path = `/v3/events`
export const method = `get`
export const security = [
  {
    "key": "Authorization",
    "value": "Bearer <mcp-env-var>API_KEY</mcp-env-var>",
    "in": "header",
    "envVarName": "API_KEY",
    "schemeType": "http",
    "schemeScheme": "bearer"
  }
]
export const keys = {
  "query": [
    "limit",
    "since",
    "until",
    "types",
    "userId",
    "withPayload",
    "teamId",
    "slug"
  ],
  "header": [],
  "path": [],
  "cookie": [],
  "body": []
}
export const flatMap = {}

export const inputParams = {
  "limit": z.number().describe("Maximum number of items which may be returned.").optional(),
  "since": z.string().describe("Timestamp to only include items created since then.").optional(),
  "until": z.string().describe("Timestamp to only include items created until then.").optional(),
  "types": z.string().describe("Comma-delimited list of event \\\"types\\\" to filter the results by.").optional(),
  "userId": z.string().describe("When retrieving events for a Team, the `userId` parameter may be specified to filter events generated by a specific member of the Team.").optional(),
  "withPayload": z.string().describe("When set to `true`, the response will include the `payload` field for each event.").optional(),
  "teamId": z.string().describe("The Team identifier to perform the request on behalf of.").optional(),
  "slug": z.string().describe("The Team slug to perform the request on behalf of.").optional()
}