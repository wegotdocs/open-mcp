import { z } from "zod"

export const inputParamsSchema = {
  "id": z.number().int().describe("A unique integer value identifying this feedback."),
  "b_id": z.number().int().readonly(),
  "created_by": z.string(),
  "updated_by": z.string(),
  "deleted_by": z.string(),
  "ulid": z.string().readonly(),
  "created_at": z.string().datetime({ offset: true }).readonly(),
  "updated_at": z.string().datetime({ offset: true }).readonly(),
  "deleted_at": z.string().datetime({ offset: true }).readonly(),
  "content_title": z.string().readonly(),
  "content_type": z.string().readonly(),
  "performance_type_name": z.string().readonly(),
  "performance_type_icon": z.string().readonly(),
  "recipient_data": z.array(z.object({ "id": z.number().int().readonly(), "name": z.string().max(255).optional(), "role": z.string().readonly(), "email": z.string().email().max(254), "avatar": z.string().url().readonly(), "alt_id": z.string().max(6), "status": z.enum(["Active","Pending","Archive","Deleted","Awaiting Access"]).describe("* `Active` - Active\n* `Pending` - Pending\n* `Archive` - Archive\n* `Deleted` - Delete\n* `Awaiting Access` - Awaiting Access").optional() })).readonly(),
  "type": z.enum(["Peer","General","PeerContent","ContentReview","Interest","Network","Birthday","Anniversary","Other"]).describe("* `Peer` - Peer\n* `General` - General\n* `PeerContent` - Peer Content\n* `ContentReview` - Content Review\n* `Interest` - Interest\n* `Network` - Network\n* `Birthday` - Birthday\n* `Anniversary` - Anniversary\n* `Other` - Other"),
  "share": z.enum(["Public","Private","Hidden"]).describe("* `Public` - Public\n* `Private` - Private\n* `Hidden` - Hidden").optional(),
  "rating": z.enum(["unacceptable","unsatisfactory","mediocre","good","great","excellent","exceptional"]).describe("* `unacceptable` - Unacceptable\n* `unsatisfactory` - Unsatisfactory\n* `mediocre` - Mediocre\n* `good` - Good\n* `great` - Great\n* `excellent` - Excellent\n* `exceptional` - Exceptional").optional(),
  "comment": z.string().optional(),
  "is_annonymous": z.boolean().optional(),
  "flag": z.enum(["Clear","Flagged","Warning","Blocked","None"]).describe("* `Clear` - Clear\n* `Flagged` - Flagged\n* `Warning` - Warning\n* `Blocked` - Blocked\n* `None` - None").optional(),
  "team": z.number().int().nullable().optional(),
  "performance_type": z.number().int().nullable().optional(),
  "recipient": z.number().int().nullable().optional(),
  "created_by_manager": z.number().int().nullable().optional(),
  "recipient_manager": z.number().int().nullable().optional(),
  "created_by_position": z.number().int().nullable().optional(),
  "recipient_position": z.number().int().nullable().optional(),
  "created_by_position_level": z.number().int().nullable().optional(),
  "recipient_position_level": z.number().int().nullable().optional(),
  "content": z.number().int().nullable().optional(),
  "users": z.array(z.number().int()).optional()
}