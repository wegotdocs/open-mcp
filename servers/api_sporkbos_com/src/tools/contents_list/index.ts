import { inputParamsSchema } from "./schema/root.js"
import type { OpenMCPServerTool } from "@open-mcp/core"

const tool: OpenMCPServerTool = {
  "toolName": "contents_list",
  "toolDescription": "",
  "baseUrl": "https://api.sporkbos.com",
  "path": "/api/contents/",
  "method": "get",
  "security": [
    {
      "key": "Authorization",
      "value": "Bearer <mcp-env-var>API_KEY</mcp-env-var>",
      "in": "header",
      "envVarName": "API_KEY"
    }
  ],
  "paramsMap": {
    "query": {
      "board": "board",
      "content_type": "content_type",
      "due_date_after": "due_date_after",
      "due_date_at": "due_date_at",
      "due_date_before": "due_date_before",
      "due_date_match_all": "due_date_match_all",
      "due_date_not_at": "due_date_not_at",
      "importance_contains": "importance_contains",
      "importance_ends_with": "importance_ends_with",
      "importance_equals": "importance_equals",
      "importance_match_all": "importance_match_all",
      "importance_not_contains": "importance_not_contains",
      "importance_not_equals": "importance_not_equals",
      "importance_starts_with": "importance_starts_with",
      "is_board_content": "is_board_content",
      "is_matrix": "is_matrix",
      "is_paginated": "is_paginated",
      "metric_status": "metric_status",
      "name": "name",
      "name_contains": "name_contains",
      "name_ends_with": "name_ends_with",
      "name_equals": "name_equals",
      "name_match_all": "name_match_all",
      "name_not_contains": "name_not_contains",
      "name_not_equals": "name_not_equals",
      "name_starts_with": "name_starts_with",
      "order_by": "order_by",
      "owner": "owner",
      "page_no": "page_no",
      "page_size": "page_size",
      "priority_label_contains": "priority_label_contains",
      "priority_label_ends_with": "priority_label_ends_with",
      "priority_label_equals": "priority_label_equals",
      "priority_label_match_all": "priority_label_match_all",
      "priority_label_not_contains": "priority_label_not_contains",
      "priority_label_not_equals": "priority_label_not_equals",
      "priority_label_starts_with": "priority_label_starts_with",
      "progress_contains": "progress_contains",
      "progress_ends_with": "progress_ends_with",
      "progress_equals": "progress_equals",
      "progress_match_all": "progress_match_all",
      "progress_not_contains": "progress_not_contains",
      "progress_not_equals": "progress_not_equals",
      "progress_starts_with": "progress_starts_with",
      "scorecard": "scorecard",
      "sort_by": "sort_by",
      "stage_contains": "stage_contains",
      "stage_ends_with": "stage_ends_with",
      "stage_equals": "stage_equals",
      "stage_match_all": "stage_match_all",
      "stage_not_contains": "stage_not_contains",
      "stage_not_equals": "stage_not_equals",
      "stage_starts_with": "stage_starts_with",
      "start_date_after": "start_date_after",
      "start_date_at": "start_date_at",
      "start_date_before": "start_date_before",
      "start_date_match_all": "start_date_match_all",
      "start_date_not_at": "start_date_not_at",
      "status_contains": "status_contains",
      "status_ends_with": "status_ends_with",
      "status_equals": "status_equals",
      "status_match_all": "status_match_all",
      "status_not_contains": "status_not_contains",
      "status_not_equals": "status_not_equals",
      "status_starts_with": "status_starts_with",
      "team": "team",
      "visibility_contains": "visibility_contains",
      "visibility_ends_with": "visibility_ends_with",
      "visibility_equals": "visibility_equals",
      "visibility_match_all": "visibility_match_all",
      "visibility_not_contains": "visibility_not_contains",
      "visibility_not_equals": "visibility_not_equals",
      "visibility_starts_with": "visibility_starts_with"
    }
  },
  inputParamsSchema
}

export default tool