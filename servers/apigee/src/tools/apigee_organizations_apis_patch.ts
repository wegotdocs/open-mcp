import { z } from "zod"

export const toolName = `apigee_organizations_apis_patch`
export const toolDescription = `Updates an existing API proxy.`
export const baseUrl = `https://apigee.googleapis.com`
export const path = `/v1/organizations/{organizationsId}/apis/{apisId}`
export const method = `patch`
export const security = [
  {
    "key": "Authorization",
    "value": "Bearer <mcp-env-var>OAUTH2_TOKEN</mcp-env-var>",
    "in": "header",
    "envVarName": "OAUTH2_TOKEN",
    "schemeType": "oauth2"
  },
  {
    "key": "Authorization",
    "value": "Bearer <mcp-env-var>OAUTH2_TOKEN</mcp-env-var>",
    "in": "header",
    "envVarName": "OAUTH2_TOKEN",
    "schemeType": "oauth2"
  }
]
export const keys = {
  "query": [
    "updateMask"
  ],
  "header": [],
  "path": [
    "organizationsId",
    "apisId"
  ],
  "cookie": [],
  "body": [
    "name",
    "latestRevisionId",
    "revision",
    "labels",
    "apiProxyType",
    "readOnly",
    "metaData"
  ]
}
export const flatMap = {}

export const inputParams = {
  "organizationsId": z.string(),
  "apisId": z.string(),
  "updateMask": z.string().optional(),
  "name": z.string().describe("Output only. Name of the API proxy.").readonly().optional(),
  "latestRevisionId": z.string().describe("Output only. The id of the most recently created revision for this api proxy.").readonly().optional(),
  "revision": z.array(z.string()).describe("Output only. List of revisions defined for the API proxy.").readonly().optional(),
  "labels": z.record(z.string()).describe("User labels applied to this API Proxy.").optional(),
  "apiProxyType": z.enum(["API_PROXY_TYPE_UNSPECIFIED","PROGRAMMABLE","CONFIGURABLE"]).describe("Output only. The type of the API proxy.").readonly().optional(),
  "readOnly": z.boolean().describe("Output only. Whether this proxy is read-only. A read-only proxy cannot have new revisions created through calls to CreateApiProxyRevision. A proxy is read-only if it was generated by an archive.").readonly().optional(),
  "metaData": z.object({ "lastModifiedAt": z.string().describe("Time at which the API proxy was most recently modified, in milliseconds since epoch.").optional(), "subType": z.string().describe("The type of entity described").optional(), "createdAt": z.string().describe("Time at which the API proxy was created, in milliseconds since epoch.").optional() }).describe("Output only. Metadata describing the API proxy.").readonly().optional()
}