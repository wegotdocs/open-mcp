{
  "type": "object",
  "properties": {
    "repositoryName": {
      "description": "The repository name.",
      "type": "string"
    },
    "view": {
      "description": "Properties to return. The pattern is like:?view=(:view-name)?(,column)*. (:view-name) and (,columns)* must be mutually exclusive names of predefined views start with colon (':'). The following view-name are defined: :all :default\n\nIf no view-name is specified, names of properties or predefined views should be returned, separated by comma (',').",
      "type": "string",
      "default": ":default"
    },
    "links": {
      "description": "Ensures whether link relations to be returned for this object representation. * 'true', return links for the object. * 'false' do not return links for the object.",
      "type": "boolean",
      "default": true
    },
    "audit-scope": {
      "description": "The scope of the audit event would effect to register and would use with 'object-id' to get the intersection to operate. * 'repository', means the event would register over whole repository. * 'type', means the event would register over type. * 'object', means the event would register over object.",
      "type": "string"
    },
    "object-id": {
      "description": "The r_object_id of required sysobject.",
      "type": "string"
    },
    "object-type": {
      "description": "The type of the queried object.",
      "type": "string"
    },
    "Accept": {
      "description": "The Accept header.",
      "type": "string",
      "enum": [
        "application/vnd.emc.documentum+json",
        "application/vnd.emc.documentum+xml",
        "application/hal+json"
      ]
    },
    "Content-Type": {
      "description": "The Content-Type header.",
      "type": "string",
      "enum": [
        "application/vnd.emc.documentum+xml",
        "application/vnd.emc.documentum+json",
        "application/hal+json"
      ]
    }
  },
  "required": [
    "repositoryName",
    "audit-scope"
  ]
}