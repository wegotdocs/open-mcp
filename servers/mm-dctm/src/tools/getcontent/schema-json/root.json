{
  "type": "object",
  "properties": {
    "repositoryName": {
      "description": "The repository name.",
      "type": "string"
    },
    "id": {
      "description": "The r_object_id of queried object.",
      "type": "string"
    },
    "format": {
      "description": "Specifies the format name of the specific content or rendition.",
      "type": "string"
    },
    "page": {
      "description": "Specifies the page number of the specific content or rendition.",
      "type": "integer",
      "default": 0
    },
    "modifier": {
      "description": "Specifies the page modifier of the specific rendition.",
      "type": "string"
    },
    "links": {
      "description": "Ensures whether link relations to be returned for this object representation. * 'true', return links for the object. * 'false' do not return links for the object.",
      "type": "boolean",
      "default": true
    },
    "media-url-policy": {
      "description": "Specifies the content media URL return policy. * 'dc-pref', would try to retrieve a distributed content URL first. If no distributed content URL is available, a Content Media resource URL from the REST server is still acceptable. * 'dc-only', return a distributed content URL. If there is no ACS server or BOCS server, the REST server returns the HTTP 400 Conflict error. * 'local', return a Content Media resource URL from the REST server regardless of the availability of the ACS server and the BOCS server. * 'all', all available Content Media links are returned.",
      "type": "string",
      "enum": [
        "DC_PREF",
        "DC_ONLY",
        "LOCAL",
        "ALL"
      ]
    },
    "network-location": {
      "description": "The network location for distributed content write.",
      "type": "string"
    },
    "require-checksum": {
      "description": "Specifies the query parameter for Checksum",
      "type": "Boolean"
    },
    "Accept": {
      "description": "The Accept header.",
      "type": "string",
      "enum": [
        "application/vnd.emc.documentum+json",
        "application/vnd.emc.documentum+xml",
        "application/hal+json"
      ]
    }
  },
  "required": [
    "repositoryName",
    "id"
  ]
}