import { z } from "zod"

export const inputParamsSchema = {
  "actions": z.array(z.object({ "relative_path": z.string().describe("The path of the desired endpoint relative to the API’s base URL. Query parameters are not accepted here; put them in `data` instead."), "method": z.enum(["get","post","put","delete","patch","head"]).describe("The HTTP method you wish to emulate for the action."), "data": z.record(z.any()).describe("For `GET` requests, this should be a map of query parameters you would have normally passed in the URL. Options and pagination are not accepted here; put them in `options` instead. For `POST`, `PATCH`, and `PUT` methods, this should be the content you would have normally put in the data field of the body.").optional(), "options": z.object({ "limit": z.number().int().describe("Pagination limit for the request.").optional(), "offset": z.number().int().describe("Pagination offset for the request.").optional(), "fields": z.array(z.string()).describe("The fields to retrieve in the request.").optional() }).describe("Pagination (`limit` and `offset`) and output options (`fields` or `expand`) for the action. “Pretty” JSON output is not an available option on individual actions; if you want pretty output, specify that option on the parent request.").optional() }).describe("An action object for use in a batch request.")).optional()
}