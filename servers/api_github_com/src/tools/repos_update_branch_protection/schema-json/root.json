{
  "type": "object",
  "properties": {
    "owner": {
      "description": "The account owner of the repository. The name is not case sensitive.",
      "type": "string"
    },
    "repo": {
      "description": "The name of the repository without the `.git` extension. The name is not case sensitive.",
      "type": "string"
    },
    "branch": {
      "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL API](https://docs.github.com/graphql).",
      "type": "string"
    },
    "required_status_checks": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `required_status_checks` to the tool, first call the tool `expandSchema` with \"/properties/required_status_checks\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Require status checks to pass before merging. Set to `null` to disable.</property-description>",
      "additionalProperties": true
    },
    "enforce_admins": {
      "type": "boolean",
      "description": "Enforce all configured restrictions for administrators. Set to `true` to enforce required status checks for repository administrators. Set to `null` to disable.",
      "nullable": true
    },
    "required_pull_request_reviews": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `required_pull_request_reviews` to the tool, first call the tool `expandSchema` with \"/properties/required_pull_request_reviews\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Require at least one approving review on a pull request, before merging. Set to `null` to disable.</property-description>",
      "additionalProperties": true
    },
    "restrictions": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `restrictions` to the tool, first call the tool `expandSchema` with \"/properties/restrictions\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Restrict who can push to the protected branch. User, app, and team `restrictions` are only available for organization-owned repositories. Set to `null` to disable.</property-description>",
      "additionalProperties": true
    },
    "required_linear_history": {
      "type": "boolean",
      "description": "Enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch. Set to `true` to enforce a linear commit history. Set to `false` to disable a linear commit Git history. Your repository must allow squash merging or rebase merging before you can enable a linear commit history. Default: `false`. For more information, see \"[Requiring a linear commit history](https://docs.github.com/github/administering-a-repository/requiring-a-linear-commit-history)\" in the GitHub Help documentation."
    },
    "allow_force_pushes": {
      "type": "boolean",
      "description": "Permits force pushes to the protected branch by anyone with write access to the repository. Set to `true` to allow force pushes. Set to `false` or `null` to block force pushes. Default: `false`. For more information, see \"[Enabling force pushes to a protected branch](https://docs.github.com/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)\" in the GitHub Help documentation.\"",
      "nullable": true
    },
    "allow_deletions": {
      "type": "boolean",
      "description": "Allows deletion of the protected branch by anyone with write access to the repository. Set to `false` to prevent deletion of the protected branch. Default: `false`. For more information, see \"[Enabling force pushes to a protected branch](https://docs.github.com/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)\" in the GitHub Help documentation."
    },
    "block_creations": {
      "type": "boolean",
      "description": "If set to `true`, the `restrictions` branch protection settings which limits who can push will also block pushes which create new branches, unless the push is initiated by a user, team, or app which has the ability to push. Set to `true` to restrict new branch creation. Default: `false`."
    },
    "required_conversation_resolution": {
      "type": "boolean",
      "description": "Requires all conversations on code to be resolved before a pull request can be merged into a branch that matches this rule. Set to `false` to disable. Default: `false`."
    },
    "lock_branch": {
      "type": "boolean",
      "description": "Whether to set the branch as read-only. If this is true, users will not be able to push to the branch. Default: `false`.",
      "default": false
    },
    "allow_fork_syncing": {
      "type": "boolean",
      "description": "Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing. Default: `false`.",
      "default": false
    }
  },
  "required": [
    "owner",
    "repo",
    "branch",
    "required_status_checks",
    "enforce_admins",
    "required_pull_request_reviews",
    "restrictions"
  ]
}