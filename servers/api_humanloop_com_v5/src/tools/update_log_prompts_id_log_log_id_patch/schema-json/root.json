{
  "type": "object",
  "properties": {
    "id": {
      "description": "Unique identifier for Prompt.",
      "type": "string",
      "title": "Prompt ID"
    },
    "log_id": {
      "description": "Unique identifier for the Log.",
      "type": "string",
      "title": "Log ID"
    },
    "output_message": {
      "type": "string"
    },
    "prompt_tokens": {
      "type": "integer",
      "title": "Prompt tokens",
      "description": "Number of tokens in the prompt used to generate the output."
    },
    "reasoning_tokens": {
      "type": "integer",
      "title": "Reasoning tokens",
      "description": "Number of reasoning tokens used to generate the output."
    },
    "output_tokens": {
      "type": "integer",
      "title": "Output tokens",
      "description": "Number of tokens in the output generated by the model."
    },
    "prompt_cost": {
      "type": "number",
      "title": "Prompt cost",
      "description": "Cost in dollars associated to the tokens in the prompt."
    },
    "output_cost": {
      "type": "number",
      "title": "Output tokens",
      "description": "Cost in dollars associated to the tokens in the output."
    },
    "finish_reason": {
      "type": "string",
      "title": "Finish reason",
      "description": "Reason the generation finished."
    },
    "messages": {
      "items": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "text"
                          ],
                          "title": "Type"
                        },
                        "text": {
                          "type": "string",
                          "title": "Text",
                          "description": "The message's text content."
                        }
                      },
                      "type": "object",
                      "required": [
                        "type",
                        "text"
                      ],
                      "title": "TextChatContent"
                    },
                    {
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "image_url"
                          ],
                          "title": "Type"
                        },
                        "image_url": {
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "required": [
                        "type",
                        "image_url"
                      ],
                      "title": "ImageChatContent"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content",
            "description": "The content of the message.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Optional name of the message author.",
            "nullable": true
          },
          "tool_call_id": {
            "type": "string",
            "title": "Tool call id",
            "description": "Tool call that this message is responding to.",
            "nullable": true
          },
          "role": {
            "type": "string"
          },
          "tool_calls": {
            "items": {
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "function"
                  ],
                  "title": "ToolType",
                  "description": "The type of tool to call."
                },
                "function": {
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name"
                    },
                    "arguments": {
                      "type": "string",
                      "title": "Arguments"
                    }
                  },
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "title": "FunctionTool",
                  "description": "A function tool to be called by the model where user owns runtime."
                }
              },
              "type": "object",
              "required": [
                "id",
                "type",
                "function"
              ],
              "title": "ToolCall",
              "description": "A tool call to be made."
            },
            "type": "array",
            "title": "Tool calls",
            "description": "A list of tool calls requested by the assistant.",
            "nullable": true
          }
        },
        "type": "object",
        "required": [
          "role"
        ],
        "title": "ChatMessage"
      },
      "type": "array",
      "title": "Messages",
      "description": "The messages passed to the to provider chat endpoint."
    },
    "tool_choice": {
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "none"
          ]
        },
        {
          "type": "string",
          "enum": [
            "auto"
          ]
        },
        {
          "type": "string",
          "enum": [
            "required"
          ]
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "function"
              ],
              "title": "ToolType",
              "description": "The type of tool to call."
            },
            "function": {
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Name"
                }
              },
              "type": "object",
              "required": [
                "name"
              ],
              "title": "FunctionToolChoice",
              "description": "A function tool to be called by the model where user owns runtime."
            }
          },
          "type": "object",
          "required": [
            "type",
            "function"
          ],
          "title": "ToolChoice",
          "description": "Tool choice to force the model to use a tool."
        }
      ],
      "title": "Tool choice",
      "description": "Controls how the model uses tools. The following options are supported: \n- `'none'` means the model will not call any tool and instead generates a message; this is the default when no tools are provided as part of the Prompt. \n- `'auto'` means the model can decide to call one or more of the provided tools; this is the default when tools are provided as part of the Prompt. \n- `'required'` means the model must call one or more of the provided tools. \n- `{'type': 'function', 'function': {name': <TOOL_NAME>}}` forces the model to use the named function."
    },
    "output": {
      "type": "string",
      "title": "Model output",
      "description": "Generated output from your model for the provided inputs. Can be `None` if logging an error, or if creating a parent Log with the intention to populate it later."
    },
    "created_at": {
      "type": "string",
      "format": "date-time",
      "title": "Created at",
      "description": "User defined timestamp for when the log was created. "
    },
    "error": {
      "type": "string",
      "title": "Error",
      "description": "Error message if the log is an error."
    },
    "provider_latency": {
      "type": "number",
      "title": "Log latency",
      "description": "Duration of the logged event in seconds."
    },
    "stdout": {
      "type": "string",
      "title": "Standard Output",
      "description": "Captured log and debug statements."
    },
    "provider_request": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `provider_request` to the tool, first call the tool `expandSchema` with \"/properties/provider_request\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Raw request sent to provider.</property-description>",
      "additionalProperties": true
    },
    "provider_response": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `provider_response` to the tool, first call the tool `expandSchema` with \"/properties/provider_response\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Raw response received the provider.</property-description>",
      "additionalProperties": true
    },
    "inputs": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `inputs` to the tool, first call the tool `expandSchema` with \"/properties/inputs\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>The inputs passed to the prompt template.</property-description>",
      "additionalProperties": true
    },
    "source": {
      "type": "string",
      "title": "Source",
      "description": "Identifies where the model was called from."
    },
    "metadata": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `metadata` to the tool, first call the tool `expandSchema` with \"/properties/metadata\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Any additional metadata to record.</property-description>",
      "additionalProperties": true
    },
    "start_time": {
      "type": "string",
      "format": "date-time",
      "title": "Start time",
      "description": "When the logged event started."
    },
    "end_time": {
      "type": "string",
      "format": "date-time",
      "title": "End time",
      "description": "When the logged event ended."
    },
    "log_status": {
      "type": "string"
    }
  },
  "required": [
    "id",
    "log_id"
  ]
}