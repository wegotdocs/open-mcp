import { z } from "zod"

export const inputParamsSchema = {
  "id": z.string().describe("Unique identifier for Evaluation."),
  "dataset": z.union([z.object({ "version_id": z.string().describe("Unique identifier for the Version.") }), z.object({ "environment": z.string().describe("If provided, the Version deployed to this Environment is used. If not provided, the Version deployed to the default Environment is used.").optional(), "id": z.string().describe("Unique identifier for the File.") }).describe("Specification of a File by its ID."), z.object({ "environment": z.string().describe("If provided, the Version deployed to this Environment is used. If not provided, the Version deployed to the default Environment is used.").optional(), "path": z.string().describe("Path identifying a File. Provide this to specify a File.") }).describe("Specification of a File by its path.")]).describe("Dataset to use in this Run.").optional(),
  "version": z.union([z.object({ "version_id": z.string().describe("Unique identifier for the Version.") }), z.object({ "environment": z.string().describe("If provided, the Version deployed to this Environment is used. If not provided, the Version deployed to the default Environment is used.").optional(), "id": z.string().describe("Unique identifier for the File.") }).describe("Specification of a File by its ID."), z.object({ "environment": z.string().describe("If provided, the Version deployed to this Environment is used. If not provided, the Version deployed to the default Environment is used.").optional(), "path": z.string().describe("Path identifying a File. Provide this to specify a File.") }).describe("Specification of a File by its path.")]).describe("Version to use in this Run.").optional(),
  "orchestrated": z.boolean().describe("Whether the Run is orchestrated by Humanloop. If `True`, Humanloop will generate Logs for the Run; `dataset` and `version` must be provided. If `False`, a log for the Prompt/Tool should be submitted by the user via the API.").optional(),
  "use_existing_logs": z.boolean().describe("If `True`, the Run will be initialized with existing Logs associated with the Dataset and Version. If `False`, the Run will be initialized with no Logs. Can only be set to `True` when both `dataset` and `version` are provided.").optional()
}