import { z } from "zod"

export const inputParamsSchema = {
  "imdb": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `imdb` to the tool, first call the tool `expandSchema` with \"/properties/ratings/properties/imdb\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "tmdb": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `tmdb` to the tool, first call the tool `expandSchema` with \"/properties/ratings/properties/tmdb\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "metacritic": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `metacritic` to the tool, first call the tool `expandSchema` with \"/properties/ratings/properties/metacritic\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "rottenTomatoes": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `rottenTomatoes` to the tool, first call the tool `expandSchema` with \"/properties/ratings/properties/rottenTomatoes\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "trakt": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `trakt` to the tool, first call the tool `expandSchema` with \"/properties/ratings/properties/trakt\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional()
}