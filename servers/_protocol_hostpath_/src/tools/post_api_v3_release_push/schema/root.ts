import { z } from "zod"

export const inputParamsSchema = {
  "id": z.number().int().optional(),
  "guid": z.string().nullable().optional(),
  "quality": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `quality` to the tool, first call the tool `expandSchema` with \"/properties/quality\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "customFormats": z.array(z.object({ "id": z.number().int().optional(), "name": z.string().nullable().optional(), "includeCustomFormatWhenRenaming": z.boolean().nullable().optional(), "specifications": z.array(z.object({ "id": z.number().int().optional(), "name": z.string().nullable().optional(), "implementation": z.string().nullable().optional(), "implementationName": z.string().nullable().optional(), "infoLink": z.string().nullable().optional(), "negate": z.boolean().optional(), "required": z.boolean().optional(), "fields": z.array(z.object({ "order": z.number().int().optional(), "name": z.string().nullable().optional(), "label": z.string().nullable().optional(), "unit": z.string().nullable().optional(), "helpText": z.string().nullable().optional(), "helpTextWarning": z.string().nullable().optional(), "helpLink": z.string().nullable().optional(), "value": z.any().nullable().optional(), "type": z.string().nullable().optional(), "advanced": z.boolean().optional(), "selectOptions": z.array(z.object({ "value": z.number().int().optional(), "name": z.string().nullable().optional(), "order": z.number().int().optional(), "hint": z.string().nullable().optional(), "dividerAfter": z.boolean().optional() }).strict()).nullable().optional(), "selectOptionsProviderAction": z.string().nullable().optional(), "section": z.string().nullable().optional(), "hidden": z.string().nullable().optional(), "privacy": z.enum(["normal","password","apiKey","userName"]).optional(), "placeholder": z.string().nullable().optional(), "isFloat": z.boolean().optional() }).strict()).nullable().optional(), "presets": z.array(z.object({ "id": z.number().int().optional(), "name": z.string().nullable().optional(), "implementation": z.string().nullable().optional(), "implementationName": z.string().nullable().optional(), "infoLink": z.string().nullable().optional(), "negate": z.boolean().optional(), "required": z.boolean().optional(), "fields": z.array(z.object({ "order": z.number().int().optional(), "name": z.string().nullable().optional(), "label": z.string().nullable().optional(), "unit": z.string().nullable().optional(), "helpText": z.string().nullable().optional(), "helpTextWarning": z.string().nullable().optional(), "helpLink": z.string().nullable().optional(), "value": z.any().nullable().optional(), "type": z.string().nullable().optional(), "advanced": z.boolean().optional(), "selectOptions": z.array(z.object({ "value": z.number().int().optional(), "name": z.string().nullable().optional(), "order": z.number().int().optional(), "hint": z.string().nullable().optional(), "dividerAfter": z.boolean().optional() }).strict()).nullable().optional(), "selectOptionsProviderAction": z.string().nullable().optional(), "section": z.string().nullable().optional(), "hidden": z.string().nullable().optional(), "privacy": z.enum(["normal","password","apiKey","userName"]).optional(), "placeholder": z.string().nullable().optional(), "isFloat": z.boolean().optional() }).strict()).nullable().optional(), "presets": z.array(z.object({ "id": z.number().int().optional(), "name": z.string().nullable().optional(), "implementation": z.string().nullable().optional(), "implementationName": z.string().nullable().optional(), "infoLink": z.string().nullable().optional(), "negate": z.boolean().optional(), "required": z.boolean().optional(), "fields": z.array(z.object({ "order": z.number().int().optional(), "name": z.string().nullable().optional(), "label": z.string().nullable().optional(), "unit": z.string().nullable().optional(), "helpText": z.string().nullable().optional(), "helpTextWarning": z.string().nullable().optional(), "helpLink": z.string().nullable().optional(), "value": z.any().nullable().optional(), "type": z.string().nullable().optional(), "advanced": z.boolean().optional(), "selectOptions": z.array(z.object({ "value": z.number().int().optional(), "name": z.string().nullable().optional(), "order": z.number().int().optional(), "hint": z.string().nullable().optional(), "dividerAfter": z.boolean().optional() }).strict()).nullable().optional(), "selectOptionsProviderAction": z.string().nullable().optional(), "section": z.string().nullable().optional(), "hidden": z.string().nullable().optional(), "privacy": z.enum(["normal","password","apiKey","userName"]).optional(), "placeholder": z.string().nullable().optional(), "isFloat": z.boolean().optional() }).strict()).nullable().optional(), "presets": z.array(z.object({ "id": z.number().int().optional(), "name": z.string().nullable().optional(), "implementation": z.string().nullable().optional(), "implementationName": z.string().nullable().optional(), "infoLink": z.string().nullable().optional(), "negate": z.boolean().optional(), "required": z.boolean().optional(), "fields": z.array(z.object({ "order": z.number().int().optional(), "name": z.string().nullable().optional(), "label": z.string().nullable().optional(), "unit": z.string().nullable().optional(), "helpText": z.string().nullable().optional(), "helpTextWarning": z.string().nullable().optional(), "helpLink": z.string().nullable().optional(), "value": z.any().nullable().optional(), "type": z.string().nullable().optional(), "advanced": z.boolean().optional(), "selectOptions": z.array(z.object({ "value": z.number().int().optional(), "name": z.string().nullable().optional(), "order": z.number().int().optional(), "hint": z.string().nullable().optional(), "dividerAfter": z.boolean().optional() }).strict()).nullable().optional(), "selectOptionsProviderAction": z.string().nullable().optional(), "section": z.string().nullable().optional(), "hidden": z.string().nullable().optional(), "privacy": z.enum(["normal","password","apiKey","userName"]).optional(), "placeholder": z.string().nullable().optional(), "isFloat": z.boolean().optional() }).strict()).nullable().optional(), "presets": z.array(z.object({ "id": z.number().int().optional(), "name": z.string().nullable().optional(), "implementation": z.string().nullable().optional(), "implementationName": z.string().nullable().optional(), "infoLink": z.string().nullable().optional(), "negate": z.boolean().optional(), "required": z.boolean().optional(), "fields": z.array(z.object({ "order": z.number().int().optional(), "name": z.string().nullable().optional(), "label": z.string().nullable().optional(), "unit": z.string().nullable().optional(), "helpText": z.string().nullable().optional(), "helpTextWarning": z.string().nullable().optional(), "helpLink": z.string().nullable().optional(), "value": z.any().nullable().optional(), "type": z.string().nullable().optional(), "advanced": z.boolean().optional(), "selectOptions": z.array(z.object({ "value": z.number().int().optional(), "name": z.string().nullable().optional(), "order": z.number().int().optional(), "hint": z.string().nullable().optional(), "dividerAfter": z.boolean().optional() }).strict()).nullable().optional(), "selectOptionsProviderAction": z.string().nullable().optional(), "section": z.string().nullable().optional(), "hidden": z.string().nullable().optional(), "privacy": z.enum(["normal","password","apiKey","userName"]).optional(), "placeholder": z.string().nullable().optional(), "isFloat": z.boolean().optional() }).strict()).nullable().optional(), "presets": z.array(z.object({ "id": z.number().int().optional(), "name": z.string().nullable().optional(), "implementation": z.string().nullable().optional(), "implementationName": z.string().nullable().optional(), "infoLink": z.string().nullable().optional(), "negate": z.boolean().optional(), "required": z.boolean().optional(), "fields": z.array(z.object({ "order": z.number().int().optional(), "name": z.string().nullable().optional(), "label": z.string().nullable().optional(), "unit": z.string().nullable().optional(), "helpText": z.string().nullable().optional(), "helpTextWarning": z.string().nullable().optional(), "helpLink": z.string().nullable().optional(), "value": z.any().nullable().optional(), "type": z.string().nullable().optional(), "advanced": z.boolean().optional(), "selectOptions": z.array(z.object({ "value": z.string().optional(), "name": z.string().optional(), "order": z.string().optional(), "hint": z.string().optional(), "dividerAfter": z.string().optional() }).strict()).nullable().optional(), "selectOptionsProviderAction": z.string().nullable().optional(), "section": z.string().nullable().optional(), "hidden": z.string().nullable().optional(), "privacy": z.enum(["normal","password","apiKey","userName"]).optional(), "placeholder": z.string().nullable().optional(), "isFloat": z.boolean().optional() }).strict()).nullable().optional(), "presets": z.array(z.object({ "id": z.number().int().optional(), "name": z.string().nullable().optional(), "implementation": z.string().nullable().optional(), "implementationName": z.string().nullable().optional(), "infoLink": z.string().nullable().optional(), "negate": z.boolean().optional(), "required": z.boolean().optional(), "fields": z.array(z.object({ "order": z.string().optional(), "name": z.string().optional(), "label": z.string().optional(), "unit": z.string().optional(), "helpText": z.string().optional(), "helpTextWarning": z.string().optional(), "helpLink": z.string().optional(), "value": z.string().optional(), "type": z.string().optional(), "advanced": z.string().optional(), "selectOptions": z.string().optional(), "selectOptionsProviderAction": z.string().optional(), "section": z.string().optional(), "hidden": z.string().optional(), "privacy": z.string().optional(), "placeholder": z.string().optional(), "isFloat": z.string().optional() }).strict()).nullable().optional(), "presets": z.array(z.object({ "id": z.string().optional(), "name": z.string().optional(), "implementation": z.string().optional(), "implementationName": z.string().optional(), "infoLink": z.string().optional(), "negate": z.string().optional(), "required": z.string().optional(), "fields": z.string().optional(), "presets": z.string().optional() }).strict()).nullable().optional() }).strict()).nullable().optional() }).strict()).nullable().optional() }).strict()).nullable().optional() }).strict()).nullable().optional() }).strict()).nullable().optional() }).strict()).nullable().optional() }).strict()).nullable().optional() }).strict()).nullable().optional(),
  "customFormatScore": z.number().int().optional(),
  "qualityWeight": z.number().int().optional(),
  "age": z.number().int().optional(),
  "ageHours": z.number().optional(),
  "ageMinutes": z.number().optional(),
  "size": z.number().int().optional(),
  "indexerId": z.number().int().optional(),
  "indexer": z.string().nullable().optional(),
  "releaseGroup": z.string().nullable().optional(),
  "subGroup": z.string().nullable().optional(),
  "releaseHash": z.string().nullable().optional(),
  "title": z.string().nullable().optional(),
  "sceneSource": z.boolean().optional(),
  "movieTitles": z.array(z.string()).nullable().optional(),
  "languages": z.array(z.object({ "id": z.number().int().optional(), "name": z.string().nullable().optional() }).strict()).nullable().optional(),
  "mappedMovieId": z.number().int().nullable().optional(),
  "approved": z.boolean().optional(),
  "temporarilyRejected": z.boolean().optional(),
  "rejected": z.boolean().optional(),
  "tmdbId": z.number().int().optional(),
  "imdbId": z.number().int().optional(),
  "rejections": z.array(z.string()).nullable().optional(),
  "publishDate": z.string().datetime({ offset: true }).optional(),
  "commentUrl": z.string().nullable().optional(),
  "downloadUrl": z.string().nullable().optional(),
  "infoUrl": z.string().nullable().optional(),
  "movieRequested": z.boolean().optional(),
  "downloadAllowed": z.boolean().optional(),
  "releaseWeight": z.number().int().optional(),
  "edition": z.string().nullable().optional(),
  "magnetUrl": z.string().nullable().optional(),
  "infoHash": z.string().nullable().optional(),
  "seeders": z.number().int().nullable().optional(),
  "leechers": z.number().int().nullable().optional(),
  "protocol": z.enum(["unknown","usenet","torrent"]).optional(),
  "indexerFlags": z.any().nullable().optional(),
  "movieId": z.number().int().nullable().optional(),
  "downloadClientId": z.number().int().nullable().optional(),
  "downloadClient": z.string().nullable().optional(),
  "shouldOverride": z.boolean().nullable().optional()
}