import { z } from "zod"

export const inputParamsSchema = {
  "id": z.string(),
  "b_id": z.number().int().optional(),
  "movieId": z.number().int().optional(),
  "relativePath": z.string().nullable().optional(),
  "path": z.string().nullable().optional(),
  "size": z.number().int().optional(),
  "dateAdded": z.string().datetime({ offset: true }).optional(),
  "sceneName": z.string().nullable().optional(),
  "releaseGroup": z.string().nullable().optional(),
  "edition": z.string().nullable().optional(),
  "languages": z.array(z.object({ "id": z.number().int().optional(), "name": z.string().nullable().optional() }).strict()).nullable().optional(),
  "quality": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `quality` to the tool, first call the tool `expandSchema` with \"/properties/quality\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "customFormats": z.array(z.object({ "id": z.number().int().optional(), "name": z.string().nullable().optional(), "includeCustomFormatWhenRenaming": z.boolean().nullable().optional(), "specifications": z.array(z.object({ "id": z.number().int().optional(), "name": z.string().nullable().optional(), "implementation": z.string().nullable().optional(), "implementationName": z.string().nullable().optional(), "infoLink": z.string().nullable().optional(), "negate": z.boolean().optional(), "required": z.boolean().optional(), "fields": z.array(z.object({ "order": z.number().int().optional(), "name": z.string().nullable().optional(), "label": z.string().nullable().optional(), "unit": z.string().nullable().optional(), "helpText": z.string().nullable().optional(), "helpTextWarning": z.string().nullable().optional(), "helpLink": z.string().nullable().optional(), "value": z.any().nullable().optional(), "type": z.string().nullable().optional(), "advanced": z.boolean().optional(), "selectOptions": z.array(z.object({ "value": z.number().int().optional(), "name": z.string().nullable().optional(), "order": z.number().int().optional(), "hint": z.string().nullable().optional(), "dividerAfter": z.boolean().optional() }).strict()).nullable().optional(), "selectOptionsProviderAction": z.string().nullable().optional(), "section": z.string().nullable().optional(), "hidden": z.string().nullable().optional(), "privacy": z.enum(["normal","password","apiKey","userName"]).optional(), "placeholder": z.string().nullable().optional(), "isFloat": z.boolean().optional() }).strict()).nullable().optional(), "presets": z.array(z.object({ "id": z.number().int().optional(), "name": z.string().nullable().optional(), "implementation": z.string().nullable().optional(), "implementationName": z.string().nullable().optional(), "infoLink": z.string().nullable().optional(), "negate": z.boolean().optional(), "required": z.boolean().optional(), "fields": z.array(z.object({ "order": z.number().int().optional(), "name": z.string().nullable().optional(), "label": z.string().nullable().optional(), "unit": z.string().nullable().optional(), "helpText": z.string().nullable().optional(), "helpTextWarning": z.string().nullable().optional(), "helpLink": z.string().nullable().optional(), "value": z.any().nullable().optional(), "type": z.string().nullable().optional(), "advanced": z.boolean().optional(), "selectOptions": z.array(z.object({ "value": z.number().int().optional(), "name": z.string().nullable().optional(), "order": z.number().int().optional(), "hint": z.string().nullable().optional(), "dividerAfter": z.boolean().optional() }).strict()).nullable().optional(), "selectOptionsProviderAction": z.string().nullable().optional(), "section": z.string().nullable().optional(), "hidden": z.string().nullable().optional(), "privacy": z.enum(["normal","password","apiKey","userName"]).optional(), "placeholder": z.string().nullable().optional(), "isFloat": z.boolean().optional() }).strict()).nullable().optional(), "presets": z.array(z.object({ "id": z.number().int().optional(), "name": z.string().nullable().optional(), "implementation": z.string().nullable().optional(), "implementationName": z.string().nullable().optional(), "infoLink": z.string().nullable().optional(), "negate": z.boolean().optional(), "required": z.boolean().optional(), "fields": z.array(z.object({ "order": z.number().int().optional(), "name": z.string().nullable().optional(), "label": z.string().nullable().optional(), "unit": z.string().nullable().optional(), "helpText": z.string().nullable().optional(), "helpTextWarning": z.string().nullable().optional(), "helpLink": z.string().nullable().optional(), "value": z.any().nullable().optional(), "type": z.string().nullable().optional(), "advanced": z.boolean().optional(), "selectOptions": z.array(z.object({ "value": z.number().int().optional(), "name": z.string().nullable().optional(), "order": z.number().int().optional(), "hint": z.string().nullable().optional(), "dividerAfter": z.boolean().optional() }).strict()).nullable().optional(), "selectOptionsProviderAction": z.string().nullable().optional(), "section": z.string().nullable().optional(), "hidden": z.string().nullable().optional(), "privacy": z.enum(["normal","password","apiKey","userName"]).optional(), "placeholder": z.string().nullable().optional(), "isFloat": z.boolean().optional() }).strict()).nullable().optional(), "presets": z.array(z.object({ "id": z.number().int().optional(), "name": z.string().nullable().optional(), "implementation": z.string().nullable().optional(), "implementationName": z.string().nullable().optional(), "infoLink": z.string().nullable().optional(), "negate": z.boolean().optional(), "required": z.boolean().optional(), "fields": z.array(z.object({ "order": z.number().int().optional(), "name": z.string().nullable().optional(), "label": z.string().nullable().optional(), "unit": z.string().nullable().optional(), "helpText": z.string().nullable().optional(), "helpTextWarning": z.string().nullable().optional(), "helpLink": z.string().nullable().optional(), "value": z.any().nullable().optional(), "type": z.string().nullable().optional(), "advanced": z.boolean().optional(), "selectOptions": z.array(z.object({ "value": z.number().int().optional(), "name": z.string().nullable().optional(), "order": z.number().int().optional(), "hint": z.string().nullable().optional(), "dividerAfter": z.boolean().optional() }).strict()).nullable().optional(), "selectOptionsProviderAction": z.string().nullable().optional(), "section": z.string().nullable().optional(), "hidden": z.string().nullable().optional(), "privacy": z.enum(["normal","password","apiKey","userName"]).optional(), "placeholder": z.string().nullable().optional(), "isFloat": z.boolean().optional() }).strict()).nullable().optional(), "presets": z.array(z.object({ "id": z.number().int().optional(), "name": z.string().nullable().optional(), "implementation": z.string().nullable().optional(), "implementationName": z.string().nullable().optional(), "infoLink": z.string().nullable().optional(), "negate": z.boolean().optional(), "required": z.boolean().optional(), "fields": z.array(z.object({ "order": z.number().int().optional(), "name": z.string().nullable().optional(), "label": z.string().nullable().optional(), "unit": z.string().nullable().optional(), "helpText": z.string().nullable().optional(), "helpTextWarning": z.string().nullable().optional(), "helpLink": z.string().nullable().optional(), "value": z.any().nullable().optional(), "type": z.string().nullable().optional(), "advanced": z.boolean().optional(), "selectOptions": z.array(z.object({ "value": z.number().int().optional(), "name": z.string().nullable().optional(), "order": z.number().int().optional(), "hint": z.string().nullable().optional(), "dividerAfter": z.boolean().optional() }).strict()).nullable().optional(), "selectOptionsProviderAction": z.string().nullable().optional(), "section": z.string().nullable().optional(), "hidden": z.string().nullable().optional(), "privacy": z.enum(["normal","password","apiKey","userName"]).optional(), "placeholder": z.string().nullable().optional(), "isFloat": z.boolean().optional() }).strict()).nullable().optional(), "presets": z.array(z.object({ "id": z.number().int().optional(), "name": z.string().nullable().optional(), "implementation": z.string().nullable().optional(), "implementationName": z.string().nullable().optional(), "infoLink": z.string().nullable().optional(), "negate": z.boolean().optional(), "required": z.boolean().optional(), "fields": z.array(z.object({ "order": z.number().int().optional(), "name": z.string().nullable().optional(), "label": z.string().nullable().optional(), "unit": z.string().nullable().optional(), "helpText": z.string().nullable().optional(), "helpTextWarning": z.string().nullable().optional(), "helpLink": z.string().nullable().optional(), "value": z.any().nullable().optional(), "type": z.string().nullable().optional(), "advanced": z.boolean().optional(), "selectOptions": z.array(z.object({ "value": z.string().optional(), "name": z.string().optional(), "order": z.string().optional(), "hint": z.string().optional(), "dividerAfter": z.string().optional() }).strict()).nullable().optional(), "selectOptionsProviderAction": z.string().nullable().optional(), "section": z.string().nullable().optional(), "hidden": z.string().nullable().optional(), "privacy": z.enum(["normal","password","apiKey","userName"]).optional(), "placeholder": z.string().nullable().optional(), "isFloat": z.boolean().optional() }).strict()).nullable().optional(), "presets": z.array(z.object({ "id": z.number().int().optional(), "name": z.string().nullable().optional(), "implementation": z.string().nullable().optional(), "implementationName": z.string().nullable().optional(), "infoLink": z.string().nullable().optional(), "negate": z.boolean().optional(), "required": z.boolean().optional(), "fields": z.array(z.object({ "order": z.string().optional(), "name": z.string().optional(), "label": z.string().optional(), "unit": z.string().optional(), "helpText": z.string().optional(), "helpTextWarning": z.string().optional(), "helpLink": z.string().optional(), "value": z.string().optional(), "type": z.string().optional(), "advanced": z.string().optional(), "selectOptions": z.string().optional(), "selectOptionsProviderAction": z.string().optional(), "section": z.string().optional(), "hidden": z.string().optional(), "privacy": z.string().optional(), "placeholder": z.string().optional(), "isFloat": z.string().optional() }).strict()).nullable().optional(), "presets": z.array(z.object({ "id": z.string().optional(), "name": z.string().optional(), "implementation": z.string().optional(), "implementationName": z.string().optional(), "infoLink": z.string().optional(), "negate": z.string().optional(), "required": z.string().optional(), "fields": z.string().optional(), "presets": z.string().optional() }).strict()).nullable().optional() }).strict()).nullable().optional() }).strict()).nullable().optional() }).strict()).nullable().optional() }).strict()).nullable().optional() }).strict()).nullable().optional() }).strict()).nullable().optional() }).strict()).nullable().optional() }).strict()).nullable().optional(),
  "customFormatScore": z.number().int().optional(),
  "indexerFlags": z.number().int().nullable().optional(),
  "mediaInfo": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `mediaInfo` to the tool, first call the tool `expandSchema` with \"/properties/mediaInfo\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>").optional(),
  "originalFilePath": z.string().nullable().optional(),
  "qualityCutoffNotMet": z.boolean().optional()
}