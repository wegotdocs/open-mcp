{
  "type": "object",
  "title": "BeaconUserUpdateRequestData",
  "description": "A subset of a Beacon User's data which is used to patch the existing identity data associated with a Beacon User. At least one field must be provided. If left unset or null, user data will not be patched.",
  "properties": {
    "date_of_birth": {
      "type": "string",
      "format": "date",
      "title": "ISO8601Date",
      "example": "1990-05-29",
      "description": "A date in the format YYYY-MM-DD (RFC 3339 Section 5.6)."
    },
    "name": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `name` to the tool, first call the tool `expandSchema` with \"/properties/user/properties/name\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>The full name for a given Beacon User.</property-description>",
      "additionalProperties": true
    },
    "address": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `address` to the tool, first call the tool `expandSchema` with \"/properties/user/properties/address\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Home address for the associated user. For more context on this field, see [Input Validation by Country](https://plaid.com/docs/identity-verification/hybrid-input-validation/#input-validation-by-country).</property-description>",
      "additionalProperties": true
    },
    "email_address": {
      "type": "string",
      "format": "email",
      "example": "user@example.com",
      "title": "EmailAddress",
      "description": "A valid email address. Must not have leading or trailing spaces and address must be RFC compliant. For more information, see [RFC 3696](https://datatracker.ietf.org/doc/html/rfc3696)."
    },
    "phone_number": {
      "type": "string",
      "title": "BeaconUserPhoneNumber",
      "description": "A phone number in E.164 format.",
      "example": "+19876543212",
      "nullable": true
    },
    "id_number": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `id_number` to the tool, first call the tool `expandSchema` with \"/properties/user/properties/id_number\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>The ID number associated with a Beacon User.</property-description>",
      "additionalProperties": true
    },
    "ip_address": {
      "description": "An IPv4 or IPV6 address.",
      "type": "string",
      "example": "192.0.2.42",
      "title": "IPAddress",
      "nullable": true
    },
    "depository_accounts": {
      "type": "array",
      "items": {
        "type": "object",
        "title": "BeaconUserRequestDepositoryAccount",
        "description": "Depository account information for the associated user.",
        "properties": {
          "account_number": {
            "type": "string",
            "description": "Must be a valid US Bank Account Number",
            "example": "1234567890"
          },
          "routing_number": {
            "type": "string",
            "description": "The routing number of the account.",
            "example": "021000021"
          }
        },
        "required": [
          "account_number",
          "routing_number"
        ],
        "additionalProperties": true
      }
    }
  },
  "nullable": true,
  "additionalProperties": true
}