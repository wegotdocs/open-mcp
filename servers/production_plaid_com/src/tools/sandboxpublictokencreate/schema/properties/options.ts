import { z } from "zod"

export const inputParamsSchema = {
  "webhook": z.string().describe("Specify a webhook to associate with the new Item.").optional(),
  "override_username": z.string().nullable().describe("Test username to use for the creation of the Sandbox Item. Default value is `user_good`.").optional(),
  "override_password": z.string().nullable().describe("Test password to use for the creation of the Sandbox Item. Default value is `pass_good`.").optional(),
  "transactions": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `transactions` to the tool, first call the tool `expandSchema` with \"/properties/options/properties/transactions\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>An optional set of parameters corresponding to transactions options.</property-description>").optional(),
  "statements": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `statements` to the tool, first call the tool `expandSchema` with \"/properties/options/properties/statements\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>An optional set of parameters corresponding to statements options.</property-description>").optional(),
  "income_verification": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `income_verification` to the tool, first call the tool `expandSchema` with \"/properties/options/properties/income_verification\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>A set of parameters for income verification options. This field is required if `income_verification` is included in the `initial_products` array.</property-description>").optional()
}