{
  "type": "object",
  "properties": {
    "EstimateMessage": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `EstimateMessage` to the tool, first call the tool `expandSchema` with \"/properties/EmailMessagesPrefs/properties/EstimateMessage\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>",
      "additionalProperties": true
    },
    "InvoiceMessage": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `InvoiceMessage` to the tool, first call the tool `expandSchema` with \"/properties/EmailMessagesPrefs/properties/InvoiceMessage\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>",
      "additionalProperties": true
    },
    "SalesReceiptMessage": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `SalesReceiptMessage` to the tool, first call the tool `expandSchema` with \"/properties/EmailMessagesPrefs/properties/SalesReceiptMessage\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>",
      "additionalProperties": true
    },
    "StatementMessage": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `StatementMessage` to the tool, first call the tool `expandSchema` with \"/properties/EmailMessagesPrefs/properties/StatementMessage\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>",
      "additionalProperties": true
    }
  }
}