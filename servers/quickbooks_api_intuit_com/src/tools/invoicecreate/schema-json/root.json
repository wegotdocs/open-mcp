{
  "type": "object",
  "properties": {
    "operation": {
      "type": "string",
      "example": "delete"
    },
    "minorversion": {
      "type": "string",
      "example": "1",
      "default": "73"
    },
    "Id": {
      "type": "string",
      "description": "Unique identifier for this object. Sort order is ASC by default."
    },
    "Line": {
      "type": "array",
      "description": "Individual line items of a transaction. Valid Line types include SalesItemLine, GroupLine, DescriptionOnlyLine (also used for inline Subtotal lines), DiscountLine and SubTotalLine (used for the overall transaction)",
      "items": {
        "type": "object",
        "description": "Reference type",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Unique identifier for this object. Sort order is ASC by default."
          },
          "Amount": {
            "type": "number",
            "description": "The total amount of the line item. This is the quantity multiplied by the unit price."
          },
          "Description": {
            "type": "string",
            "description": "A description of the line item."
          },
          "DetailType": {
            "type": "string",
            "description": "The type of detail for the line item. Valid values include SalesItemLineDetail.",
            "enum": [
              "SalesItemLineDetail",
              "GroupLineDetail",
              "DescriptionOnly",
              "DiscountLineDetail",
              "SubTotalLineDetail"
            ]
          },
          "GroupLineDetail": {
            "type": "object",
            "properties": {
              "Quantity": {
                "type": "number",
                "description": "The quantity of the item."
              },
              "Line": {
                "type": "array",
                "description": "Individual line items of a transaction. Valid Line types include SalesItemLine, GroupLine, DescriptionOnlyLine (also used for inline Subtotal lines), DiscountLine and SubTotalLine (used for the overall transaction)",
                "items": {
                  "type": "object",
                  "description": "Reference type",
                  "properties": {
                    "Id": {
                      "type": "string",
                      "description": "Unique identifier for this object. Sort order is ASC by default."
                    },
                    "Amount": {
                      "type": "number",
                      "description": "The total amount of the line item. This is the quantity multiplied by the unit price."
                    },
                    "Description": {
                      "type": "string",
                      "description": "A description of the line item."
                    },
                    "DetailType": {
                      "type": "string",
                      "description": "The type of detail for the line item. Valid values include SalesItemLineDetail.",
                      "enum": [
                        "SalesItemLineDetail",
                        "GroupLineDetail",
                        "DescriptionOnly",
                        "DiscountLineDetail",
                        "SubTotalLineDetail"
                      ]
                    },
                    "GroupLineDetail": {
                      "type": "object",
                      "properties": {
                        "Quantity": {
                          "type": "number",
                          "description": "The quantity of the item."
                        },
                        "Line": {
                          "type": "array",
                          "description": "Individual line items of a transaction. Valid Line types include SalesItemLine, GroupLine, DescriptionOnlyLine (also used for inline Subtotal lines), DiscountLine and SubTotalLine (used for the overall transaction)",
                          "items": {
                            "type": "object",
                            "description": "Reference type",
                            "properties": {
                              "Id": {
                                "type": "string",
                                "description": "Unique identifier for this object. Sort order is ASC by default."
                              },
                              "Amount": {
                                "type": "number",
                                "description": "The total amount of the line item. This is the quantity multiplied by the unit price."
                              },
                              "Description": {
                                "type": "string",
                                "description": "A description of the line item."
                              },
                              "DetailType": {
                                "type": "string",
                                "description": "The type of detail for the line item. Valid values include SalesItemLineDetail.",
                                "enum": [
                                  "SalesItemLineDetail",
                                  "GroupLineDetail",
                                  "DescriptionOnly",
                                  "DiscountLineDetail",
                                  "SubTotalLineDetail"
                                ]
                              },
                              "GroupLineDetail": {
                                "type": "object",
                                "properties": {
                                  "Quantity": {
                                    "type": "number",
                                    "description": "The quantity of the item."
                                  },
                                  "Line": {
                                    "type": "array",
                                    "description": "Individual line items of a transaction. Valid Line types include SalesItemLine, GroupLine, DescriptionOnlyLine (also used for inline Subtotal lines), DiscountLine and SubTotalLine (used for the overall transaction)",
                                    "items": {
                                      "type": "object",
                                      "description": "Reference type",
                                      "properties": {
                                        "Id": {
                                          "type": "string",
                                          "description": "Unique identifier for this object. Sort order is ASC by default."
                                        },
                                        "Amount": {
                                          "type": "number",
                                          "description": "The total amount of the line item. This is the quantity multiplied by the unit price."
                                        },
                                        "Description": {
                                          "type": "string",
                                          "description": "A description of the line item."
                                        },
                                        "DetailType": {
                                          "type": "string",
                                          "description": "The type of detail for the line item. Valid values include SalesItemLineDetail.",
                                          "enum": [
                                            "SalesItemLineDetail",
                                            "GroupLineDetail",
                                            "DescriptionOnly",
                                            "DiscountLineDetail",
                                            "SubTotalLineDetail"
                                          ]
                                        },
                                        "GroupLineDetail": {
                                          "type": "object",
                                          "properties": {
                                            "Quantity": {
                                              "type": "number",
                                              "description": "The quantity of the item."
                                            },
                                            "Line": {
                                              "type": "array",
                                              "description": "Individual line items of a transaction. Valid Line types include SalesItemLine, GroupLine, DescriptionOnlyLine (also used for inline Subtotal lines), DiscountLine and SubTotalLine (used for the overall transaction)",
                                              "items": {
                                                "type": "object",
                                                "description": "Reference type",
                                                "properties": {
                                                  "Id": {
                                                    "type": "string",
                                                    "description": "Unique identifier for this object. Sort order is ASC by default."
                                                  },
                                                  "Amount": {
                                                    "type": "number",
                                                    "description": "The total amount of the line item. This is the quantity multiplied by the unit price."
                                                  },
                                                  "Description": {
                                                    "type": "string",
                                                    "description": "A description of the line item."
                                                  },
                                                  "DetailType": {
                                                    "type": "string",
                                                    "description": "The type of detail for the line item. Valid values include SalesItemLineDetail.",
                                                    "enum": [
                                                      "SalesItemLineDetail",
                                                      "GroupLineDetail",
                                                      "DescriptionOnly",
                                                      "DiscountLineDetail",
                                                      "SubTotalLineDetail"
                                                    ]
                                                  },
                                                  "GroupLineDetail": {
                                                    "type": "object",
                                                    "properties": {
                                                      "Quantity": {
                                                        "type": "number",
                                                        "description": "The quantity of the item."
                                                      },
                                                      "Line": {
                                                        "type": "array",
                                                        "description": "Individual line items of a transaction. Valid Line types include SalesItemLine, GroupLine, DescriptionOnlyLine (also used for inline Subtotal lines), DiscountLine and SubTotalLine (used for the overall transaction)",
                                                        "items": {
                                                          "type": "object",
                                                          "description": "Reference type",
                                                          "properties": {
                                                            "Id": {
                                                              "type": "string",
                                                              "description": "Unique identifier for this object. Sort order is ASC by default."
                                                            },
                                                            "Amount": {
                                                              "type": "number",
                                                              "description": "The total amount of the line item. This is the quantity multiplied by the unit price."
                                                            },
                                                            "Description": {
                                                              "type": "string",
                                                              "description": "A description of the line item."
                                                            },
                                                            "DetailType": {
                                                              "type": "string",
                                                              "description": "The type of detail for the line item. Valid values include SalesItemLineDetail.",
                                                              "enum": [
                                                                "SalesItemLineDetail",
                                                                "GroupLineDetail",
                                                                "DescriptionOnly",
                                                                "DiscountLineDetail",
                                                                "SubTotalLineDetail"
                                                              ]
                                                            },
                                                            "GroupLineDetail": {
                                                              "type": "object",
                                                              "properties": {
                                                                "Quantity": {
                                                                  "type": "string"
                                                                },
                                                                "Line": {
                                                                  "type": "string"
                                                                },
                                                                "GroupItemRef": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            },
                                                            "SalesItemLineDetail": {
                                                              "type": "object",
                                                              "properties": {
                                                                "Qty": {
                                                                  "type": "string"
                                                                },
                                                                "UnitPrice": {
                                                                  "type": "string"
                                                                },
                                                                "ItemRef": {
                                                                  "type": "string"
                                                                },
                                                                "ClassRef": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            },
                                                            "DiscountLineDetail": {
                                                              "type": "object",
                                                              "properties": {
                                                                "ClassRef": {
                                                                  "type": "string"
                                                                },
                                                                "TaxCodeRef": {
                                                                  "type": "string"
                                                                },
                                                                "DiscountAccountRef": {
                                                                  "type": "string"
                                                                },
                                                                "PercentBased": {
                                                                  "type": "string"
                                                                },
                                                                "DiscountPercent": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "GroupItemRef": {
                                                        "type": "object",
                                                        "description": "Reference type",
                                                        "properties": {
                                                          "value": {
                                                            "type": "string",
                                                            "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "SalesItemLineDetail": {
                                                    "type": "object",
                                                    "properties": {
                                                      "Qty": {
                                                        "type": "number",
                                                        "description": "The quantity of the item."
                                                      },
                                                      "UnitPrice": {
                                                        "type": "number",
                                                        "description": "The price of a single unit of the item."
                                                      },
                                                      "ItemRef": {
                                                        "type": "object",
                                                        "description": "Reference type",
                                                        "properties": {
                                                          "value": {
                                                            "type": "string",
                                                            "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                                                          }
                                                        }
                                                      },
                                                      "ClassRef": {
                                                        "type": "object",
                                                        "description": "Reference type",
                                                        "properties": {
                                                          "value": {
                                                            "type": "string",
                                                            "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "DiscountLineDetail": {
                                                    "type": "object",
                                                    "properties": {
                                                      "ClassRef": {
                                                        "type": "object",
                                                        "description": "Reference type",
                                                        "properties": {
                                                          "value": {
                                                            "type": "string",
                                                            "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                                                          }
                                                        }
                                                      },
                                                      "TaxCodeRef": {
                                                        "type": "object",
                                                        "description": "Reference type",
                                                        "properties": {
                                                          "value": {
                                                            "type": "string",
                                                            "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                                                          }
                                                        }
                                                      },
                                                      "DiscountAccountRef": {
                                                        "type": "object",
                                                        "description": "Reference type",
                                                        "properties": {
                                                          "value": {
                                                            "type": "string",
                                                            "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                                                          },
                                                          "name": {
                                                            "type": "string",
                                                            "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                                                          }
                                                        }
                                                      },
                                                      "PercentBased": {
                                                        "type": "boolean",
                                                        "description": "If true, the discount is a percentage of the total amount. If false, the discount is a fixed amount."
                                                      },
                                                      "DiscountPercent": {
                                                        "type": "number",
                                                        "description": "The percentage of the discount. This field is required if PercentBased is true."
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "GroupItemRef": {
                                              "type": "object",
                                              "description": "Reference type",
                                              "properties": {
                                                "value": {
                                                  "type": "string",
                                                  "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "SalesItemLineDetail": {
                                          "type": "object",
                                          "properties": {
                                            "Qty": {
                                              "type": "number",
                                              "description": "The quantity of the item."
                                            },
                                            "UnitPrice": {
                                              "type": "number",
                                              "description": "The price of a single unit of the item."
                                            },
                                            "ItemRef": {
                                              "type": "object",
                                              "description": "Reference type",
                                              "properties": {
                                                "value": {
                                                  "type": "string",
                                                  "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                                                }
                                              }
                                            },
                                            "ClassRef": {
                                              "type": "object",
                                              "description": "Reference type",
                                              "properties": {
                                                "value": {
                                                  "type": "string",
                                                  "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "DiscountLineDetail": {
                                          "type": "object",
                                          "properties": {
                                            "ClassRef": {
                                              "type": "object",
                                              "description": "Reference type",
                                              "properties": {
                                                "value": {
                                                  "type": "string",
                                                  "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                                                }
                                              }
                                            },
                                            "TaxCodeRef": {
                                              "type": "object",
                                              "description": "Reference type",
                                              "properties": {
                                                "value": {
                                                  "type": "string",
                                                  "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                                                }
                                              }
                                            },
                                            "DiscountAccountRef": {
                                              "type": "object",
                                              "description": "Reference type",
                                              "properties": {
                                                "value": {
                                                  "type": "string",
                                                  "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                                                }
                                              }
                                            },
                                            "PercentBased": {
                                              "type": "boolean",
                                              "description": "If true, the discount is a percentage of the total amount. If false, the discount is a fixed amount."
                                            },
                                            "DiscountPercent": {
                                              "type": "number",
                                              "description": "The percentage of the discount. This field is required if PercentBased is true."
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "GroupItemRef": {
                                    "type": "object",
                                    "description": "Reference type",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                                      }
                                    }
                                  }
                                }
                              },
                              "SalesItemLineDetail": {
                                "type": "object",
                                "properties": {
                                  "Qty": {
                                    "type": "number",
                                    "description": "The quantity of the item."
                                  },
                                  "UnitPrice": {
                                    "type": "number",
                                    "description": "The price of a single unit of the item."
                                  },
                                  "ItemRef": {
                                    "type": "object",
                                    "description": "Reference type",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                                      }
                                    }
                                  },
                                  "ClassRef": {
                                    "type": "object",
                                    "description": "Reference type",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                                      }
                                    }
                                  }
                                }
                              },
                              "DiscountLineDetail": {
                                "type": "object",
                                "properties": {
                                  "ClassRef": {
                                    "type": "object",
                                    "description": "Reference type",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                                      }
                                    }
                                  },
                                  "TaxCodeRef": {
                                    "type": "object",
                                    "description": "Reference type",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                                      }
                                    }
                                  },
                                  "DiscountAccountRef": {
                                    "type": "object",
                                    "description": "Reference type",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                                      }
                                    }
                                  },
                                  "PercentBased": {
                                    "type": "boolean",
                                    "description": "If true, the discount is a percentage of the total amount. If false, the discount is a fixed amount."
                                  },
                                  "DiscountPercent": {
                                    "type": "number",
                                    "description": "The percentage of the discount. This field is required if PercentBased is true."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "GroupItemRef": {
                          "type": "object",
                          "description": "Reference type",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                            },
                            "name": {
                              "type": "string",
                              "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                            }
                          }
                        }
                      }
                    },
                    "SalesItemLineDetail": {
                      "type": "object",
                      "properties": {
                        "Qty": {
                          "type": "number",
                          "description": "The quantity of the item."
                        },
                        "UnitPrice": {
                          "type": "number",
                          "description": "The price of a single unit of the item."
                        },
                        "ItemRef": {
                          "type": "object",
                          "description": "Reference type",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                            },
                            "name": {
                              "type": "string",
                              "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                            }
                          }
                        },
                        "ClassRef": {
                          "type": "object",
                          "description": "Reference type",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                            },
                            "name": {
                              "type": "string",
                              "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                            }
                          }
                        }
                      }
                    },
                    "DiscountLineDetail": {
                      "type": "object",
                      "properties": {
                        "ClassRef": {
                          "type": "object",
                          "description": "Reference type",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                            },
                            "name": {
                              "type": "string",
                              "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                            }
                          }
                        },
                        "TaxCodeRef": {
                          "type": "object",
                          "description": "Reference type",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                            },
                            "name": {
                              "type": "string",
                              "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                            }
                          }
                        },
                        "DiscountAccountRef": {
                          "type": "object",
                          "description": "Reference type",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                            },
                            "name": {
                              "type": "string",
                              "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                            }
                          }
                        },
                        "PercentBased": {
                          "type": "boolean",
                          "description": "If true, the discount is a percentage of the total amount. If false, the discount is a fixed amount."
                        },
                        "DiscountPercent": {
                          "type": "number",
                          "description": "The percentage of the discount. This field is required if PercentBased is true."
                        }
                      }
                    }
                  }
                }
              },
              "GroupItemRef": {
                "type": "object",
                "description": "Reference type",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                  },
                  "name": {
                    "type": "string",
                    "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                  }
                }
              }
            }
          },
          "SalesItemLineDetail": {
            "type": "object",
            "properties": {
              "Qty": {
                "type": "number",
                "description": "The quantity of the item."
              },
              "UnitPrice": {
                "type": "number",
                "description": "The price of a single unit of the item."
              },
              "ItemRef": {
                "type": "object",
                "description": "Reference type",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                  },
                  "name": {
                    "type": "string",
                    "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                  }
                }
              },
              "ClassRef": {
                "type": "object",
                "description": "Reference type",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                  },
                  "name": {
                    "type": "string",
                    "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                  }
                }
              }
            }
          },
          "DiscountLineDetail": {
            "type": "object",
            "properties": {
              "ClassRef": {
                "type": "object",
                "description": "Reference type",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                  },
                  "name": {
                    "type": "string",
                    "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                  }
                }
              },
              "TaxCodeRef": {
                "type": "object",
                "description": "Reference type",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                  },
                  "name": {
                    "type": "string",
                    "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                  }
                }
              },
              "DiscountAccountRef": {
                "type": "object",
                "description": "Reference type",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file."
                  },
                  "name": {
                    "type": "string",
                    "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent."
                  }
                }
              },
              "PercentBased": {
                "type": "boolean",
                "description": "If true, the discount is a percentage of the total amount. If false, the discount is a fixed amount."
              },
              "DiscountPercent": {
                "type": "number",
                "description": "The percentage of the discount. This field is required if PercentBased is true."
              }
            }
          }
        }
      }
    },
    "CustomerRef": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `CustomerRef` to the tool, first call the tool `expandSchema` with \"/properties/CustomerRef\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use Customer.Id and Customer.DisplayName from that object for CustomerRef.value and CustomerRef.name, respectively.</property-description>",
      "additionalProperties": true
    },
    "PaymentMethodRef": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `PaymentMethodRef` to the tool, first call the tool `expandSchema` with \"/properties/PaymentMethodRef\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Reference to the payment method associated with the transaction. Query the PaymentMethod name list resource to determine the appropriate PaymentMethod object for this reference. Use PaymentMethod.Id and PaymentMethod.Name from that object for PaymentMethodRef.value and PaymentMethodRef.name, respectively.</property-description>",
      "additionalProperties": true
    },
    "SyncToken": {
      "type": "string",
      "description": "Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online."
    },
    "CurrencyRef": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `CurrencyRef` to the tool, first call the tool `expandSchema` with \"/properties/CurrencyRef\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company. Multicurrency is enabled for the company if Preferences.MultiCurrencyEnabled is set to true. Read more about multicurrency support here. Applicable if multicurrency is enabled for the company.</property-description>",
      "additionalProperties": true
    },
    "DocNumber": {
      "type": "string",
      "description": "Reference number for the transaction. If not explicitly provided at create time, this field is populated based on the setting of Preferences:CustomTxnNumber as follows- If Preferences:CustomTxnNumber is true a custom value can be provided. If no value is supplied, the resulting DocNumber is null. If Preferences:CustomTxnNumber is false, resulting DocNumber is system generated by incrementing the last number by 1. If Preferences:CustomTxnNumber is false then do not send a value as it can lead to unwanted duplicates. If a DocNumber value is sent for an Update operation, then it just updates that particular invoice and does not alter the internal system DocNumber. Note- DocNumber is an optional field for all locales except France. For France locale if Preferences:CustomTxnNumber is enabled it will not be automatically generated and is a required field. If a duplicate DocNumber needs to be supplied, add the query parameter name/value pair, include=allowduplicatedocnum to the URI."
    },
    "BillEmail": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `BillEmail` to the tool, first call the tool `expandSchema` with \"/properties/BillEmail\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Identifies the e-mail address where the invoice is sent. If EmailStatus=NeedToSend, BillEmailis a required input.</property-description>",
      "additionalProperties": true
    },
    "TxnDate": {
      "type": "string",
      "description": "The date entered by the user when this transaction occurred. yyyy/MM/dd is the valid date format. For posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used. Sort order is ASC by default."
    },
    "ShipFromAddr": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `ShipFromAddr` to the tool, first call the tool `expandSchema` with \"/properties/ShipFromAddr\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Identifies the address where the goods are shipped from. For transactions without shipping, it represents the address where the sale took place. For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created- Line1 and Line2 elements are populated with the customer name and company name. Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.</property-description>",
      "additionalProperties": true
    },
    "ShipDate": {
      "type": "string",
      "description": "Date for delivery of goods or services."
    },
    "TrackingNum": {
      "type": "string",
      "description": "Shipping provider's tracking number for the delivery of the goods associated with the transaction."
    },
    "ClassRef": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `ClassRef` to the tool, first call the tool `expandSchema` with \"/properties/ClassRef\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.</property-description>",
      "additionalProperties": true
    },
    "PrintStatus": {
      "type": "string",
      "description": "Printing status of the invoice. Valid values- NotSet, NeedToPrint, PrintComplete ."
    },
    "SalesTermRef": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `SalesTermRef` to the tool, first call the tool `expandSchema` with \"/properties/SalesTermRef\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Reference to the sales term associated with the transaction. Query the Term name list resource to determine the appropriate Term object for this reference. Use Term.Id and Term.Name from that object for SalesTermRef.value and SalesTermRef.name, respectively.</property-description>",
      "additionalProperties": true
    },
    "TxnSource": {
      "type": "string",
      "description": "Used internally to specify originating source of a credit card transaction."
    },
    "LinkedTxn": {
      "type": "array",
      "description": "Zero or more related transactions to this Invoice object. The following linked relationships are supported- Links to Estimate and TimeActivity objects can be established directly to this Invoice object with UI or with the API. Create, Read, Update, and Query operations are avaialble at the API level for these types of links. Only one link can be made to an Estimate. Progress Invoicing is not supported via the API. Links to expenses incurred on behalf of the customer are returned in the response with LinkedTxn.TxnType set to ReimburseCharge, ChargeCredit or StatementCharge corresponding to billable customer expenses of type Cash, Delayed Credit, and Delayed Charge, respectively. Links to these types of transactions are established within the QuickBooks UI, only, and are available as read-only at the API level. Links to payments applied to an Invoice object are returned in the response with LinkedTxn.TxnType set to Payment. Links to Payment transactions are established within the QuickBooks UI, only, and are available as read-only at the API level. Use LinkedTxn.TxnId as the ID in a separate read request for the specific resource to retrieve details of the linked object.",
      "items": {}
    },
    "DepositToAccountRef": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `DepositToAccountRef` to the tool, first call the tool `expandSchema` with \"/properties/DepositToAccountRef\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Account to which money is deposited. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType is Other Current Asset or Bank. Use Account.Id and Account.Name from that object for DepositToAccountRef.value and DepositToAccountRef.name, respectively. Before you can use this field ensure that the company allows deposits in their invoices first. This can be found by querying the Preferences endpoint. SalesFormsPrefs.AllowDeposit must be equal to true. If you do not specify this account the payment is applied to the Undeposited Funds account.</property-description>",
      "additionalProperties": true
    },
    "GlobalTaxCalculation": {
      "type": "string",
      "description": "Method in which tax is applied. Allowed values are- TaxExcluded, TaxInclusive, and NotApplicable."
    },
    "AllowOnlineACHPayment": {
      "type": "boolean",
      "description": "Specifies if this invoice can be paid with online bank transfers and corresponds to the Free bank transfer online payment check box on the QuickBooks UI. Active when Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to true. If set to true, allow invoice to be paid with online bank transfers. The Free bank transfer online payment check box is checked on the QuickBooks UI for this invoice. If set to false, online bank transfers are not allowed. The Free bank transfer online payment check box is not checked on the QuickBooks UI for this invoice."
    },
    "TransactionLocationType": {
      "type": "string",
      "description": "The account location. For France locale valid values include- WithinFrance FranceOverseas OutsideFranceWithEU OutsideEU For UAE, valid values include ABUDHABI AJMAN SHARJAH DUBAI FUJAIRAH RAS_AL_KHAIMAH UMM_AL_QUWAIN OTHER_GCC"
    },
    "DueDate": {
      "type": "string",
      "description": "Date when the payment of the transaction is due. If date is not provided, the number of days specified in SalesTermRef added the transaction date will be used."
    },
    "MetaData": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `MetaData` to the tool, first call the tool `expandSchema` with \"/properties/MetaData\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.</property-description>",
      "additionalProperties": true
    },
    "PrivateNote": {
      "type": "string",
      "description": "User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Statement Memo field on the Invoice form in the QuickBooks Online UI."
    },
    "BillEmailCc": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `BillEmailCc` to the tool, first call the tool `expandSchema` with \"/properties/BillEmailCc\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Identifies the carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in Preferences.SalesFormsPrefs.SalesEmailCc. If this email address is invalid, carbon copy email is not sent.</property-description>",
      "additionalProperties": true
    },
    "CustomerMemo": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `CustomerMemo` to the tool, first call the tool `expandSchema` with \"/properties/CustomerMemo\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>User-entered message to the customer; this message is visible to end user on their transactions.</property-description>",
      "additionalProperties": true
    },
    "EmailStatus": {
      "type": "string",
      "description": "Email status of the invoice. Valid values- NotSet, NeedToSend, EmailSent"
    },
    "ExchangeRate": {
      "type": "number",
      "description": "The number of home currency units it takes to equal one unit of currency specified by CurrencyRef. Applicable if multicurrency is enabled for the company."
    },
    "Deposit": {
      "type": "number",
      "description": "The deposit made towards this invoice."
    },
    "TxnTaxDetail": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `TxnTaxDetail` to the tool, first call the tool `expandSchema` with \"/properties/TxnTaxDetail\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>This data type provides information for taxes charged on the transaction as a whole. It captures the details sales taxes calculated for the transaction based on the tax codes referenced by the transaction. This can be calculated by QuickBooks business logic or you may supply it when adding a transaction. See Global tax model for more information about this element. If sales tax is disabled (Preferences.TaxPrefs.UsingSalesTax is set to false) then TxnTaxDetail is ignored and not stored.</property-description>",
      "additionalProperties": true
    },
    "AllowOnlineCreditCardPayment": {
      "type": "boolean",
      "description": "Specifies if online credit card payments are allowed for this invoice and corresponds to the Cards online payment check box on the QuickBooks UI. Active when Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to true. If set to true, allow invoice to be paid with online credit card payments. The Cards online payment check box is checked on the QuickBooks UI. If set to false, online credit card payments are not allowed. The Cards online payment check box is not checked on the QuickBooks UI."
    },
    "CustomField": {
      "type": "array",
      "description": "One of, up to three custom fields for the transaction. Available for custom fields so configured for the company. Check Preferences.SalesFormsPrefs.CustomField and Preferences.VendorAndPurchasesPrefs.POCustomField for custom fields currenly configured. Click here to learn about managing custom fields.",
      "items": {}
    },
    "ShipAddr": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `ShipAddr` to the tool, first call the tool `expandSchema` with \"/properties/ShipAddr\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Identifies the address where the goods must be shipped. If ShipAddris not specified, and a default Customer:ShippingAddr is specified in QuickBooks for this customer, the default ship-to address will be used by QuickBooks. For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created- Line1 and Line2 elements are populated with the customer name and company name. Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.</property-description>",
      "additionalProperties": true
    },
    "DepartmentRef": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `DepartmentRef` to the tool, first call the tool `expandSchema` with \"/properties/DepartmentRef\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>A reference to a Department object specifying the location of the transaction. Available if Preferences.AccountingInfoPrefs.TrackDepartments is set to true. Query the Department name list resource to determine the appropriate department object for this reference. Use Department.Id and Department.Name from that object for DepartmentRef.value and DepartmentRef.name, respectively.</property-description>",
      "additionalProperties": true
    },
    "BillEmailBcc": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `BillEmailBcc` to the tool, first call the tool `expandSchema` with \"/properties/BillEmailBcc\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Identifies the blind carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in Preferences.SalesFormsPrefs.SalesEmailBcc. If this email address is invalid, blind carbon copy email is not sent.</property-description>",
      "additionalProperties": true
    },
    "ShipMethodRef": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `ShipMethodRef` to the tool, first call the tool `expandSchema` with \"/properties/ShipMethodRef\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Reference to the ShipMethod associated with the transaction. There is no shipping method list. Reference resolves to a string. Reference to the ShipMethod associated with the transaction. There is no shipping method list. Reference resolves to a string.</property-description>",
      "additionalProperties": true
    },
    "BillAddr": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `BillAddr` to the tool, first call the tool `expandSchema` with \"/properties/BillAddr\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Bill-to address of the Invoice. If BillAddris not specified, and a default Customer:BillingAddr is specified in QuickBooks for this customer, the default bill-to address is used by QuickBooks. For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created- Line1 and Line2 elements are populated with the customer name and company name. Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings. Starting minorversion=54 if you update the CustomerRef, the address passed using BillAddr will be honored.</property-description>",
      "additionalProperties": true
    },
    "ApplyTaxAfterDiscount": {
      "type": "boolean",
      "description": "If false or null, calculate the sales tax first, and then apply the discount. If true, subtract the discount first and then calculate the sales tax."
    },
    "HomeBalance": {
      "type": "number",
      "description": "Convenience field containing the amount in Balance expressed in terms of the home currency. Calculated by QuickBooks business logic. Value is valid only when CurrencyRef is specified and available when endpoint is evoked with the minorversion=3 query parameter. Applicable if multicurrency is enabled for the company"
    },
    "DeliveryInfo": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `DeliveryInfo` to the tool, first call the tool `expandSchema` with \"/properties/DeliveryInfo\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Email delivery information. Returned when a request has been made to deliver email with the send operation.</property-description>",
      "additionalProperties": true
    },
    "TotalAmt": {
      "type": "number",
      "description": "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks."
    },
    "InvoiceLink": {
      "type": "string",
      "description": "Sharable link for the invoice sent to external customers. The link is generated only for invoices with online payment enabled and having a valid customer email address. Include query param `include=invoiceLink` to get the link back on query response."
    },
    "RecurDataRef": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `RecurDataRef` to the tool, first call the tool `expandSchema` with \"/properties/RecurDataRef\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>A reference to the Recurring Transaction. It captures what recurring transaction template the Invoice was created from.</property-description>",
      "additionalProperties": true
    },
    "TaxExemptionRef": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `TaxExemptionRef` to the tool, first call the tool `expandSchema` with \"/properties/TaxExemptionRef\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Reference to the TaxExepmtion ID associated with this object. Available for companies that have automated sales tax enabled. TaxExemptionRef.Name- The Tax Exemption Id for the customer to which this object is associated. This Id is typically issued by the state. TaxExemptionRef.value- The system-generated Id of the exemption type.</property-description>",
      "additionalProperties": true
    },
    "Balance": {
      "type": "number",
      "description": "The balance reflecting any payments made against the transaction. Initially set to the value of TotalAmt. A Balance of 0 indicates the invoice is fully paid. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks."
    },
    "HomeTotalAmt": {
      "type": "number",
      "description": "Total amount of the transaction in the home currency. Includes the total of all the charges, allowances and taxes. Calculated by QuickBooks business logic. Value is valid only when CurrencyRef is specified. Applicable if multicurrency is enabled for the company."
    },
    "FreeFormAddress": {
      "type": "boolean",
      "description": "Denotes how ShipAddr is stored- formatted or unformatted. The value of this flag is system defined based on format of shipping address at object create time. If set to false, shipping address is returned in a formatted style using City, Country, CountrySubDivisionCode, Postal code. If set to true, shipping address is returned in an unformatted style using Line1 through Line5 attributes."
    }
  },
  "required": []
}