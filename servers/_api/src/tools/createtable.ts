import { z } from "zod"

export const toolName = `createtable`
export const toolDescription = `Create a table`
export const baseUrl = `/api`
export const path = `/v1/tables`
export const method = `post`
export const security = []
export const keys = {
  "query": [],
  "header": [],
  "path": [],
  "cookie": [],
  "body": [
    "addition",
    "columns",
    "dataProducts",
    "databaseSchema",
    "description",
    "displayName",
    "domain",
    "extension",
    "name",
    "owner",
    "retentionPeriod",
    "sourceUrl",
    "tableConstraints",
    "tablePartition",
    "tableProfilerConfig",
    "tableType",
    "tags",
    "viewDefinition"
  ]
}
export const flatMap = {}

export const inputParams = z.object({ "addition": z.record(z.any()).optional(), "columns": z.array(z.object({ "arrayDataType": z.enum(["NUMBER","TINYINT","SMALLINT","INT","BIGINT","BYTEINT","BYTES","FLOAT","DOUBLE","DECIMAL","NUMERIC","TIMESTAMP","TIMESTAMPZ","TIME","DATE","DATETIME","INTERVAL","STRING","MEDIUMTEXT","TEXT","CHAR","LONG","VARCHAR","BOOLEAN","BINARY","VARBINARY","ARRAY","BLOB","LONGBLOB","MEDIUMBLOB","MAP","STRUCT","UNION","SET","GEOGRAPHY","ENUM","JSON","UUID","VARIANT","GEOMETRY","BYTEA","AGGREGATEFUNCTION","ERROR","FIXED","RECORD","NULL","SUPER","HLLSKETCH","PG_LSN","PG_SNAPSHOT","TSQUERY","TXID_SNAPSHOT","XML","MACADDR","TSVECTOR","UNKNOWN","CIDR","INET","CLOB","ROWID","LOWCARDINALITY","YEAR","POINT","POLYGON","TUPLE","SPATIAL","TABLE","NTEXT","IMAGE","IPV4","IPV6","DATETIMERANGE"]).optional(), "children": z.array(z.object({ "arrayDataType": z.enum(["NUMBER","TINYINT","SMALLINT","INT","BIGINT","BYTEINT","BYTES","FLOAT","DOUBLE","DECIMAL","NUMERIC","TIMESTAMP","TIMESTAMPZ","TIME","DATE","DATETIME","INTERVAL","STRING","MEDIUMTEXT","TEXT","CHAR","LONG","VARCHAR","BOOLEAN","BINARY","VARBINARY","ARRAY","BLOB","LONGBLOB","MEDIUMBLOB","MAP","STRUCT","UNION","SET","GEOGRAPHY","ENUM","JSON","UUID","VARIANT","GEOMETRY","BYTEA","AGGREGATEFUNCTION","ERROR","FIXED","RECORD","NULL","SUPER","HLLSKETCH","PG_LSN","PG_SNAPSHOT","TSQUERY","TXID_SNAPSHOT","XML","MACADDR","TSVECTOR","UNKNOWN","CIDR","INET","CLOB","ROWID","LOWCARDINALITY","YEAR","POINT","POLYGON","TUPLE","SPATIAL","TABLE","NTEXT","IMAGE","IPV4","IPV6","DATETIMERANGE"]).optional(), "children": z.array(z.object({ "arrayDataType": z.enum(["NUMBER","TINYINT","SMALLINT","INT","BIGINT","BYTEINT","BYTES","FLOAT","DOUBLE","DECIMAL","NUMERIC","TIMESTAMP","TIMESTAMPZ","TIME","DATE","DATETIME","INTERVAL","STRING","MEDIUMTEXT","TEXT","CHAR","LONG","VARCHAR","BOOLEAN","BINARY","VARBINARY","ARRAY","BLOB","LONGBLOB","MEDIUMBLOB","MAP","STRUCT","UNION","SET","GEOGRAPHY","ENUM","JSON","UUID","VARIANT","GEOMETRY","BYTEA","AGGREGATEFUNCTION","ERROR","FIXED","RECORD","NULL","SUPER","HLLSKETCH","PG_LSN","PG_SNAPSHOT","TSQUERY","TXID_SNAPSHOT","XML","MACADDR","TSVECTOR","UNKNOWN","CIDR","INET","CLOB","ROWID","LOWCARDINALITY","YEAR","POINT","POLYGON","TUPLE","SPATIAL","TABLE","NTEXT","IMAGE","IPV4","IPV6","DATETIMERANGE"]).optional(), "children": z.array(z.object({ "arrayDataType": z.enum(["NUMBER","TINYINT","SMALLINT","INT","BIGINT","BYTEINT","BYTES","FLOAT","DOUBLE","DECIMAL","NUMERIC","TIMESTAMP","TIMESTAMPZ","TIME","DATE","DATETIME","INTERVAL","STRING","MEDIUMTEXT","TEXT","CHAR","LONG","VARCHAR","BOOLEAN","BINARY","VARBINARY","ARRAY","BLOB","LONGBLOB","MEDIUMBLOB","MAP","STRUCT","UNION","SET","GEOGRAPHY","ENUM","JSON","UUID","VARIANT","GEOMETRY","BYTEA","AGGREGATEFUNCTION","ERROR","FIXED","RECORD","NULL","SUPER","HLLSKETCH","PG_LSN","PG_SNAPSHOT","TSQUERY","TXID_SNAPSHOT","XML","MACADDR","TSVECTOR","UNKNOWN","CIDR","INET","CLOB","ROWID","LOWCARDINALITY","YEAR","POINT","POLYGON","TUPLE","SPATIAL","TABLE","NTEXT","IMAGE","IPV4","IPV6","DATETIMERANGE"]).optional(), "children": z.array(z.object({ "arrayDataType": z.enum(["NUMBER","TINYINT","SMALLINT","INT","BIGINT","BYTEINT","BYTES","FLOAT","DOUBLE","DECIMAL","NUMERIC","TIMESTAMP","TIMESTAMPZ","TIME","DATE","DATETIME","INTERVAL","STRING","MEDIUMTEXT","TEXT","CHAR","LONG","VARCHAR","BOOLEAN","BINARY","VARBINARY","ARRAY","BLOB","LONGBLOB","MEDIUMBLOB","MAP","STRUCT","UNION","SET","GEOGRAPHY","ENUM","JSON","UUID","VARIANT","GEOMETRY","BYTEA","AGGREGATEFUNCTION","ERROR","FIXED","RECORD","NULL","SUPER","HLLSKETCH","PG_LSN","PG_SNAPSHOT","TSQUERY","TXID_SNAPSHOT","XML","MACADDR","TSVECTOR","UNKNOWN","CIDR","INET","CLOB","ROWID","LOWCARDINALITY","YEAR","POINT","POLYGON","TUPLE","SPATIAL","TABLE","NTEXT","IMAGE","IPV4","IPV6","DATETIMERANGE"]).optional(), "children": z.array(z.object({ "arrayDataType": z.enum(["NUMBER","TINYINT","SMALLINT","INT","BIGINT","BYTEINT","BYTES","FLOAT","DOUBLE","DECIMAL","NUMERIC","TIMESTAMP","TIMESTAMPZ","TIME","DATE","DATETIME","INTERVAL","STRING","MEDIUMTEXT","TEXT","CHAR","LONG","VARCHAR","BOOLEAN","BINARY","VARBINARY","ARRAY","BLOB","LONGBLOB","MEDIUMBLOB","MAP","STRUCT","UNION","SET","GEOGRAPHY","ENUM","JSON","UUID","VARIANT","GEOMETRY","BYTEA","AGGREGATEFUNCTION","ERROR","FIXED","RECORD","NULL","SUPER","HLLSKETCH","PG_LSN","PG_SNAPSHOT","TSQUERY","TXID_SNAPSHOT","XML","MACADDR","TSVECTOR","UNKNOWN","CIDR","INET","CLOB","ROWID","LOWCARDINALITY","YEAR","POINT","POLYGON","TUPLE","SPATIAL","TABLE","NTEXT","IMAGE","IPV4","IPV6","DATETIMERANGE"]).optional(), "children": z.array(z.object({ "arrayDataType": z.enum(["NUMBER","TINYINT","SMALLINT","INT","BIGINT","BYTEINT","BYTES","FLOAT","DOUBLE","DECIMAL","NUMERIC","TIMESTAMP","TIMESTAMPZ","TIME","DATE","DATETIME","INTERVAL","STRING","MEDIUMTEXT","TEXT","CHAR","LONG","VARCHAR","BOOLEAN","BINARY","VARBINARY","ARRAY","BLOB","LONGBLOB","MEDIUMBLOB","MAP","STRUCT","UNION","SET","GEOGRAPHY","ENUM","JSON","UUID","VARIANT","GEOMETRY","BYTEA","AGGREGATEFUNCTION","ERROR","FIXED","RECORD","NULL","SUPER","HLLSKETCH","PG_LSN","PG_SNAPSHOT","TSQUERY","TXID_SNAPSHOT","XML","MACADDR","TSVECTOR","UNKNOWN","CIDR","INET","CLOB","ROWID","LOWCARDINALITY","YEAR","POINT","POLYGON","TUPLE","SPATIAL","TABLE","NTEXT","IMAGE","IPV4","IPV6","DATETIMERANGE"]).optional(), "children": z.array(z.object({ "arrayDataType": z.enum(["NUMBER","TINYINT","SMALLINT","INT","BIGINT","BYTEINT","BYTES","FLOAT","DOUBLE","DECIMAL","NUMERIC","TIMESTAMP","TIMESTAMPZ","TIME","DATE","DATETIME","INTERVAL","STRING","MEDIUMTEXT","TEXT","CHAR","LONG","VARCHAR","BOOLEAN","BINARY","VARBINARY","ARRAY","BLOB","LONGBLOB","MEDIUMBLOB","MAP","STRUCT","UNION","SET","GEOGRAPHY","ENUM","JSON","UUID","VARIANT","GEOMETRY","BYTEA","AGGREGATEFUNCTION","ERROR","FIXED","RECORD","NULL","SUPER","HLLSKETCH","PG_LSN","PG_SNAPSHOT","TSQUERY","TXID_SNAPSHOT","XML","MACADDR","TSVECTOR","UNKNOWN","CIDR","INET","CLOB","ROWID","LOWCARDINALITY","YEAR","POINT","POLYGON","TUPLE","SPATIAL","TABLE","NTEXT","IMAGE","IPV4","IPV6","DATETIMERANGE"]).optional(), "children": z.array(z.object({ "arrayDataType": z.string().optional(), "children": z.string().optional(), "constraint": z.string().optional(), "customMetrics": z.string().optional(), "dataLength": z.string().optional(), "dataType": z.string(), "dataTypeDisplay": z.string().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().optional(), "jsonSchema": z.string().optional(), "name": z.string(), "ordinalPosition": z.string().optional(), "precision": z.string().optional(), "profile": z.string().optional(), "scale": z.string().optional(), "tags": z.string().optional(), "userDescription": z.string().optional() })).optional(), "constraint": z.enum(["NULL","NOT_NULL","UNIQUE","PRIMARY_KEY"]).optional(), "customMetrics": z.array(z.object({ "columnName": z.string(), "description": z.string().optional(), "expression": z.string(), "id": z.string().optional(), "name": z.string(), "owner": z.string().optional(), "updatedAt": z.string().optional(), "updatedBy": z.string().optional() })).optional(), "dataLength": z.number().int().optional(), "dataType": z.enum(["NUMBER","TINYINT","SMALLINT","INT","BIGINT","BYTEINT","BYTES","FLOAT","DOUBLE","DECIMAL","NUMERIC","TIMESTAMP","TIMESTAMPZ","TIME","DATE","DATETIME","INTERVAL","STRING","MEDIUMTEXT","TEXT","CHAR","LONG","VARCHAR","BOOLEAN","BINARY","VARBINARY","ARRAY","BLOB","LONGBLOB","MEDIUMBLOB","MAP","STRUCT","UNION","SET","GEOGRAPHY","ENUM","JSON","UUID","VARIANT","GEOMETRY","BYTEA","AGGREGATEFUNCTION","ERROR","FIXED","RECORD","NULL","SUPER","HLLSKETCH","PG_LSN","PG_SNAPSHOT","TSQUERY","TXID_SNAPSHOT","XML","MACADDR","TSVECTOR","UNKNOWN","CIDR","INET","CLOB","ROWID","LOWCARDINALITY","YEAR","POINT","POLYGON","TUPLE","SPATIAL","TABLE","NTEXT","IMAGE","IPV4","IPV6","DATETIMERANGE"]), "dataTypeDisplay": z.string().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().min(1).max(3072).optional(), "jsonSchema": z.string().optional(), "name": z.string().regex(new RegExp("^((?!::).)*$")).min(1).max(256), "ordinalPosition": z.number().int().optional(), "precision": z.number().int().optional(), "profile": z.object({ "customMetricsProfile": z.array(z.string()).optional(), "distinctCount": z.number().optional(), "distinctProportion": z.number().optional(), "duplicateCount": z.number().optional(), "firstQuartile": z.number().optional(), "histogram": z.object({ "boundaries": z.string().optional(), "frequencies": z.string().optional() }).optional(), "interQuartileRange": z.number().optional(), "max": z.record(z.any()).optional(), "maxLength": z.number().optional(), "mean": z.number().optional(), "median": z.number().optional(), "medianLength": z.number().optional(), "min": z.record(z.any()).optional(), "minLength": z.number().optional(), "missingCount": z.number().optional(), "missingPercentage": z.number().optional(), "name": z.string(), "nonParametricSkew": z.number().optional(), "nullCount": z.number().optional(), "nullProportion": z.number().optional(), "stddev": z.number().optional(), "stringPatternAnalysis": z.object({ "patterns": z.string().optional() }).optional(), "sum": z.number().optional(), "textualDataHistogram": z.object({ "frequencies": z.string().optional(), "values": z.string().optional() }).optional(), "thirdQuartile": z.number().optional(), "timestamp": z.number().int(), "top": z.object({ "frequency": z.string(), "value": z.string() }).optional(), "uniqueCount": z.number().optional(), "uniqueProportion": z.number().optional(), "validCount": z.number().optional(), "valuesCount": z.number().optional(), "valuesPercentage": z.number().optional(), "variance": z.number().optional() }).optional(), "scale": z.number().int().optional(), "tags": z.array(z.object({ "description": z.string().optional(), "href": z.string().optional(), "labelType": z.string(), "source": z.string(), "state": z.string(), "tagFQN": z.string() })).optional(), "userDescription": z.string().optional() })).optional(), "constraint": z.enum(["NULL","NOT_NULL","UNIQUE","PRIMARY_KEY"]).optional(), "customMetrics": z.array(z.object({ "columnName": z.string(), "description": z.string().optional(), "expression": z.string(), "id": z.string().uuid().optional(), "name": z.string().regex(new RegExp("^(?U)[\\w ()\\[\\]_\\-`.,%+—!?'\"/\\\\]+$")).min(1).max(128), "owner": z.object({ "deleted": z.boolean().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().optional(), "href": z.string().url().optional(), "id": z.string().uuid(), "name": z.string().optional(), "payload": z.object({ "type": z.string().optional() }).optional(), "type": z.string(), "version": z.number().optional() }).optional(), "updatedAt": z.number().int().optional(), "updatedBy": z.string().optional() })).optional(), "dataLength": z.number().int().optional(), "dataType": z.enum(["NUMBER","TINYINT","SMALLINT","INT","BIGINT","BYTEINT","BYTES","FLOAT","DOUBLE","DECIMAL","NUMERIC","TIMESTAMP","TIMESTAMPZ","TIME","DATE","DATETIME","INTERVAL","STRING","MEDIUMTEXT","TEXT","CHAR","LONG","VARCHAR","BOOLEAN","BINARY","VARBINARY","ARRAY","BLOB","LONGBLOB","MEDIUMBLOB","MAP","STRUCT","UNION","SET","GEOGRAPHY","ENUM","JSON","UUID","VARIANT","GEOMETRY","BYTEA","AGGREGATEFUNCTION","ERROR","FIXED","RECORD","NULL","SUPER","HLLSKETCH","PG_LSN","PG_SNAPSHOT","TSQUERY","TXID_SNAPSHOT","XML","MACADDR","TSVECTOR","UNKNOWN","CIDR","INET","CLOB","ROWID","LOWCARDINALITY","YEAR","POINT","POLYGON","TUPLE","SPATIAL","TABLE","NTEXT","IMAGE","IPV4","IPV6","DATETIMERANGE"]), "dataTypeDisplay": z.string().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().min(1).max(3072).optional(), "jsonSchema": z.string().optional(), "name": z.string().regex(new RegExp("^((?!::).)*$")).min(1).max(256), "ordinalPosition": z.number().int().optional(), "precision": z.number().int().optional(), "profile": z.object({ "customMetricsProfile": z.array(z.object({ "name": z.string().optional(), "value": z.number().optional() })).optional(), "distinctCount": z.number().optional(), "distinctProportion": z.number().optional(), "duplicateCount": z.number().optional(), "firstQuartile": z.number().optional(), "histogram": z.object({ "boundaries": z.array(z.record(z.any())).optional(), "frequencies": z.array(z.record(z.any())).optional() }).optional(), "interQuartileRange": z.number().optional(), "max": z.record(z.any()).optional(), "maxLength": z.number().optional(), "mean": z.number().optional(), "median": z.number().optional(), "medianLength": z.number().optional(), "min": z.record(z.any()).optional(), "minLength": z.number().optional(), "missingCount": z.number().optional(), "missingPercentage": z.number().optional(), "name": z.string(), "nonParametricSkew": z.number().optional(), "nullCount": z.number().optional(), "nullProportion": z.number().optional(), "stddev": z.number().optional(), "stringPatternAnalysis": z.object({ "patterns": z.array(z.object({ "example": z.string(), "nodes": z.string(), "percentage": z.string(), "regex": z.string() })).optional() }).optional(), "sum": z.number().optional(), "textualDataHistogram": z.object({ "frequencies": z.array(z.record(z.any())).optional(), "values": z.array(z.record(z.any())).optional() }).optional(), "thirdQuartile": z.number().optional(), "timestamp": z.number().int(), "top": z.object({ "frequency": z.number().int(), "value": z.string() }).optional(), "uniqueCount": z.number().optional(), "uniqueProportion": z.number().optional(), "validCount": z.number().optional(), "valuesCount": z.number().optional(), "valuesPercentage": z.number().optional(), "variance": z.number().optional() }).optional(), "scale": z.number().int().optional(), "tags": z.array(z.object({ "description": z.string().optional(), "href": z.string().url().optional(), "labelType": z.enum(["Manual","Propagated","Automated","Derived"]), "source": z.enum(["Classification","Glossary"]), "state": z.enum(["Suggested","Confirmed"]), "tagFQN": z.string().min(0).max(3072) })).optional(), "userDescription": z.string().optional() })).optional(), "constraint": z.enum(["NULL","NOT_NULL","UNIQUE","PRIMARY_KEY"]).optional(), "customMetrics": z.array(z.object({ "columnName": z.string(), "description": z.string().optional(), "expression": z.string(), "id": z.string().uuid().optional(), "name": z.string().regex(new RegExp("^(?U)[\\w ()\\[\\]_\\-`.,%+—!?'\"/\\\\]+$")).min(1).max(128), "owner": z.object({ "deleted": z.boolean().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().optional(), "href": z.string().url().optional(), "id": z.string().uuid(), "name": z.string().optional(), "payload": z.object({ "type": z.enum(["additionAttributeConfig","relationshipConditionBasedDirectiveKey","glossaryTermInfo","testCaseResult"]).optional() }).optional(), "type": z.string(), "version": z.number().optional() }).optional(), "updatedAt": z.number().int().optional(), "updatedBy": z.string().optional() })).optional(), "dataLength": z.number().int().optional(), "dataType": z.enum(["NUMBER","TINYINT","SMALLINT","INT","BIGINT","BYTEINT","BYTES","FLOAT","DOUBLE","DECIMAL","NUMERIC","TIMESTAMP","TIMESTAMPZ","TIME","DATE","DATETIME","INTERVAL","STRING","MEDIUMTEXT","TEXT","CHAR","LONG","VARCHAR","BOOLEAN","BINARY","VARBINARY","ARRAY","BLOB","LONGBLOB","MEDIUMBLOB","MAP","STRUCT","UNION","SET","GEOGRAPHY","ENUM","JSON","UUID","VARIANT","GEOMETRY","BYTEA","AGGREGATEFUNCTION","ERROR","FIXED","RECORD","NULL","SUPER","HLLSKETCH","PG_LSN","PG_SNAPSHOT","TSQUERY","TXID_SNAPSHOT","XML","MACADDR","TSVECTOR","UNKNOWN","CIDR","INET","CLOB","ROWID","LOWCARDINALITY","YEAR","POINT","POLYGON","TUPLE","SPATIAL","TABLE","NTEXT","IMAGE","IPV4","IPV6","DATETIMERANGE"]), "dataTypeDisplay": z.string().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().min(1).max(3072).optional(), "jsonSchema": z.string().optional(), "name": z.string().regex(new RegExp("^((?!::).)*$")).min(1).max(256), "ordinalPosition": z.number().int().optional(), "precision": z.number().int().optional(), "profile": z.object({ "customMetricsProfile": z.array(z.object({ "name": z.string().optional(), "value": z.number().optional() })).optional(), "distinctCount": z.number().optional(), "distinctProportion": z.number().optional(), "duplicateCount": z.number().optional(), "firstQuartile": z.number().optional(), "histogram": z.object({ "boundaries": z.array(z.record(z.any())).optional(), "frequencies": z.array(z.record(z.any())).optional() }).optional(), "interQuartileRange": z.number().optional(), "max": z.record(z.any()).optional(), "maxLength": z.number().optional(), "mean": z.number().optional(), "median": z.number().optional(), "medianLength": z.number().optional(), "min": z.record(z.any()).optional(), "minLength": z.number().optional(), "missingCount": z.number().optional(), "missingPercentage": z.number().optional(), "name": z.string(), "nonParametricSkew": z.number().optional(), "nullCount": z.number().optional(), "nullProportion": z.number().optional(), "stddev": z.number().optional(), "stringPatternAnalysis": z.object({ "patterns": z.array(z.object({ "example": z.string(), "nodes": z.array(z.object({ "quantifier": z.string(), "symbolSet": z.string(), "symbols": z.string() })), "percentage": z.number(), "regex": z.string() })).optional() }).optional(), "sum": z.number().optional(), "textualDataHistogram": z.object({ "frequencies": z.array(z.record(z.any())).optional(), "values": z.array(z.record(z.any())).optional() }).optional(), "thirdQuartile": z.number().optional(), "timestamp": z.number().int(), "top": z.object({ "frequency": z.number().int(), "value": z.string() }).optional(), "uniqueCount": z.number().optional(), "uniqueProportion": z.number().optional(), "validCount": z.number().optional(), "valuesCount": z.number().optional(), "valuesPercentage": z.number().optional(), "variance": z.number().optional() }).optional(), "scale": z.number().int().optional(), "tags": z.array(z.object({ "description": z.string().optional(), "href": z.string().url().optional(), "labelType": z.enum(["Manual","Propagated","Automated","Derived"]), "source": z.enum(["Classification","Glossary"]), "state": z.enum(["Suggested","Confirmed"]), "tagFQN": z.string().min(0).max(3072) })).optional(), "userDescription": z.string().optional() })).optional(), "constraint": z.enum(["NULL","NOT_NULL","UNIQUE","PRIMARY_KEY"]).optional(), "customMetrics": z.array(z.object({ "columnName": z.string(), "description": z.string().optional(), "expression": z.string(), "id": z.string().uuid().optional(), "name": z.string().regex(new RegExp("^(?U)[\\w ()\\[\\]_\\-`.,%+—!?'\"/\\\\]+$")).min(1).max(128), "owner": z.object({ "deleted": z.boolean().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().optional(), "href": z.string().url().optional(), "id": z.string().uuid(), "name": z.string().optional(), "payload": z.object({ "type": z.enum(["additionAttributeConfig","relationshipConditionBasedDirectiveKey","glossaryTermInfo","testCaseResult"]).optional() }).optional(), "type": z.string(), "version": z.number().optional() }).optional(), "updatedAt": z.number().int().optional(), "updatedBy": z.string().optional() })).optional(), "dataLength": z.number().int().optional(), "dataType": z.enum(["NUMBER","TINYINT","SMALLINT","INT","BIGINT","BYTEINT","BYTES","FLOAT","DOUBLE","DECIMAL","NUMERIC","TIMESTAMP","TIMESTAMPZ","TIME","DATE","DATETIME","INTERVAL","STRING","MEDIUMTEXT","TEXT","CHAR","LONG","VARCHAR","BOOLEAN","BINARY","VARBINARY","ARRAY","BLOB","LONGBLOB","MEDIUMBLOB","MAP","STRUCT","UNION","SET","GEOGRAPHY","ENUM","JSON","UUID","VARIANT","GEOMETRY","BYTEA","AGGREGATEFUNCTION","ERROR","FIXED","RECORD","NULL","SUPER","HLLSKETCH","PG_LSN","PG_SNAPSHOT","TSQUERY","TXID_SNAPSHOT","XML","MACADDR","TSVECTOR","UNKNOWN","CIDR","INET","CLOB","ROWID","LOWCARDINALITY","YEAR","POINT","POLYGON","TUPLE","SPATIAL","TABLE","NTEXT","IMAGE","IPV4","IPV6","DATETIMERANGE"]), "dataTypeDisplay": z.string().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().min(1).max(3072).optional(), "jsonSchema": z.string().optional(), "name": z.string().regex(new RegExp("^((?!::).)*$")).min(1).max(256), "ordinalPosition": z.number().int().optional(), "precision": z.number().int().optional(), "profile": z.object({ "customMetricsProfile": z.array(z.object({ "name": z.string().optional(), "value": z.number().optional() })).optional(), "distinctCount": z.number().optional(), "distinctProportion": z.number().optional(), "duplicateCount": z.number().optional(), "firstQuartile": z.number().optional(), "histogram": z.object({ "boundaries": z.array(z.record(z.any())).optional(), "frequencies": z.array(z.record(z.any())).optional() }).optional(), "interQuartileRange": z.number().optional(), "max": z.record(z.any()).optional(), "maxLength": z.number().optional(), "mean": z.number().optional(), "median": z.number().optional(), "medianLength": z.number().optional(), "min": z.record(z.any()).optional(), "minLength": z.number().optional(), "missingCount": z.number().optional(), "missingPercentage": z.number().optional(), "name": z.string(), "nonParametricSkew": z.number().optional(), "nullCount": z.number().optional(), "nullProportion": z.number().optional(), "stddev": z.number().optional(), "stringPatternAnalysis": z.object({ "patterns": z.array(z.object({ "example": z.string(), "nodes": z.array(z.object({ "quantifier": z.number().int(), "symbolSet": z.enum(["WORD","ALPHA","RU","RU_LOWER","RU_UPPER","EN","EN_LOWER","EN_UPPER","DIGITS","SYMBOLS","LITERAL"]), "symbols": z.array(z.string()) })), "percentage": z.number(), "regex": z.string() })).optional() }).optional(), "sum": z.number().optional(), "textualDataHistogram": z.object({ "frequencies": z.array(z.record(z.any())).optional(), "values": z.array(z.record(z.any())).optional() }).optional(), "thirdQuartile": z.number().optional(), "timestamp": z.number().int(), "top": z.object({ "frequency": z.number().int(), "value": z.string() }).optional(), "uniqueCount": z.number().optional(), "uniqueProportion": z.number().optional(), "validCount": z.number().optional(), "valuesCount": z.number().optional(), "valuesPercentage": z.number().optional(), "variance": z.number().optional() }).optional(), "scale": z.number().int().optional(), "tags": z.array(z.object({ "description": z.string().optional(), "href": z.string().url().optional(), "labelType": z.enum(["Manual","Propagated","Automated","Derived"]), "source": z.enum(["Classification","Glossary"]), "state": z.enum(["Suggested","Confirmed"]), "tagFQN": z.string().min(0).max(3072) })).optional(), "userDescription": z.string().optional() })).optional(), "constraint": z.enum(["NULL","NOT_NULL","UNIQUE","PRIMARY_KEY"]).optional(), "customMetrics": z.array(z.object({ "columnName": z.string(), "description": z.string().optional(), "expression": z.string(), "id": z.string().uuid().optional(), "name": z.string().regex(new RegExp("^(?U)[\\w ()\\[\\]_\\-`.,%+—!?'\"/\\\\]+$")).min(1).max(128), "owner": z.object({ "deleted": z.boolean().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().optional(), "href": z.string().url().optional(), "id": z.string().uuid(), "name": z.string().optional(), "payload": z.object({ "type": z.enum(["additionAttributeConfig","relationshipConditionBasedDirectiveKey","glossaryTermInfo","testCaseResult"]).optional() }).optional(), "type": z.string(), "version": z.number().optional() }).optional(), "updatedAt": z.number().int().optional(), "updatedBy": z.string().optional() })).optional(), "dataLength": z.number().int().optional(), "dataType": z.enum(["NUMBER","TINYINT","SMALLINT","INT","BIGINT","BYTEINT","BYTES","FLOAT","DOUBLE","DECIMAL","NUMERIC","TIMESTAMP","TIMESTAMPZ","TIME","DATE","DATETIME","INTERVAL","STRING","MEDIUMTEXT","TEXT","CHAR","LONG","VARCHAR","BOOLEAN","BINARY","VARBINARY","ARRAY","BLOB","LONGBLOB","MEDIUMBLOB","MAP","STRUCT","UNION","SET","GEOGRAPHY","ENUM","JSON","UUID","VARIANT","GEOMETRY","BYTEA","AGGREGATEFUNCTION","ERROR","FIXED","RECORD","NULL","SUPER","HLLSKETCH","PG_LSN","PG_SNAPSHOT","TSQUERY","TXID_SNAPSHOT","XML","MACADDR","TSVECTOR","UNKNOWN","CIDR","INET","CLOB","ROWID","LOWCARDINALITY","YEAR","POINT","POLYGON","TUPLE","SPATIAL","TABLE","NTEXT","IMAGE","IPV4","IPV6","DATETIMERANGE"]), "dataTypeDisplay": z.string().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().min(1).max(3072).optional(), "jsonSchema": z.string().optional(), "name": z.string().regex(new RegExp("^((?!::).)*$")).min(1).max(256), "ordinalPosition": z.number().int().optional(), "precision": z.number().int().optional(), "profile": z.object({ "customMetricsProfile": z.array(z.object({ "name": z.string().optional(), "value": z.number().optional() })).optional(), "distinctCount": z.number().optional(), "distinctProportion": z.number().optional(), "duplicateCount": z.number().optional(), "firstQuartile": z.number().optional(), "histogram": z.object({ "boundaries": z.array(z.record(z.any())).optional(), "frequencies": z.array(z.record(z.any())).optional() }).optional(), "interQuartileRange": z.number().optional(), "max": z.record(z.any()).optional(), "maxLength": z.number().optional(), "mean": z.number().optional(), "median": z.number().optional(), "medianLength": z.number().optional(), "min": z.record(z.any()).optional(), "minLength": z.number().optional(), "missingCount": z.number().optional(), "missingPercentage": z.number().optional(), "name": z.string(), "nonParametricSkew": z.number().optional(), "nullCount": z.number().optional(), "nullProportion": z.number().optional(), "stddev": z.number().optional(), "stringPatternAnalysis": z.object({ "patterns": z.array(z.object({ "example": z.string(), "nodes": z.array(z.object({ "quantifier": z.number().int(), "symbolSet": z.enum(["WORD","ALPHA","RU","RU_LOWER","RU_UPPER","EN","EN_LOWER","EN_UPPER","DIGITS","SYMBOLS","LITERAL"]), "symbols": z.array(z.string()) })), "percentage": z.number(), "regex": z.string() })).optional() }).optional(), "sum": z.number().optional(), "textualDataHistogram": z.object({ "frequencies": z.array(z.record(z.any())).optional(), "values": z.array(z.record(z.any())).optional() }).optional(), "thirdQuartile": z.number().optional(), "timestamp": z.number().int(), "top": z.object({ "frequency": z.number().int(), "value": z.string() }).optional(), "uniqueCount": z.number().optional(), "uniqueProportion": z.number().optional(), "validCount": z.number().optional(), "valuesCount": z.number().optional(), "valuesPercentage": z.number().optional(), "variance": z.number().optional() }).optional(), "scale": z.number().int().optional(), "tags": z.array(z.object({ "description": z.string().optional(), "href": z.string().url().optional(), "labelType": z.enum(["Manual","Propagated","Automated","Derived"]), "source": z.enum(["Classification","Glossary"]), "state": z.enum(["Suggested","Confirmed"]), "tagFQN": z.string().min(0).max(3072) })).optional(), "userDescription": z.string().optional() })).optional(), "constraint": z.enum(["NULL","NOT_NULL","UNIQUE","PRIMARY_KEY"]).optional(), "customMetrics": z.array(z.object({ "columnName": z.string(), "description": z.string().optional(), "expression": z.string(), "id": z.string().uuid().optional(), "name": z.string().regex(new RegExp("^(?U)[\\w ()\\[\\]_\\-`.,%+—!?'\"/\\\\]+$")).min(1).max(128), "owner": z.object({ "deleted": z.boolean().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().optional(), "href": z.string().url().optional(), "id": z.string().uuid(), "name": z.string().optional(), "payload": z.object({ "type": z.enum(["additionAttributeConfig","relationshipConditionBasedDirectiveKey","glossaryTermInfo","testCaseResult"]).optional() }).optional(), "type": z.string(), "version": z.number().optional() }).optional(), "updatedAt": z.number().int().optional(), "updatedBy": z.string().optional() })).optional(), "dataLength": z.number().int().optional(), "dataType": z.enum(["NUMBER","TINYINT","SMALLINT","INT","BIGINT","BYTEINT","BYTES","FLOAT","DOUBLE","DECIMAL","NUMERIC","TIMESTAMP","TIMESTAMPZ","TIME","DATE","DATETIME","INTERVAL","STRING","MEDIUMTEXT","TEXT","CHAR","LONG","VARCHAR","BOOLEAN","BINARY","VARBINARY","ARRAY","BLOB","LONGBLOB","MEDIUMBLOB","MAP","STRUCT","UNION","SET","GEOGRAPHY","ENUM","JSON","UUID","VARIANT","GEOMETRY","BYTEA","AGGREGATEFUNCTION","ERROR","FIXED","RECORD","NULL","SUPER","HLLSKETCH","PG_LSN","PG_SNAPSHOT","TSQUERY","TXID_SNAPSHOT","XML","MACADDR","TSVECTOR","UNKNOWN","CIDR","INET","CLOB","ROWID","LOWCARDINALITY","YEAR","POINT","POLYGON","TUPLE","SPATIAL","TABLE","NTEXT","IMAGE","IPV4","IPV6","DATETIMERANGE"]), "dataTypeDisplay": z.string().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().min(1).max(3072).optional(), "jsonSchema": z.string().optional(), "name": z.string().regex(new RegExp("^((?!::).)*$")).min(1).max(256), "ordinalPosition": z.number().int().optional(), "precision": z.number().int().optional(), "profile": z.object({ "customMetricsProfile": z.array(z.object({ "name": z.string().optional(), "value": z.number().optional() })).optional(), "distinctCount": z.number().optional(), "distinctProportion": z.number().optional(), "duplicateCount": z.number().optional(), "firstQuartile": z.number().optional(), "histogram": z.object({ "boundaries": z.array(z.record(z.any())).optional(), "frequencies": z.array(z.record(z.any())).optional() }).optional(), "interQuartileRange": z.number().optional(), "max": z.record(z.any()).optional(), "maxLength": z.number().optional(), "mean": z.number().optional(), "median": z.number().optional(), "medianLength": z.number().optional(), "min": z.record(z.any()).optional(), "minLength": z.number().optional(), "missingCount": z.number().optional(), "missingPercentage": z.number().optional(), "name": z.string(), "nonParametricSkew": z.number().optional(), "nullCount": z.number().optional(), "nullProportion": z.number().optional(), "stddev": z.number().optional(), "stringPatternAnalysis": z.object({ "patterns": z.array(z.object({ "example": z.string(), "nodes": z.array(z.object({ "quantifier": z.number().int(), "symbolSet": z.enum(["WORD","ALPHA","RU","RU_LOWER","RU_UPPER","EN","EN_LOWER","EN_UPPER","DIGITS","SYMBOLS","LITERAL"]), "symbols": z.array(z.string()) })), "percentage": z.number(), "regex": z.string() })).optional() }).optional(), "sum": z.number().optional(), "textualDataHistogram": z.object({ "frequencies": z.array(z.record(z.any())).optional(), "values": z.array(z.record(z.any())).optional() }).optional(), "thirdQuartile": z.number().optional(), "timestamp": z.number().int(), "top": z.object({ "frequency": z.number().int(), "value": z.string() }).optional(), "uniqueCount": z.number().optional(), "uniqueProportion": z.number().optional(), "validCount": z.number().optional(), "valuesCount": z.number().optional(), "valuesPercentage": z.number().optional(), "variance": z.number().optional() }).optional(), "scale": z.number().int().optional(), "tags": z.array(z.object({ "description": z.string().optional(), "href": z.string().url().optional(), "labelType": z.enum(["Manual","Propagated","Automated","Derived"]), "source": z.enum(["Classification","Glossary"]), "state": z.enum(["Suggested","Confirmed"]), "tagFQN": z.string().min(0).max(3072) })).optional(), "userDescription": z.string().optional() })).optional(), "constraint": z.enum(["NULL","NOT_NULL","UNIQUE","PRIMARY_KEY"]).optional(), "customMetrics": z.array(z.object({ "columnName": z.string(), "description": z.string().optional(), "expression": z.string(), "id": z.string().uuid().optional(), "name": z.string().regex(new RegExp("^(?U)[\\w ()\\[\\]_\\-`.,%+—!?'\"/\\\\]+$")).min(1).max(128), "owner": z.object({ "deleted": z.boolean().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().optional(), "href": z.string().url().optional(), "id": z.string().uuid(), "name": z.string().optional(), "payload": z.object({ "type": z.enum(["additionAttributeConfig","relationshipConditionBasedDirectiveKey","glossaryTermInfo","testCaseResult"]).optional() }).optional(), "type": z.string(), "version": z.number().optional() }).optional(), "updatedAt": z.number().int().optional(), "updatedBy": z.string().optional() })).optional(), "dataLength": z.number().int().optional(), "dataType": z.enum(["NUMBER","TINYINT","SMALLINT","INT","BIGINT","BYTEINT","BYTES","FLOAT","DOUBLE","DECIMAL","NUMERIC","TIMESTAMP","TIMESTAMPZ","TIME","DATE","DATETIME","INTERVAL","STRING","MEDIUMTEXT","TEXT","CHAR","LONG","VARCHAR","BOOLEAN","BINARY","VARBINARY","ARRAY","BLOB","LONGBLOB","MEDIUMBLOB","MAP","STRUCT","UNION","SET","GEOGRAPHY","ENUM","JSON","UUID","VARIANT","GEOMETRY","BYTEA","AGGREGATEFUNCTION","ERROR","FIXED","RECORD","NULL","SUPER","HLLSKETCH","PG_LSN","PG_SNAPSHOT","TSQUERY","TXID_SNAPSHOT","XML","MACADDR","TSVECTOR","UNKNOWN","CIDR","INET","CLOB","ROWID","LOWCARDINALITY","YEAR","POINT","POLYGON","TUPLE","SPATIAL","TABLE","NTEXT","IMAGE","IPV4","IPV6","DATETIMERANGE"]), "dataTypeDisplay": z.string().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().min(1).max(3072).optional(), "jsonSchema": z.string().optional(), "name": z.string().regex(new RegExp("^((?!::).)*$")).min(1).max(256), "ordinalPosition": z.number().int().optional(), "precision": z.number().int().optional(), "profile": z.object({ "customMetricsProfile": z.array(z.object({ "name": z.string().optional(), "value": z.number().optional() })).optional(), "distinctCount": z.number().optional(), "distinctProportion": z.number().optional(), "duplicateCount": z.number().optional(), "firstQuartile": z.number().optional(), "histogram": z.object({ "boundaries": z.array(z.record(z.any())).optional(), "frequencies": z.array(z.record(z.any())).optional() }).optional(), "interQuartileRange": z.number().optional(), "max": z.record(z.any()).optional(), "maxLength": z.number().optional(), "mean": z.number().optional(), "median": z.number().optional(), "medianLength": z.number().optional(), "min": z.record(z.any()).optional(), "minLength": z.number().optional(), "missingCount": z.number().optional(), "missingPercentage": z.number().optional(), "name": z.string(), "nonParametricSkew": z.number().optional(), "nullCount": z.number().optional(), "nullProportion": z.number().optional(), "stddev": z.number().optional(), "stringPatternAnalysis": z.object({ "patterns": z.array(z.object({ "example": z.string(), "nodes": z.array(z.object({ "quantifier": z.number().int(), "symbolSet": z.enum(["WORD","ALPHA","RU","RU_LOWER","RU_UPPER","EN","EN_LOWER","EN_UPPER","DIGITS","SYMBOLS","LITERAL"]), "symbols": z.array(z.string()) })), "percentage": z.number(), "regex": z.string() })).optional() }).optional(), "sum": z.number().optional(), "textualDataHistogram": z.object({ "frequencies": z.array(z.record(z.any())).optional(), "values": z.array(z.record(z.any())).optional() }).optional(), "thirdQuartile": z.number().optional(), "timestamp": z.number().int(), "top": z.object({ "frequency": z.number().int(), "value": z.string() }).optional(), "uniqueCount": z.number().optional(), "uniqueProportion": z.number().optional(), "validCount": z.number().optional(), "valuesCount": z.number().optional(), "valuesPercentage": z.number().optional(), "variance": z.number().optional() }).optional(), "scale": z.number().int().optional(), "tags": z.array(z.object({ "description": z.string().optional(), "href": z.string().url().optional(), "labelType": z.enum(["Manual","Propagated","Automated","Derived"]), "source": z.enum(["Classification","Glossary"]), "state": z.enum(["Suggested","Confirmed"]), "tagFQN": z.string().min(0).max(3072) })).optional(), "userDescription": z.string().optional() })).optional(), "constraint": z.enum(["NULL","NOT_NULL","UNIQUE","PRIMARY_KEY"]).optional(), "customMetrics": z.array(z.object({ "columnName": z.string(), "description": z.string().optional(), "expression": z.string(), "id": z.string().uuid().optional(), "name": z.string().regex(new RegExp("^(?U)[\\w ()\\[\\]_\\-`.,%+—!?'\"/\\\\]+$")).min(1).max(128), "owner": z.object({ "deleted": z.boolean().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().optional(), "href": z.string().url().optional(), "id": z.string().uuid(), "name": z.string().optional(), "payload": z.object({ "type": z.enum(["additionAttributeConfig","relationshipConditionBasedDirectiveKey","glossaryTermInfo","testCaseResult"]).optional() }).optional(), "type": z.string(), "version": z.number().optional() }).optional(), "updatedAt": z.number().int().optional(), "updatedBy": z.string().optional() })).optional(), "dataLength": z.number().int().optional(), "dataType": z.enum(["NUMBER","TINYINT","SMALLINT","INT","BIGINT","BYTEINT","BYTES","FLOAT","DOUBLE","DECIMAL","NUMERIC","TIMESTAMP","TIMESTAMPZ","TIME","DATE","DATETIME","INTERVAL","STRING","MEDIUMTEXT","TEXT","CHAR","LONG","VARCHAR","BOOLEAN","BINARY","VARBINARY","ARRAY","BLOB","LONGBLOB","MEDIUMBLOB","MAP","STRUCT","UNION","SET","GEOGRAPHY","ENUM","JSON","UUID","VARIANT","GEOMETRY","BYTEA","AGGREGATEFUNCTION","ERROR","FIXED","RECORD","NULL","SUPER","HLLSKETCH","PG_LSN","PG_SNAPSHOT","TSQUERY","TXID_SNAPSHOT","XML","MACADDR","TSVECTOR","UNKNOWN","CIDR","INET","CLOB","ROWID","LOWCARDINALITY","YEAR","POINT","POLYGON","TUPLE","SPATIAL","TABLE","NTEXT","IMAGE","IPV4","IPV6","DATETIMERANGE"]), "dataTypeDisplay": z.string().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().min(1).max(3072).optional(), "jsonSchema": z.string().optional(), "name": z.string().regex(new RegExp("^((?!::).)*$")).min(1).max(256), "ordinalPosition": z.number().int().optional(), "precision": z.number().int().optional(), "profile": z.object({ "customMetricsProfile": z.array(z.object({ "name": z.string().optional(), "value": z.number().optional() })).optional(), "distinctCount": z.number().optional(), "distinctProportion": z.number().optional(), "duplicateCount": z.number().optional(), "firstQuartile": z.number().optional(), "histogram": z.object({ "boundaries": z.array(z.record(z.any())).optional(), "frequencies": z.array(z.record(z.any())).optional() }).optional(), "interQuartileRange": z.number().optional(), "max": z.record(z.any()).optional(), "maxLength": z.number().optional(), "mean": z.number().optional(), "median": z.number().optional(), "medianLength": z.number().optional(), "min": z.record(z.any()).optional(), "minLength": z.number().optional(), "missingCount": z.number().optional(), "missingPercentage": z.number().optional(), "name": z.string(), "nonParametricSkew": z.number().optional(), "nullCount": z.number().optional(), "nullProportion": z.number().optional(), "stddev": z.number().optional(), "stringPatternAnalysis": z.object({ "patterns": z.array(z.object({ "example": z.string(), "nodes": z.array(z.object({ "quantifier": z.number().int(), "symbolSet": z.enum(["WORD","ALPHA","RU","RU_LOWER","RU_UPPER","EN","EN_LOWER","EN_UPPER","DIGITS","SYMBOLS","LITERAL"]), "symbols": z.array(z.string()) })), "percentage": z.number(), "regex": z.string() })).optional() }).optional(), "sum": z.number().optional(), "textualDataHistogram": z.object({ "frequencies": z.array(z.record(z.any())).optional(), "values": z.array(z.record(z.any())).optional() }).optional(), "thirdQuartile": z.number().optional(), "timestamp": z.number().int(), "top": z.object({ "frequency": z.number().int(), "value": z.string() }).optional(), "uniqueCount": z.number().optional(), "uniqueProportion": z.number().optional(), "validCount": z.number().optional(), "valuesCount": z.number().optional(), "valuesPercentage": z.number().optional(), "variance": z.number().optional() }).optional(), "scale": z.number().int().optional(), "tags": z.array(z.object({ "description": z.string().optional(), "href": z.string().url().optional(), "labelType": z.enum(["Manual","Propagated","Automated","Derived"]), "source": z.enum(["Classification","Glossary"]), "state": z.enum(["Suggested","Confirmed"]), "tagFQN": z.string().min(0).max(3072) })).optional(), "userDescription": z.string().optional() })), "dataProducts": z.array(z.string()).optional(), "databaseSchema": z.string().min(1).max(3072), "description": z.string().optional(), "displayName": z.string().optional(), "domain": z.string().optional(), "extension": z.record(z.any()).optional(), "name": z.string().regex(new RegExp("^((?!::).)*$")).min(1).max(256), "owner": z.object({ "deleted": z.boolean().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().optional(), "href": z.string().url().optional(), "id": z.string().uuid(), "name": z.string().optional(), "payload": z.object({ "type": z.enum(["additionAttributeConfig","relationshipConditionBasedDirectiveKey","glossaryTermInfo","testCaseResult"]).optional() }).optional(), "type": z.string(), "version": z.number().optional() }).optional(), "retentionPeriod": z.string().optional(), "sourceUrl": z.string().optional(), "tableConstraints": z.array(z.object({ "columns": z.array(z.string()).optional(), "constraintType": z.enum(["UNIQUE","PRIMARY_KEY","FOREIGN_KEY","SORT_KEY","DIST_KEY"]).optional(), "referredColumns": z.array(z.string()).optional() })).optional(), "tablePartition": z.object({ "columns": z.array(z.string()).optional(), "interval": z.string().optional(), "intervalType": z.enum(["TIME-UNIT","INTEGER-RANGE","INGESTION-TIME","COLUMN-VALUE","OTHER"]).optional() }).optional(), "tableProfilerConfig": z.object({ "excludeColumns": z.array(z.string()).optional(), "includeColumns": z.array(z.object({ "columnName": z.string().optional(), "metrics": z.array(z.string()).optional() })).optional(), "partitioning": z.object({ "enablePartitioning": z.boolean().optional(), "partitionColumnName": z.string().optional(), "partitionIntegerRangeEnd": z.number().int().optional(), "partitionIntegerRangeStart": z.number().int().optional(), "partitionInterval": z.number().int().optional(), "partitionIntervalType": z.enum(["TIME-UNIT","INTEGER-RANGE","INGESTION-TIME","COLUMN-VALUE"]).optional(), "partitionIntervalUnit": z.enum(["YEAR","MONTH","DAY","HOUR"]).optional(), "partitionValues": z.array(z.record(z.any())).optional() }).optional(), "profileQuery": z.string().optional(), "profileSample": z.number().optional(), "profileSampleType": z.enum(["PERCENTAGE","ROWS"]).optional() }).optional(), "tableType": z.enum(["Regular","External","View","SecureView","MaterializedView","Iceberg","Local","Partitioned","Foreign","Transient","IOBJ","ADSO","RSDS","Catalog","AccountingRegister","AccumulationRegister","CalculationRegister","ChartOfAccounts","ChartOfCalculationTypes","ChartOfCharacteristicTypes","DocumentJournal","Document","InformationRegister","ExternalDataSourceTable","ExternalDataSourceCube","ExternalDataSourceCubeDimensionTable"]).optional(), "tags": z.array(z.object({ "description": z.string().optional(), "href": z.string().url().optional(), "labelType": z.enum(["Manual","Propagated","Automated","Derived"]), "source": z.enum(["Classification","Glossary"]), "state": z.enum(["Suggested","Confirmed"]), "tagFQN": z.string().min(0).max(3072) })).optional(), "viewDefinition": z.string().optional() }).shape