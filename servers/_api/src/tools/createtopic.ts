import { z } from "zod"

export const toolName = `createtopic`
export const toolDescription = `Create a topic`
export const baseUrl = `/api`
export const path = `/v1/topics`
export const method = `post`
export const security = []
export const keys = {
  "query": [],
  "header": [],
  "path": [],
  "cookie": [],
  "body": [
    "addition",
    "cleanupPolicies",
    "dataProducts",
    "description",
    "displayName",
    "domain",
    "extension",
    "maximumMessageSize",
    "messageSchema",
    "minimumInSyncReplicas",
    "name",
    "owner",
    "partitions",
    "replicationFactor",
    "retentionSize",
    "retentionTime",
    "service",
    "tags",
    "topicConfig"
  ]
}
export const flatMap = {}

export const inputParams = z.object({ "addition": z.record(z.any()).optional(), "cleanupPolicies": z.array(z.enum(["delete","compact"])).optional(), "dataProducts": z.array(z.string()).optional(), "description": z.string().optional(), "displayName": z.string().optional(), "domain": z.string().min(1).max(3072).optional(), "extension": z.record(z.any()).optional(), "maximumMessageSize": z.number().int().optional(), "messageSchema": z.object({ "schemaFields": z.array(z.object({ "children": z.array(z.object({ "children": z.array(z.object({ "children": z.array(z.object({ "children": z.array(z.object({ "children": z.array(z.object({ "children": z.array(z.object({ "children": z.array(z.object({ "children": z.array(z.string()).optional(), "dataType": z.enum(["RECORD","NULL","BOOLEAN","INT","LONG","BYTES","FLOAT","DOUBLE","TIMESTAMP","TIMESTAMPZ","TIME","DATE","STRING","ARRAY","MAP","ENUM","UNION","FIXED","ERROR","UNKNOWN"]), "dataTypeDisplay": z.string().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().min(1).max(3072).optional(), "name": z.string().min(1).max(128), "tags": z.array(z.string()).optional(), "userDescription": z.string().optional() })).optional(), "dataType": z.enum(["RECORD","NULL","BOOLEAN","INT","LONG","BYTES","FLOAT","DOUBLE","TIMESTAMP","TIMESTAMPZ","TIME","DATE","STRING","ARRAY","MAP","ENUM","UNION","FIXED","ERROR","UNKNOWN"]), "dataTypeDisplay": z.string().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().min(1).max(3072).optional(), "name": z.string().min(1).max(128), "tags": z.array(z.object({ "description": z.string().optional(), "href": z.string().url().optional(), "labelType": z.enum(["Manual","Propagated","Automated","Derived"]), "source": z.enum(["Classification","Glossary"]), "state": z.enum(["Suggested","Confirmed"]), "tagFQN": z.string().min(0).max(3072) })).optional(), "userDescription": z.string().optional() })).optional(), "dataType": z.enum(["RECORD","NULL","BOOLEAN","INT","LONG","BYTES","FLOAT","DOUBLE","TIMESTAMP","TIMESTAMPZ","TIME","DATE","STRING","ARRAY","MAP","ENUM","UNION","FIXED","ERROR","UNKNOWN"]), "dataTypeDisplay": z.string().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().min(1).max(3072).optional(), "name": z.string().min(1).max(128), "tags": z.array(z.object({ "description": z.string().optional(), "href": z.string().url().optional(), "labelType": z.enum(["Manual","Propagated","Automated","Derived"]), "source": z.enum(["Classification","Glossary"]), "state": z.enum(["Suggested","Confirmed"]), "tagFQN": z.string().min(0).max(3072) })).optional(), "userDescription": z.string().optional() })).optional(), "dataType": z.enum(["RECORD","NULL","BOOLEAN","INT","LONG","BYTES","FLOAT","DOUBLE","TIMESTAMP","TIMESTAMPZ","TIME","DATE","STRING","ARRAY","MAP","ENUM","UNION","FIXED","ERROR","UNKNOWN"]), "dataTypeDisplay": z.string().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().min(1).max(3072).optional(), "name": z.string().min(1).max(128), "tags": z.array(z.object({ "description": z.string().optional(), "href": z.string().url().optional(), "labelType": z.enum(["Manual","Propagated","Automated","Derived"]), "source": z.enum(["Classification","Glossary"]), "state": z.enum(["Suggested","Confirmed"]), "tagFQN": z.string().min(0).max(3072) })).optional(), "userDescription": z.string().optional() })).optional(), "dataType": z.enum(["RECORD","NULL","BOOLEAN","INT","LONG","BYTES","FLOAT","DOUBLE","TIMESTAMP","TIMESTAMPZ","TIME","DATE","STRING","ARRAY","MAP","ENUM","UNION","FIXED","ERROR","UNKNOWN"]), "dataTypeDisplay": z.string().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().min(1).max(3072).optional(), "name": z.string().min(1).max(128), "tags": z.array(z.object({ "description": z.string().optional(), "href": z.string().url().optional(), "labelType": z.enum(["Manual","Propagated","Automated","Derived"]), "source": z.enum(["Classification","Glossary"]), "state": z.enum(["Suggested","Confirmed"]), "tagFQN": z.string().min(0).max(3072) })).optional(), "userDescription": z.string().optional() })).optional(), "dataType": z.enum(["RECORD","NULL","BOOLEAN","INT","LONG","BYTES","FLOAT","DOUBLE","TIMESTAMP","TIMESTAMPZ","TIME","DATE","STRING","ARRAY","MAP","ENUM","UNION","FIXED","ERROR","UNKNOWN"]), "dataTypeDisplay": z.string().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().min(1).max(3072).optional(), "name": z.string().min(1).max(128), "tags": z.array(z.object({ "description": z.string().optional(), "href": z.string().url().optional(), "labelType": z.enum(["Manual","Propagated","Automated","Derived"]), "source": z.enum(["Classification","Glossary"]), "state": z.enum(["Suggested","Confirmed"]), "tagFQN": z.string().min(0).max(3072) })).optional(), "userDescription": z.string().optional() })).optional(), "dataType": z.enum(["RECORD","NULL","BOOLEAN","INT","LONG","BYTES","FLOAT","DOUBLE","TIMESTAMP","TIMESTAMPZ","TIME","DATE","STRING","ARRAY","MAP","ENUM","UNION","FIXED","ERROR","UNKNOWN"]), "dataTypeDisplay": z.string().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().min(1).max(3072).optional(), "name": z.string().min(1).max(128), "tags": z.array(z.object({ "description": z.string().optional(), "href": z.string().url().optional(), "labelType": z.enum(["Manual","Propagated","Automated","Derived"]), "source": z.enum(["Classification","Glossary"]), "state": z.enum(["Suggested","Confirmed"]), "tagFQN": z.string().min(0).max(3072) })).optional(), "userDescription": z.string().optional() })).optional(), "dataType": z.enum(["RECORD","NULL","BOOLEAN","INT","LONG","BYTES","FLOAT","DOUBLE","TIMESTAMP","TIMESTAMPZ","TIME","DATE","STRING","ARRAY","MAP","ENUM","UNION","FIXED","ERROR","UNKNOWN"]), "dataTypeDisplay": z.string().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().min(1).max(3072).optional(), "name": z.string().min(1).max(128), "tags": z.array(z.object({ "description": z.string().optional(), "href": z.string().url().optional(), "labelType": z.enum(["Manual","Propagated","Automated","Derived"]), "source": z.enum(["Classification","Glossary"]), "state": z.enum(["Suggested","Confirmed"]), "tagFQN": z.string().min(0).max(3072) })).optional(), "userDescription": z.string().optional() })).optional(), "schemaText": z.string().optional(), "schemaType": z.enum(["Avro","Protobuf","JSON","Other","None"]).optional() }).optional(), "minimumInSyncReplicas": z.number().int().optional(), "name": z.string().regex(new RegExp("^(?U)[\\w ()\\[\\]_\\-`.,%+â€”!?'\"/\\\\]+$")).min(1).max(128), "owner": z.object({ "deleted": z.boolean().optional(), "description": z.string().optional(), "displayName": z.string().optional(), "fullyQualifiedName": z.string().optional(), "href": z.string().url().optional(), "id": z.string().uuid(), "name": z.string().optional(), "payload": z.object({ "type": z.enum(["additionAttributeConfig","relationshipConditionBasedDirectiveKey","glossaryTermInfo","testCaseResult"]).optional() }).optional(), "type": z.string(), "version": z.number().optional() }).optional(), "partitions": z.number().int(), "replicationFactor": z.number().int().optional(), "retentionSize": z.number().optional(), "retentionTime": z.number().optional(), "service": z.string().min(1).max(3072), "tags": z.array(z.object({ "description": z.string().optional(), "href": z.string().url().optional(), "labelType": z.enum(["Manual","Propagated","Automated","Derived"]), "source": z.enum(["Classification","Glossary"]), "state": z.enum(["Suggested","Confirmed"]), "tagFQN": z.string().min(0).max(3072) })).optional(), "topicConfig": z.record(z.any()).optional() }).shape