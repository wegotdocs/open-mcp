import { z } from "zod"

export const inputParamsSchema = {
  "apiKey": z.string().describe("Your API key"),
  "uri": z.string().describe("URI of the topic page for which you wish to retrieve matching events. Obtain the URI from the URL on the [monitoring page](https://eventregistry.org/monitoring) when the topic page is opened."),
  "resultType": z.enum(["events","uriWgtList","timeAggr","locAggr","locTimeAggr","sourceAggr","authorAggr","keywordAggr","conceptAggr","conceptGraph","categoryAggr","breakingEvents","eventClusters","sentimentAggr","dateMentionAggr"]).describe("Define what kind of results you would like to get.").optional(),
  "eventsPage": z.number().int().describe("Determines the page of the results to return (starting from 1). Relevant when `resultType = events`.").optional(),
  "eventsCount": z.number().int().describe("Define how many events (up to 50) will be returned. Relevant when `resultType = events`.").optional(),
  "eventsSortBy": z.enum(["date","rel","size","socialScore"]).describe("Set how you would like to sort your results. `date` (by event date), `rel` (relevance to the query), `size` (number of articles),\n    `socialScore` (amount of shares in social media). Relevant when `resultType = events`.").optional(),
  "eventsSortByAsc": z.boolean().describe("Should the results be ordered in ascending order or descending order (default) based on the sorting criteria. Relevant when `resultType = events`.").optional(),
  "includeEventTitle": z.boolean().describe("Set this parameter to true to include the event title in the response.").optional(),
  "includeEventSummary": z.boolean().describe("Set this parameter to true to include the event summary in the response.").optional(),
  "includeEventSocialScore": z.boolean().describe("Set this parameter to true to include the event social score in the response.").optional(),
  "includeEventSentiment": z.boolean().describe("Set this parameter to true to include the event sentiment in the response.").optional(),
  "includeEventLocation": z.boolean().describe("Set this parameter to true to include the event location in the response.").optional(),
  "includeEventDate": z.boolean().describe("Set this parameter to true to include the event date in the response.").optional(),
  "includeEventArticleCounts": z.boolean().describe("Set this parameter to true to include the article counts for events in the response.").optional(),
  "includeEventConcepts": z.boolean().describe("Set this parameter to true to include the event concepts in the response.").optional(),
  "includeEventCategories": z.boolean().describe("Set this parameter to true to include the event categories in the response.").optional(),
  "includeEventCommonDates": z.boolean().describe("Set this parameter to true to include the event commmon dates in the response.").optional(),
  "includeEventStories": z.boolean().describe("Set this parameter to true to include the event stories in the response.").optional(),
  "eventImageCount": z.number().int().describe("Define how many images you would like to have in the response.").optional(),
  "includeConceptLabel": z.boolean().describe("Set this parameter to true to include the concept label in the response.").optional(),
  "includeConceptImage": z.boolean().describe("Set this parameter to true to include the concept image in the response.").optional(),
  "includeConceptSynonyms": z.boolean().describe("Set this parameter to true to include the concept synonyms in the response.").optional(),
  "conceptLang": z.string().describe("Define the language of the concept label.").optional(),
  "includeStoryBasicStats": z.boolean().describe("Set this parameter to true to include story basic stats in the response.").optional(),
  "includeStoryTitle": z.boolean().describe("Set this parameter to true to include the story title in the response.").optional(),
  "includeStoryLocation": z.boolean().describe("Set this parameter to true to include the story location in the response.").optional(),
  "includeStoryDate": z.boolean().describe("Set this parameter to true to include the story date in the response.").optional(),
  "includeStoryConcepts": z.boolean().describe("Set this parameter to true to include the story concepts in the response.").optional(),
  "includeStoryCategories": z.boolean().describe("Set this parameter to true to include the story categories in the response.").optional(),
  "includeStoryMedoidArticle": z.boolean().describe("Set this parameter to true to include story medoid article in the response.").optional(),
  "includeStoryCommonDates": z.boolean().describe("Set this parameter to true to include story common dates in the response.").optional(),
  "storyImageCount": z.number().int().describe("Define how many images you would like to have in the response.").optional(),
  "includeCategoryParentUri": z.boolean().describe("Set this parameter to true to include category parent uri in the response.").optional(),
  "includeLocationPopulation": z.boolean().describe("Set to true to include the population size of the location").optional(),
  "includeLocationGeoNamesId": z.boolean().describe("Set to true to include the GeoNames id of the location").optional(),
  "includeLocationCountryArea": z.boolean().describe("Set to true to include the are of the location in squared km.").optional(),
  "includeLocationCountryContinent": z.boolean().describe("Set to true to get the continent of the country for location objects.").optional()
}