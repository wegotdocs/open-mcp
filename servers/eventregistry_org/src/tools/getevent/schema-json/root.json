{
  "type": "object",
  "properties": {
    "apiKey": {
      "description": "Your API key",
      "type": "string"
    },
    "eventUri": {
      "description": "Specify the URI of the event you would like to see returned.",
      "type": "string"
    },
    "resultType": {
      "description": "Define what kind of results you would like to get. Each result type corresponds to the prefix that'll be used for other parameters.",
      "default": "info",
      "type": "string",
      "enum": [
        "info",
        "articles",
        "articleUris",
        "keywordAggr",
        "sourceExAggr",
        "dateMentionAggr",
        "articleTrend",
        "similarEvents"
      ]
    },
    "articlesLang": {
      "description": "if resultType is `articles` then use this parameter if you wish to obtain only articles about the event in specific language(s).",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "articlesIncludeDuplicates": {
      "description": "if resultType is `articles` then set this value to `true` in order to return also articles that are copies of other articles (possibly from other news sources).\n",
      "type": "boolean",
      "default": "false"
    },
    "keyword": {
      "description": "Find articles that mention the specified keyword or a phrase. You can specify at most 60 keywords in a single search. If you specify multiple `keyword` parameters, then only articles that mention all of them will be returned, unless you specify `keywordOper` parameter and set it to 'or'.\n",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "conceptUri": {
      "description": "Find articles that mention the concept with a concept uri. You can specify at most 50 concepts in a single search. If multiple `conceptUri` parameters are provided, then only articles that are about all specified concepts will be returned, unless you specify `conceptOper` parameter and set it to 'or'. Check [autosuggest methods](https://eventregistry.org/documentation?tab=suggConcepts) to get concept URI value for a specified concept label.\n",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "categoryUri": {
      "description": "Find articles that are assigned to a particular category. You can specify at most 20 categories in a single search. If multiple `categoryUri` parameters are provided, then articles that are about any of the specified categories will be returned, unless you specify `categoryOper` parameter and set it to 'and'. Check [autosuggest methods](https://eventregistry.org/documentation?tab=suggCategories) to get value for a specified category name.\n",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "sourceUri": {
      "description": "Find articles that have been published by a news source. If you specify multiple `sourceUri` parameters, then articles from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab=suggSources) to get value for a source name.\n",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "sourceLocationUri": {
      "description": "Find articles that were published by news sources located at the given geographic location (city or country). If you specify multiple `sourceLocationUri` parameters, then articles from sources from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab=suggLocations) to get value for a location name.\n",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "sourceGroupUri": {
      "description": "Find articles that were published by news sources that are assigned to some predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab=suggSourceGroups) to get value for a source group or find the uri.\n",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "authorUri": {
      "description": "Find articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab=suggAuthors) to get value for author uri based on the author name (and potentially source url).",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "locationUri": {
      "description": "Find articles that describe something that occured at a particular location (based on the location mentioned in the dateline). Check [autosuggest methods](https://eventregistry.org/documentation?tab=suggLocations) to get value for a location name.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "lang": {
      "description": "Find articles in the specific language(s). If not specified, all languages will be included. You can specify at most 5 languages in a single search.",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "eng",
          "spa",
          "deu",
          "zho",
          "slv",
          "cat",
          "por",
          "ita",
          "fra",
          "rus",
          "ara",
          "tur",
          "hrv",
          "srp",
          "ind",
          "ces",
          "slk",
          "pol",
          "eus",
          "hun",
          "nld",
          "swe",
          "fin",
          "dan",
          "ell",
          "ron",
          "bul",
          "ukr",
          "fas",
          "hin",
          "urd",
          "vie"
        ]
      }
    },
    "dateStart": {
      "description": "The starting date on or after the articles of interest were published.",
      "type": "string"
    },
    "dateEnd": {
      "description": "The last date on which the articles of interest were published.",
      "type": "string"
    },
    "dateMentionStart": {
      "description": "Ignore events (that contain one or more articles) or articles that explicitly mention a date that is equal or greater than `dateMentionStart`.",
      "type": "string"
    },
    "dateMentionEnd": {
      "description": "Ignore events (that contain one or more articles) or articles that explicitly mention a date that is lower or equal to `dateMentionEnd`.",
      "type": "string"
    },
    "keywordLoc": {
      "description": "What data should be used when searching using the keywords provided by `keywords` parameter.",
      "type": "string",
      "default": "body",
      "enum": [
        "body",
        "title",
        "body,title"
      ]
    },
    "keywordOper": {
      "description": "If more keywords are provided with the `keyword` parameter, what should be the Boolean operator used. If 'and' (default) then all of the specified keywords have to be present in the article; if 'or' then an article will be returned if it mentions any of the provided keywords.",
      "type": "string",
      "default": "and",
      "enum": [
        "and",
        "or"
      ]
    },
    "conceptOper": {
      "description": "If more concepts are provided with the `conceptUri` parameter, what should be the Boolean operator used. If 'and' (default) then all of the specified concepts have to be present in the article; if 'or' then an article will be returned if it mentions any of the provided concepts.",
      "type": "string",
      "default": "and",
      "enum": [
        "and",
        "or"
      ]
    },
    "categoryOper": {
      "description": "If more categories are provided with the `categoryUri` parameter, what should be the Boolean operator used. If 'and' then all of the specified categories have to be present in the article; if 'or' then an article will be returned if it mentions any of the provided categories.",
      "type": "string",
      "default": "or",
      "enum": [
        "and",
        "or"
      ]
    },
    "startSourceRankPercentile": {
      "description": "starting [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 0). Value should be in range 0-90 and divisible by 10.",
      "type": "integer",
      "default": "0"
    },
    "endSourceRankPercentile": {
      "description": "ending [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 100). Value should be in range 10-100 and divisible by 10.",
      "type": "integer",
      "default": "100"
    },
    "minSentimentArticle": {
      "description": "the minimum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language.",
      "type": "integer"
    },
    "maxSentimentArticle": {
      "description": "the maximum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language.",
      "type": "integer"
    },
    "includeEventTitle": {
      "description": "Set this parameter to true to include the event title in the response.",
      "type": "boolean",
      "default": "true"
    },
    "includeEventSummary": {
      "description": "Set this parameter to true to include the event summary in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeEventSocialScore": {
      "description": "Set this parameter to true to include the event social score in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeEventSentiment": {
      "description": "Set this parameter to true to include the event sentiment in the response.",
      "type": "boolean",
      "default": "true"
    },
    "includeEventLocation": {
      "description": "Set this parameter to true to include the event location in the response.",
      "type": "boolean",
      "default": "true"
    },
    "includeEventDate": {
      "description": "Set this parameter to true to include the event date in the response.",
      "type": "boolean",
      "default": "true"
    },
    "includeEventArticleCounts": {
      "description": "Set this parameter to true to include the article counts for events in the response.",
      "type": "boolean",
      "default": "true"
    },
    "includeEventConcepts": {
      "description": "Set this parameter to true to include the event concepts in the response.",
      "type": "boolean",
      "default": "true"
    },
    "includeEventCategories": {
      "description": "Set this parameter to true to include the event categories in the response.",
      "type": "boolean",
      "default": "true"
    },
    "includeEventCommonDates": {
      "description": "Set this parameter to true to include the event commmon dates in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeEventStories": {
      "description": "Set this parameter to true to include the event stories in the response.",
      "type": "boolean",
      "default": "false"
    },
    "eventImageCount": {
      "description": "Define how many images you would like to have in the response.",
      "type": "integer",
      "default": "0"
    },
    "includeConceptLabel": {
      "description": "Set this parameter to true to include the concept label in the response.",
      "type": "boolean",
      "default": "true"
    },
    "includeConceptImage": {
      "description": "Set this parameter to true to include the concept image in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeConceptSynonyms": {
      "description": "Set this parameter to true to include the concept synonyms in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeConceptTrendingScore": {
      "description": "Set this parameter to true to include concept trending score in the response.",
      "type": "boolean",
      "default": "false"
    },
    "conceptLang": {
      "description": "Define the language of the concept label.",
      "type": "string",
      "default": "eng"
    },
    "includeStoryBasicStats": {
      "description": "Set this parameter to true to include story basic stats in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeStoryTitle": {
      "description": "Set this parameter to true to include the story title in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeStoryLocation": {
      "description": "Set this parameter to true to include the story location in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeStoryDate": {
      "description": "Set this parameter to true to include the story date in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeStoryConcepts": {
      "description": "Set this parameter to true to include the story concepts in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeStoryCategories": {
      "description": "Set this parameter to true to include the story categories in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeStoryMedoidArticle": {
      "description": "Set this parameter to true to include story medoid article in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeStoryCommonDates": {
      "description": "Set this parameter to true to include story common dates in the response.",
      "type": "boolean",
      "default": "false"
    },
    "storyImageCount": {
      "description": "Define how many images you would like to have in the response.",
      "type": "integer",
      "default": "false"
    },
    "includeArticleTitle": {
      "description": "Set this parameter to true to include the article title in the response.",
      "type": "boolean",
      "default": "true"
    },
    "includeArticleBasicInfo": {
      "description": "Set this parameter to true to include the core article information in the response.",
      "type": "boolean",
      "default": "true"
    },
    "includeArticleBody": {
      "description": "Set this parameter to true to include the article body in the response.",
      "type": "boolean",
      "default": "true"
    },
    "includeArticleEventUri": {
      "description": "Set this parameter to true to include the uri of the event (to which the article belongs) in the response.",
      "type": "boolean",
      "default": "true"
    },
    "includeArticleSocialScore": {
      "description": "Set this parameter to true to include the information about how many times the article was shared on different social media.",
      "type": "boolean",
      "default": "false"
    },
    "includeArticleSentiment": {
      "description": "Set this parameter to true to include the article sentiment in the response (value will be non-null only for English articles).",
      "type": "boolean",
      "default": "true"
    },
    "includeArticleConcepts": {
      "description": "Set this parameter to true to include the article concepts in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeArticleCategories": {
      "description": "Set this parameter to true to include the article categories in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeArticleLocation": {
      "description": "Set this parameter to true to include the article location in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeArticleImage": {
      "description": "Set this parameter to true to include the article image in the response.",
      "type": "boolean",
      "default": "true"
    },
    "includeArticleAuthors": {
      "description": "Set this parameter to true to include the article authors in the response.",
      "type": "boolean",
      "default": "true"
    },
    "includeArticleVideos": {
      "description": "Set this parameter to true to include the article videos in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeArticleLinks": {
      "description": "Set this parameter to true to include the article links in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeArticleExtractedDates": {
      "description": "Set this parameter to true to include article extracted dates in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeArticleDuplicateList": {
      "description": "Set this parameter to true to include the list of duplicate articles in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeArticleOriginalArticle": {
      "description": "Set this parameter to true to include the original article in the response.",
      "type": "boolean",
      "default": "false"
    },
    "articleBodyLen": {
      "description": "Set the size of the article body that'll be returned in the response. Use -1 for full article body.",
      "type": "integer",
      "default": -1
    },
    "includeSourceTitle": {
      "description": "Set this parameter to true to include the source title in the response.",
      "type": "boolean",
      "default": "true"
    },
    "includeSourceDescription": {
      "description": "Set this parameter to true to include the source description in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeSourceLocation": {
      "description": "Set this parameter to true to include the source location in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeSourceRanking": {
      "description": "Set this parameter to true to include the source ranking in the response.",
      "type": "boolean",
      "default": "false"
    },
    "includeLocationPopulation": {
      "description": "Set to true to include the population size of the location",
      "type": "boolean",
      "default": "false"
    },
    "includeLocationGeoNamesId": {
      "description": "Set to true to include the GeoNames id of the location",
      "type": "boolean",
      "default": "false"
    },
    "includeLocationCountryArea": {
      "description": "Set to true to include the are of the location in squared km.",
      "type": "boolean",
      "default": "false"
    },
    "includeLocationCountryContinent": {
      "description": "Set to true to get the continent of the country for location objects.",
      "type": "boolean",
      "default": "false"
    }
  },
  "required": [
    "apiKey",
    "eventUri"
  ]
}