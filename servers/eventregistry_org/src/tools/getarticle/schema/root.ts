import { z } from "zod"

export const inputParamsSchema = {
  "apiKey": z.string().describe("Your API key"),
  "articleUri": z.array(z.string()).describe("Articles are identifiable by their unique IDs (called URIs) that are assigned by Event Registry. Provide URI or a set of URIs."),
  "resultType": z.array(z.enum(["info","duplicatedArticles","originalArticle"])).describe("Define what kind of results you would like to get.").optional(),
  "infoArticleBodyLen": z.number().int().describe("Set the size of the article body that'll be returned in the response. Use -1 for full article body.").optional(),
  "includeArticleTitle": z.boolean().describe("Set this parameter to true to include the article title in the response.").optional(),
  "includeArticleBasicInfo": z.boolean().describe("Set this parameter to true to include the core article information in the response.").optional(),
  "includeArticleBody": z.boolean().describe("Set this parameter to true to include the article body in the response.").optional(),
  "includeArticleEventUri": z.boolean().describe("Set this parameter to true to include the uri of the event (to which the article belongs) in the response.").optional(),
  "includeArticleSocialScore": z.boolean().describe("Set this parameter to true to include the information about how many times the article was shared on different social media.").optional(),
  "includeArticleSentiment": z.boolean().describe("Set this parameter to true to include the article sentiment in the response (value will be non-null only for English articles).").optional(),
  "includeArticleConcepts": z.boolean().describe("Set this parameter to true to include the article concepts in the response.").optional(),
  "includeArticleCategories": z.boolean().describe("Set this parameter to true to include the article categories in the response.").optional(),
  "includeArticleLocation": z.boolean().describe("Set this parameter to true to include the article location in the response.").optional(),
  "includeArticleImage": z.boolean().describe("Set this parameter to true to include the article image in the response.").optional(),
  "includeArticleVideos": z.boolean().describe("Set this parameter to true to include the article videos in the response.").optional(),
  "includeArticleLinks": z.boolean().describe("Set this parameter to true to include the article links in the response.").optional(),
  "includeArticleExtractedDates": z.boolean().describe("Set this parameter to true to include article extracted dates in the response.").optional(),
  "includeArticleDuplicateList": z.boolean().describe("Set this parameter to true to include the list of duplicate articles in the response.").optional(),
  "includeArticleOriginalArticle": z.boolean().describe("Set this parameter to true to include the original article in the response.").optional(),
  "includeConceptLabel": z.boolean().describe("Set this parameter to true to include the concept label in the response.").optional(),
  "includeConceptImage": z.boolean().describe("Set this parameter to true to include the concept image in the response.").optional(),
  "includeConceptSynonyms": z.boolean().describe("Set this parameter to true to include the concept synonyms in the response.").optional(),
  "includeConceptTrendingScore": z.boolean().describe("Set this parameter to true to include concept trending score in the response.").optional(),
  "conceptLang": z.string().describe("Define the language of the concept label.").optional(),
  "includeSourceTitle": z.boolean().describe("Set this parameter to true to include the source title in the response.").optional(),
  "includeSourceDescription": z.boolean().describe("Set this parameter to true to include the source description in the response.").optional(),
  "includeSourceLocation": z.boolean().describe("Set this parameter to true to include the source location in the response.").optional(),
  "includeSourceRanking": z.boolean().describe("Set this parameter to true to include the source ranking in the response.").optional(),
  "includeLocationPopulation": z.boolean().describe("Set to true to include the population size of the location").optional(),
  "includeLocationGeoNamesId": z.boolean().describe("Set to true to include the GeoNames id of the location").optional(),
  "includeLocationCountryArea": z.boolean().describe("Set to true to include the are of the location in squared km.").optional(),
  "includeLocationCountryContinent": z.boolean().describe("Set to true to get the continent of the country for location objects.").optional()
}