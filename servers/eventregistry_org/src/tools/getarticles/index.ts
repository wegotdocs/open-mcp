import { inputParamsSchema } from "./schema/root.js"
import type { OpenMCPServerTool } from "@open-mcp/core"

const tool: OpenMCPServerTool = {
  "toolName": "getarticles",
  "toolDescription": "Obtain articles that match one or more search conditions",
  "baseUrl": "https://eventregistry.org",
  "path": "/api/v1/article/getArticles",
  "method": "get",
  "security": [],
  "paramsMap": {
    "query": {
      "apiKey": "apiKey",
      "resultType": "resultType",
      "articlesPage": "articlesPage",
      "articlesCount": "articlesCount",
      "articlesSortBy": "articlesSortBy",
      "articlesSortByAsc": "articlesSortByAsc",
      "articleBodyLen": "articleBodyLen",
      "dataType": "dataType",
      "query": "query",
      "keyword": "keyword",
      "conceptUri": "conceptUri",
      "categoryUri": "categoryUri",
      "sourceUri": "sourceUri",
      "sourceLocationUri": "sourceLocationUri",
      "sourceGroupUri": "sourceGroupUri",
      "authorUri": "authorUri",
      "locationUri": "locationUri",
      "lang": "lang",
      "dateStart": "dateStart",
      "dateEnd": "dateEnd",
      "dateMentionStart": "dateMentionStart",
      "dateMentionEnd": "dateMentionEnd",
      "keywordLoc": "keywordLoc",
      "keywordOper": "keywordOper",
      "conceptOper": "conceptOper",
      "categoryOper": "categoryOper",
      "ignoreKeyword": "ignoreKeyword",
      "ignoreConceptUri": "ignoreConceptUri",
      "ignoreCategoryUri": "ignoreCategoryUri",
      "ignoreSourceUri": "ignoreSourceUri",
      "ignoreSourceLocationUri": "ignoreSourceLocationUri",
      "ignoreSourceGroupUri": "ignoreSourceGroupUri",
      "ignoreLocationUri": "ignoreLocationUri",
      "ignoreAuthorUri": "ignoreAuthorUri",
      "ignoreLang": "ignoreLang",
      "ignoreKeywordLoc": "ignoreKeywordLoc",
      "startSourceRankPercentile": "startSourceRankPercentile",
      "endSourceRankPercentile": "endSourceRankPercentile",
      "minSentimentArticle": "minSentimentArticle",
      "maxSentimentArticle": "maxSentimentArticle",
      "isDuplicateFilter": "isDuplicateFilter",
      "hasDuplicateFilter": "hasDuplicateFilter",
      "eventFilter": "eventFilter",
      "includeArticleTitle": "includeArticleTitle",
      "includeArticleBasicInfo": "includeArticleBasicInfo",
      "includeArticleBody": "includeArticleBody",
      "includeArticleEventUri": "includeArticleEventUri",
      "includeArticleSocialScore": "includeArticleSocialScore",
      "includeArticleSentiment": "includeArticleSentiment",
      "includeArticleConcepts": "includeArticleConcepts",
      "includeArticleCategories": "includeArticleCategories",
      "includeArticleLocation": "includeArticleLocation",
      "includeArticleImage": "includeArticleImage",
      "includeArticleVideos": "includeArticleVideos",
      "includeArticleLinks": "includeArticleLinks",
      "includeArticleExtractedDates": "includeArticleExtractedDates",
      "includeArticleDuplicateList": "includeArticleDuplicateList",
      "includeArticleOriginalArticle": "includeArticleOriginalArticle",
      "includeSourceTitle": "includeSourceTitle",
      "includeSourceDescription": "includeSourceDescription",
      "includeSourceLocation": "includeSourceLocation",
      "includeSourceRanking": "includeSourceRanking",
      "includeConceptLabel": "includeConceptLabel",
      "includeConceptImage": "includeConceptImage",
      "includeConceptSynonyms": "includeConceptSynonyms",
      "includeConceptTrendingScore": "includeConceptTrendingScore",
      "conceptLang": "conceptLang",
      "includeCategoryParentUri": "includeCategoryParentUri",
      "includeLocationGeoLocation": "includeLocationGeoLocation",
      "includeLocationPopulation": "includeLocationPopulation",
      "includeLocationGeoNamesId": "includeLocationGeoNamesId",
      "includeLocationCountryArea": "includeLocationCountryArea",
      "includeLocationCountryContinent": "includeLocationCountryContinent"
    }
  },
  inputParamsSchema
}

export default tool