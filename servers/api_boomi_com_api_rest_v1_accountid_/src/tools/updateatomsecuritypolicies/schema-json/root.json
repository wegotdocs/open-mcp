{
  "type": "object",
  "properties": {
    "id": {
      "description": "The runtime (container) id for the applicable runtime (accepts only Runtime cloud cluster and regular Runtime cluster types, no basic runtimes or cloud attachments).",
      "type": "string"
    },
    "atomId": {
      "type": "string",
      "xml": {
        "attribute": true
      },
      "description": "The ID of the Runtime cloud or Runtime cluster.",
      "example": "4ce4a1c2-5bd9-4bd9-9201-46198e2d88db"
    },
    "browser": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `browser` to the tool, first call the tool `expandSchema` with \"/properties/browser\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>",
      "additionalProperties": true
    },
    "common": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `common` to the tool, first call the tool `expandSchema` with \"/properties/common\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>",
      "additionalProperties": true
    },
    "runner": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `runner` to the tool, first call the tool `expandSchema` with \"/properties/runner\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>",
      "additionalProperties": true
    },
    "worker": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `worker` to the tool, first call the tool `expandSchema` with \"/properties/worker\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>",
      "additionalProperties": true
    }
  },
  "required": [
    "id",
    "atomId",
    "common"
  ]
}