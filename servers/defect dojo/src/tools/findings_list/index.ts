import { inputParamsSchema } from "./schema/root.js"
import type { OpenMCPServerTool } from "@open-mcp/core"

const tool: OpenMCPServerTool = {
  "toolName": "findings_list",
  "toolDescription": "",
  "baseUrl": "https://demo.defectdojo.org/api/v2",
  "path": "/api/v2/findings/",
  "method": "get",
  "security": [
    {
      "key": "sessionid",
      "value": "<mcp-env-var>SESSIONID</mcp-env-var>",
      "in": "cookie",
      "envVarName": "SESSIONID"
    },
    {
      "key": "Authorization",
      "value": "Basic <mcp-env-var>USERNAME_PASSWORD_BASE64</mcp-env-var>",
      "in": "header",
      "envVarName": "USERNAME_PASSWORD_BASE64"
    },
    {
      "key": "Authorization",
      "value": "<mcp-env-var>AUTHORIZATION</mcp-env-var>",
      "in": "header",
      "envVarName": "AUTHORIZATION"
    }
  ],
  "paramsMap": {
    "query": {
      "active": "active",
      "component_name": "component_name",
      "component_version": "component_version",
      "created": "created",
      "cvssv3": "cvssv3",
      "cvssv3_score": "cvssv3_score",
      "cwe": "cwe",
      "date": "date",
      "defect_review_requested_by": "defect_review_requested_by",
      "description": "description",
      "discovered_after": "discovered_after",
      "discovered_before": "discovered_before",
      "discovered_on": "discovered_on",
      "duplicate": "duplicate",
      "duplicate_finding": "duplicate_finding",
      "dynamic_finding": "dynamic_finding",
      "effort_for_fixing": "effort_for_fixing",
      "endpoints": "endpoints",
      "epss_percentile_max": "epss_percentile_max",
      "epss_percentile_min": "epss_percentile_min",
      "epss_score_max": "epss_score_max",
      "epss_score_min": "epss_score_min",
      "false_p": "false_p",
      "file_path": "file_path",
      "finding_group": "finding_group",
      "found_by": "found_by",
      "has_jira": "has_jira",
      "has_tags": "has_tags",
      "hash_code": "hash_code",
      "id": "id",
      "impact": "impact",
      "inherited_tags": "inherited_tags",
      "is_mitigated": "is_mitigated",
      "jira_change": "jira_change",
      "jira_creation": "jira_creation",
      "kev_date": "kev_date",
      "known_exploited": "known_exploited",
      "last_reviewed": "last_reviewed",
      "last_reviewed_by": "last_reviewed_by",
      "last_status_update": "last_status_update",
      "limit": "limit",
      "mitigated": "mitigated",
      "mitigated_after": "mitigated_after",
      "mitigated_before": "mitigated_before",
      "mitigated_by": "mitigated_by",
      "mitigated_on": "mitigated_on",
      "mitigation": "mitigation",
      "nb_occurences": "nb_occurences",
      "not_tag": "not_tag",
      "not_tags": "not_tags",
      "not_test__engagement__product__tags": "not_test__engagement__product__tags",
      "not_test__engagement__tags": "not_test__engagement__tags",
      "not_test__tags": "not_test__tags",
      "numerical_severity": "numerical_severity",
      "o": "o",
      "offset": "offset",
      "out_of_scope": "out_of_scope",
      "outside_of_sla": "outside_of_sla",
      "param": "param",
      "payload": "payload",
      "planned_remediation_date": "planned_remediation_date",
      "planned_remediation_version": "planned_remediation_version",
      "prefetch": "prefetch",
      "product_lifecycle": "product_lifecycle",
      "product_name": "product_name",
      "product_name_contains": "product_name_contains",
      "publish_date": "publish_date",
      "ransomware_used": "ransomware_used",
      "references": "references",
      "related_fields": "related_fields",
      "reporter": "reporter",
      "review_requested_by": "review_requested_by",
      "reviewers": "reviewers",
      "risk_acceptance": "risk_acceptance",
      "risk_accepted": "risk_accepted",
      "sast_sink_object": "sast_sink_object",
      "sast_source_file_path": "sast_source_file_path",
      "sast_source_line": "sast_source_line",
      "sast_source_object": "sast_source_object",
      "scanner_confidence": "scanner_confidence",
      "service": "service",
      "severity": "severity",
      "severity_justification": "severity_justification",
      "sla_expiration_date": "sla_expiration_date",
      "sla_start_date": "sla_start_date",
      "sonarqube_issue": "sonarqube_issue",
      "static_finding": "static_finding",
      "steps_to_reproduce": "steps_to_reproduce",
      "tag": "tag",
      "tags": "tags",
      "tags__and": "tags__and",
      "test": "test",
      "test__engagement": "test__engagement",
      "test__engagement__product": "test__engagement__product",
      "test__engagement__product__prod_type": "test__engagement__product__prod_type",
      "test__engagement__product__tags": "test__engagement__product__tags",
      "test__engagement__product__tags__and": "test__engagement__product__tags__and",
      "test__engagement__tags": "test__engagement__tags",
      "test__engagement__tags__and": "test__engagement__tags__and",
      "test__tags": "test__tags",
      "test__tags__and": "test__tags__and",
      "test__test_type": "test__test_type",
      "title": "title",
      "under_defect_review": "under_defect_review",
      "under_review": "under_review",
      "unique_id_from_tool": "unique_id_from_tool",
      "verified": "verified",
      "vuln_id_from_tool": "vuln_id_from_tool",
      "vulnerability_id": "vulnerability_id"
    }
  },
  inputParamsSchema
}

export default tool