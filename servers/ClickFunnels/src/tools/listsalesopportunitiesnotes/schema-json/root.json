{
  "type": "object",
  "properties": {
    "opportunity_id": {
      "type": "integer"
    },
    "after": {
      "description": "ID of item after which the collection should be returned. More examples and info about pagination [in our guides](https://developers.myclickfunnels.com/docs/pagination).",
      "type": "string"
    },
    "sort_order": {
      "description": "Sort order of a list response. Use 'desc' to reverse the default 'asc' (ascending) sort order. Examples [in our guides](https://developers.myclickfunnels.com/docs/pagination).",
      "type": "string",
      "enum": [
        "asc",
        "desc"
      ]
    },
    "sort_property": {
      "description": "Sort property of a list response. The default is id and thus the created_at order.\nIf you sort by other properties, we additionally sort by id implicitly as a secondary sort property, so that you can rely on the sort order to be deterministic even if the main sort property ends up with the same values.\n",
      "type": "string",
      "enum": [
        "id",
        "updated_at"
      ]
    },
    "filter": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `filter` to the tool, first call the tool `expandSchema` with \"/properties/filter\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`. Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).\n</property-description>",
      "additionalProperties": true
    }
  },
  "required": [
    "opportunity_id"
  ]
}