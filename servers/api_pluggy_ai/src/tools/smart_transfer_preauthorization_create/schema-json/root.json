{
  "type": "object",
  "properties": {
    "connectorId": {
      "type": "number",
      "description": "Primary identifier of the connector"
    },
    "parameters": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `parameters` to the tool, first call the tool `expandSchema` with \"/properties/parameters\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Credentials neccesary to create a smart transfer preauthorization</property-description>",
      "additionalProperties": true
    },
    "recipientIds": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "Primary identifier of the payment recipient"
      }
    },
    "callbackUrls": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `callbackUrls` to the tool, first call the tool `expandSchema` with \"/properties/callbackUrls\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Redirect urls after the preauthorization flow was completed or ended in error status</property-description>",
      "additionalProperties": true
    },
    "clientPreauthorizationId": {
      "type": "string",
      "description": "Client preauthorization identifier"
    }
  },
  "required": []
}