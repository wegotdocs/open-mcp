import { z } from "zod"

export const inputParamsSchema = {
  "companyId": z.string().uuid().describe("The identifier of the company where the employee will belong to"),
  "firstName": z.string().describe("The first name of the employee"),
  "lastName": z.string().describe("The last name of the employee"),
  "invitation": z.boolean().describe("If true, an invitation email will be send to the email from the email field"),
  "status": z.enum(["active","inactive"]).describe("default: active"),
  "gender": z.enum(["female","male","no_response"]).optional(),
  "email": z.string().email().describe("The email for the employee access and notifications (required if invitation is true)").optional(),
  "contractId": z.string().uuid().describe("The identifier of your internal employee contract").optional(),
  "code": z.number().int().describe("The code of the employee").optional(),
  "pin": z.number().int().describe("The pin of the employee").optional(),
  "nid": z.string().describe("The National Identity Document of the employee").optional(),
  "identityNumberType": z.enum(["dni","nie","rut","other"]).optional(),
  "ssn": z.string().describe("The Social Security Number of the employee").optional(),
  "phone": z.string().optional(),
  "dateOfBirth": z.string().date().optional(),
  "customFields": z.array(z.object({ "id": z.string().uuid().describe("The id of the custom field to fill").optional(), "value": z.string().optional() })).describe("Custom Fields to fill").optional(),
  "nationality": z.string().optional(),
  "maritalStatus": z.string().optional(),
  "address": z.string().optional(),
  "postalCode": z.string().optional(),
  "emergencyPhone": z.string().optional(),
  "childrenCount": z.number().int().optional(),
  "disability": z.number().int().optional(),
  "personalEmail": z.string().email().optional(),
  "description": z.string().optional(),
  "city": z.string().optional(),
  "province": z.string().optional(),
  "country": z.string().optional(),
  "salaryRange": z.string().optional(),
  "studyLevel": z.string().optional(),
  "professionalCategoryCode": z.string().optional(),
  "professionalCategoryDescription": z.string().optional(),
  "bic": z.string().optional(),
  "jobChargeId": z.string().uuid().optional(),
  "workPhone": z.string().optional(),
  "mainRecruiter": z.string().uuid().optional(),
  "nfc": z.string().optional()
}