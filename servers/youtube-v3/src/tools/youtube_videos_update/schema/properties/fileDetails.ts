import { z } from "zod"

export const inputParamsSchema = {
  "audioStreams": z.array(z.object({ "bitrateBps": z.string().describe("The audio stream's bitrate, in bits per second.").optional(), "channelCount": z.number().int().describe("The number of audio channels that the stream contains.").optional(), "codec": z.string().describe("The audio codec that the stream uses.").optional(), "vendor": z.string().describe("A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code.").optional() }).describe("Information about an audio stream.")).describe("A list of audio streams contained in the uploaded video file. Each item in the list contains detailed metadata about an audio stream.").optional(),
  "bitrateBps": z.string().describe("The uploaded video file's combined (video and audio) bitrate in bits per second.").optional(),
  "container": z.string().describe("The uploaded video file's container format.").optional(),
  "creationTime": z.string().describe("The date and time when the uploaded video file was created. The value is specified in ISO 8601 format. Currently, the following ISO 8601 formats are supported: - Date only: YYYY-MM-DD - Naive time: YYYY-MM-DDTHH:MM:SS - Time with timezone: YYYY-MM-DDTHH:MM:SS+HH:MM ").optional(),
  "durationMs": z.string().describe("The length of the uploaded video in milliseconds.").optional(),
  "fileName": z.string().describe("The uploaded file's name. This field is present whether a video file or another type of file was uploaded.").optional(),
  "fileSize": z.string().describe("The uploaded file's size in bytes. This field is present whether a video file or another type of file was uploaded.").optional(),
  "fileType": z.enum(["video","audio","image","archive","document","project","other"]).describe("The uploaded file's type as detected by YouTube's video processing engine. Currently, YouTube only processes video files, but this field is present whether a video file or another type of file was uploaded.").optional(),
  "videoStreams": z.array(z.object({ "aspectRatio": z.number().describe("The video content's display aspect ratio, which specifies the aspect ratio in which the video should be displayed.").optional(), "bitrateBps": z.string().describe("The video stream's bitrate, in bits per second.").optional(), "codec": z.string().describe("The video codec that the stream uses.").optional(), "frameRateFps": z.number().describe("The video stream's frame rate, in frames per second.").optional(), "heightPixels": z.number().int().describe("The encoded video content's height in pixels.").optional(), "rotation": z.enum(["none","clockwise","upsideDown","counterClockwise","other"]).describe("The amount that YouTube needs to rotate the original source content to properly display the video.").optional(), "vendor": z.string().describe("A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code.").optional(), "widthPixels": z.number().int().describe("The encoded video content's width in pixels. You can calculate the video's encoding aspect ratio as width_pixels / height_pixels.").optional() }).describe("Information about a video stream.")).describe("A list of video streams contained in the uploaded video file. Each item in the list contains detailed metadata about a video stream.").optional()
}