{
  "type": "object",
  "properties": {
    "autoscaler": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `autoscaler` to the tool, first call the tool `expandSchema` with \"/properties/autoscaler\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>When enabled, the number of nodes automatically scales within the defined minimum and maximum values. When making a request, `max` and `min` require each other.</property-description>",
      "additionalProperties": true
    },
    "count": {
      "description": "The number of nodes in the Node Pool.",
      "example": "{{count}}",
      "maximum": 100,
      "minimum": 1,
      "type": "integer"
    },
    "labels": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `labels` to the tool, first call the tool `expandSchema` with \"/properties/labels\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Key-value pairs added as labels to nodes in the node pool. Labels help classify your nodes and easily select subsets of objects. To learn more, review [Add Labels and Taints to your LKE node pools](https://www.linode.com/docs/products/compute/kubernetes/guides/deploy-and-manage-cluster-with-the-linode-api/#add-labels-and-taints-to-your-lke-node-pools).\n\n**Label key:**\n\n- A key can contain alphanumeric characters, dashes (`-`), underscores (`_`), or dots (`.`). Start and end it with an alphanumeric character.\n\n- If the key begins with a DNS subdomain prefix followed by a single slash, for example `example.com/my-app`, the maximum total length of the label key is 128 characters. Domain labels can be up to 62 characters after the '/'. The prefix needs to adhere to [RFC 1123](https://datatracker.ietf.org/doc/html/rfc1123) DNS subdomain restrictions.\n\n- If the key doesn't begin with a DNS subdomain prefix, the maximum key length is 63 characters.\n\nSpecifying an empty object removes all previously set labels.\n\n**Label value:**\n\n- The label's value can contain alphanumeric characters, dashes (`-`), underscores (`_`), or dots (`.`). Start and end it with an alphanumeric character.\n\n- Can be specified as an empty string value with `\"\"`.</property-description>",
      "additionalProperties": true
    },
    "taints": {
      "description": "Kubernetes taints to add to node pool nodes. Taints help control how pods are scheduled onto nodes, specifically allowing them to repel certain pods. To learn more, review [Add labels and taints to your LKE node pools](https://www.linode.com/docs/products/compute/kubernetes/guides/deploy-and-manage-cluster-with-the-linode-api/#add-labels-and-taints-to-your-lke-node-pools).\n\nSpecifying an empty array (`[]`) removes all previously set taints.",
      "example": [
        {
          "effect": "NoSchedule",
          "key": "example.com/my-app",
          "value": "teamA"
        },
        {
          "effect": "NoExecute",
          "key": "myapp.io/team",
          "value": "teamB"
        }
      ],
      "items": {
        "additionalProperties": false,
        "properties": {
          "effect": {
            "description": "The Kubernetes taint effect. For `NoSchedule`, `PreferNoSchedule` and `NoExecute` descriptions, see [Kubernetes Taints and Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/).",
            "enum": [
              "NoSchedule",
              "PreferNoSchedule",
              "NoExecute"
            ],
            "example": "NoSchedule",
            "type": "string"
          },
          "key": {
            "description": "The Kubernetes taint key.\n\n- A key can contain alphanumeric characters, dashes (`-`), underscores (`_`), or dots (`.`). Start and end it with an alphanumeric character.\n\n- If the key begins with a DNS subdomain prefix followed by a single slash, for example `example.com/my-app`, the prefix part needs to adhere to [RFC 1123](https://datatracker.ietf.org/doc/html/rfc1123) DNS subdomain restrictions and be a maximum of 253 characters.",
            "example": "example.com/my-app",
            "maxLength": 63,
            "minLength": 1,
            "pattern": "^([A-Za-z0-9][-A-Za-z0-9_.]*)?(\\/)?([A-Za-z0-9][-A-Za-z0-9_.]{1,63})?$",
            "type": "string"
          },
          "value": {
            "description": "The Kubernetes taint value.\n\n- A key can contain alphanumeric characters, dashes (`-`), underscores (`_`), or dots (`.`). Start and end it with an alphanumeric character.\n\n- Can be specified as an empty string value with `\"\"`.",
            "example": "teamC",
            "maxLength": 63,
            "minLength": 0,
            "pattern": "^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?",
            "type": "string"
          }
        },
        "required": [
          "key",
          "value",
          "effect"
        ],
        "type": "object"
      },
      "minItems": 0,
      "type": "array"
    }
  },
  "required": []
}