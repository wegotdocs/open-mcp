import { z } from "zod"

export const inputParams = {
  "acl": z.enum(["private","public-read","authenticated-read","public-read-write"]).describe("The S3 predefined collection of grantees and permissions set for the bucket, also referred to as a [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl).").optional(),
  "cors_enabled": z.boolean().describe("If set to `false`, cross-origin resource sharing (CORS) is disabled for all origins in the bucket.").optional(),
  "endpoint_type": z.enum(["E0","E1","E2","E3"]).describe("The type of `s3_endpoint` available to the active `user` in this `region`. See [Endpoint types](https://techdocs.akamai.com/cloud-computing/docs/object-storage#endpoint-types) for more information.").optional(),
  "label": z.string().regex(new RegExp("^(?=.{3,63}$)[a-z0-9]+(?:-[a-z0-9]+)*(?:[.][a-z0-9]+(?:-[a-z0-9]+)*)*$")).describe("The name for this bucket.\n\n* A bucket name can contain from 3 to 63 alphanumeric characters, dashes (`-`), or dots (`.`).\n* A bucket name can't end in a dash and you can't use two consecutive dashes.\n* A bucket name can't start or end in a dot, and you can't use two consecutive dots. As a best practice, only use dots if a certificate you're using with your bucket requires it. (For example, if you're using a custom TLS certificate.)\n* A bucket name needs to be unique in the `region` where you're creating the bucket. The API only reserves labels for the `region` where active buckets are created and stored. If you want to reserve this bucket's label in another `region`, create a new bucket with the same label in the new `region`."),
  "region": z.string().describe("The `id` assigned to the data center ([region](https://techdocs.akamai.com/linode-api/reference/get-regions)) where this Object Storage bucket should be created.\n\n> ðŸ“˜\n>\n> This supports legacy `clusterId` values that represented a specific region. For example, `us-east-1` is the legacy reference for the `us-east` region.").optional(),
  "s3_endpoint": z.string().describe("The active user's S3-compatible endpoint URL, based on the `endpoint_type` and `region`.").optional()
}