import { z } from "zod"

export const inputParamsSchema = {
  "scheduleScanEnabled": z.boolean().describe("Whether the scheduled compliance scan is enabled or disabled").optional(),
  "exceptions": z.array(z.object({ "type": z.enum(["Kubernetes","Amazon EKS","Google GKE","NSA"]).describe("The benchmark type of the exception"), "benchmarkVersion": z.string().max(128).describe("The benchmark version of the exception"), "parameters": z.array(z.object({ "id": z.string().max(128).describe("The ID of the exception category of the compliance scan"), "value": z.string().max(2048).describe("A list of the compliance scan exceptions") })).min(1).describe("The categories of the exception.\n\nDifferent benchmark versions might have different exception categories. To get the list of supported exception categories for a specific benchmark version, make a GET request to the `/complianceScanConfiguration` endpoint.\n\nSupported values for Kubernetes benchmark version 1.9.0: \n- `cluster_admin_role`\n- `secrets_access`\n- `role_wildcards`\n- `pods_creation_access`\n- `restrict_default_service_accounts`\n- `allow_service_acc_token_mount`\n") })).optional(),
  "benchmarkVersions": z.array(z.object({ "type": z.enum(["Kubernetes","Amazon EKS","OpenShift","Google GKE","NSA"]).describe("The type of the benchmark"), "activated": z.string().max(128).describe("The active benchmark version of the compliance scan.\n\n> **Tip**\n>\n> Get the available benchmark versions for a type by making a GET request to the `/v3.0/containerSecurity/complianceScanVersions` endpoint.") }).describe("The settings of the request\n\nDefault: The latest supported versions of the benchmark\n")).optional(),
  "frameworks": z.array(z.object({ "name": z.enum(["CIS","NSA"]).describe("The framework type of the compliance scans\n\nCIS supports Kubernetes clusters by platform. NSA supports universal Kubernetes clusters regardless of the platform.\n"), "activationStatus": z.enum(["activated","deactivated"]).describe("The activation status of compliance scan frameworks used to run scans\n") })).optional()
}