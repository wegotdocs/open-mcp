import { z } from "zod"

export const inputParamsSchema = {
  "top": z.union([z.literal(25), z.literal(50), z.literal(100)]).describe("The number of records displayed on a page.").optional(),
  "orderBy": z.string().max(64).describe("The fields by which the results are sorted.\n\nAdding the keyword desc after the parameter name returns records in descending order.\n\nAvailable fields:\n* `orchestrator`\n").optional(),
  "TMV1-Filter": z.string().max(1024).describe("The filter for retrieving a subset of the Kubernetes cluster list. This parameter should be included in every request that generates paginated output.\n\nSupported fields: \n* `name` - The name of the cluster group. Predefined parent groups are named Amazon EKS, Microsoft AKS, Google GKE, Alibaba Cloud ACK, Self-managed.\n* `orchestrator` - The orchestrator of the Cluster. Support values: [ Self-managed, Amazon EKS, Microsoft AKS, Google GKE, Alibaba Cloud ACK ]\n* `parentId` - The UUID of the parent cluster group. It is not possible to find default groups by searching using the eq '' expression. The default groups are: Self-managed - '00000000-0000-0000-0000-000000000000', Amazon EKS - '00000000-0000-0000-0000-000000000001', Microsoft AKS - '00000000-0000-0000-0000-000000000002', Google GKE - '00000000-0000-0000-0000-000000000003', Alibaba Cloud ACK - '00000000-0000-0000-0000-000000000004'.\n\nSupported operators:\n* `eq` - Operator \"equal to\"\n* `and` - Operator \"and\"\n* `or` - Operator \"or\"\n* `not` - Operator \"not\"\n* `contains` - Operator for searching for a specified string within a field\n* `()` - Symbols for grouping operands\n").optional()
}