import { z } from "zod"

export const inputParamsSchema = {
  "orderBy": z.string().max(30).describe("The parameter that allows you to sort the retrieved search results in ascending or descending order. If no order is specified, the results are shown in ascending order.\n\nSupported fields and operators:\n\n* updatedDateTime\n* asc - Ascending order\n* desc - Descending order\n").optional(),
  "filter": z.string().max(4000).describe("The filter for retrieving a subset of the custom intelligence reports list. Supported fields and operators:\n\n* 'id' - Unique alphanumeric string that identifies a custom intelligence report\n* 'name' - Title of a custom intelligence report, needs to be included with single quotation marks. Single quotation escape is currently not supported.\n* 'eq' - Abbreviation of the operator \"equal to\"\n* 'and' - Operator \"and\"\n* 'or' - Operator \"or\"\n* 'not' - Operator \"not\"\n* '( )' - Symbols for grouping operands with their correct operator.\n").optional(),
  "startDateTime": z.string().datetime({ offset: true }).describe("The timestamp in ISO 8601 format.").describe("The timestamp in ISO 8601 format that indicates the start of the data retrieval time range. If no value is specified, 'startDateTime' defaults to the earliest available value for 'updatedDateTime'\n").optional(),
  "endDateTime": z.string().datetime({ offset: true }).describe("The timestamp in ISO 8601 format.").describe("Timestamp in ISO 8601 format that indicates the end of the data retrieval time range. If no value is specified, 'endDateTime' defaults to the time the request is made.\n").optional(),
  "top": z.union([z.literal(50), z.literal(100), z.literal(200)]).describe("The number of records displayed on a page").optional()
}