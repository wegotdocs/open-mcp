import { z } from "zod"

export const inputParamsSchema = {
  "orderBy": z.string().max(128).describe("The field by which the results are sorted.             \n\nTo display records in ascending or descending order, add the phrase `asc` or `desc` after the parameter name.\n\nAvailable values: \n\n* `deviceName`\n* `asc` - Ascending order\n* `desc` - Descending order\n").optional(),
  "top": z.union([z.literal(10), z.literal(50), z.literal(100), z.literal(200)]).describe("The number of records displayed on a page. \n\nDefault: `100`\n").optional(),
  "TMV1-Filter": z.string().max(1024).describe("Filter for retrieving a subset of the prioritized CVEs. \n\nSupported fields:\n\n|Field |Description |Supported values |\n|---------|---------|---------|\n|`id` |The ID of the device on the Trend Vision One platform. |Any value|\n|`deviceName` |The name of the device. |Any value|\n|`ip` |The IP addresses of a device. |Any value|\n|`criticality` |The criticality of the device.|`high`, `medium`, `low` |\n|`cvssScore` |The CVSS score.|Any value|\n|`globalExploitActivityLevel` |Indicates how often attackers are exploiting a vulnerability.|`high`, `medium`, `low` |\n|`cveId` |The Common Vulnerabilities and Exposures identifier (CVE ID).|Any value|\n|`cveMitigationStatus` |The mitigation status of the CVE detected on the device.|`new`, `inProgress`, `closed`, `dismissed`, `accepted`, `mitigated` |\n|`cveEventRiskLevel` | The risk level of the risk event triggered by a CVE|`high`, `medium`, `low` |\n\nSupported operators:\n\n|Operator  |Description |\n|---------|---------|\n|`eq`  |Operator 'equal to'. |\n|`gt`  |Operator 'greater than'. |\n|`ge`  |Operator 'greater than or equal'. |\n|`le`  |Operator 'less than or equal'. |\n|`lt`  |Operator 'less than'. |\n|`and` |Operator 'and'. |\n|`or`  |Operator 'or'. |\n|`not` |Operator 'not'. |\n|`( )` |Symbols for grouping operands. |\n").optional()
}