import { z } from "zod"

export const inputParamsSchema = {
  "orderBy": z.enum(["cveRiskLevel desc","cveRiskLevel asc"]).describe("The field by which the results are sorted.\n\nTo display records in ascending or descending order, add the phrase `asc` or `desc` after the parameter name.\n\nAvailable values: \n* `cveRiskLevel`\n").optional(),
  "top": z.union([z.literal(10), z.literal(50), z.literal(100), z.literal(200)]).describe("The number of records displayed on a page.\n").optional(),
  "TMV1-Filter": z.string().max(1024).describe("Filter for retrieving a subset of the highly-exploitable CVEs detected in your internet-facing assets.\n\nSupported fields:\n\n| Field                        | Description                                                  | Supported values        |\n| ---------------------------- | ------------------------------------------------------------ | ----------------------- |\n| `cveId`                      | The Common Vulnerabilities and Exposures identifier (CVE ID) | Any value               |\n| `cveRiskLevel`               | The risk level of the risk event triggered by the CVE        | `high`, `medium`, `low` |\n| `globalExploitActivityLevel` | Indicates how often attackers are exploiting a vulnerability | `high`, `medium`, `low` |\n| `firstSeenDateTime`          | The date the CVE was first detected in your environment      | Any value               |\n| `publishedDateTime`          | The date MITRE published the CVE                             | Any value               |\n\nSupported operators:\n\n| Operator | Description                       | Notes                                                          |\n| -------- | --------------------------------- | -------------------------------------------------------------- |\n| `eq`     | Operator `equal to`.              | -                                                              |\n| `gt`     | Operator `greater than`.          | Only applicable to `firstSeenDateTime` and `publishedDateTime` |\n| `ge`     | Operator `greater than or equal`. | Only applicable to `firstSeenDateTime` and `publishedDateTime` |\n| `le`     | Operator `less than or equal`.    | Only applicable to `firstSeenDateTime` and `publishedDateTime` |\n| `lt`     | Operator `less than`.             | Only applicable to `firstSeenDateTime` and `publishedDateTime` |\n| `and`    | Operator `and`.                   | -                                                              |\n| `or`     | Operator `or`.                    | -                                                              |\n| `not`    | Operator `not`.                   | -                                                              |\n| `( )`    | Symbols for grouping operands.    | -                                                              |\n").optional()
}