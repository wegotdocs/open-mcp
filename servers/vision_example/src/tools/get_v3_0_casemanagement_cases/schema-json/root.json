{
  "type": "object",
  "properties": {
    "top": {
      "description": "The number of cases retrieved. If no value is specified, the request retrieves records for the top 50 cases.",
      "default": 50,
      "enum": [
        10,
        50,
        100
      ],
      "type": "integer"
    },
    "startDateTime": {
      "description": "The date and time of the start of data retrieval in ISO 8601 format",
      "default": "1970-01-01T00:00:00Z",
      "format": "date-time",
      "type": "string"
    },
    "endDateTime": {
      "description": "The date and time of the end of data retrieval in ISO 8601 format retrieval time range.",
      "default": "Current date time",
      "format": "date-time",
      "type": "string"
    },
    "dateTimeTarget": {
      "description": "A parameter that allows you to sort by either created date or updated date",
      "default": "createdDateTime",
      "enum": [
        "createdDateTime",
        "updatedDateTime"
      ],
      "type": "string"
    },
    "orderBy": {
      "description": "A parameter to be used for sorting records. Records are returned\nin descending order by default. To return records in ascending order, add\na phrase \"asc\" after the parameter name.\nSub-sorts can be specified by a comma-separated list of property names.\n\nSortable fields are as follows:\n* priority\n* createdDateTime\n\nSupported operators:\n* asc - Ascending order\n* desc - Descending order\n\nNote: You can use multiple fields, separated by commas, to sort the retrieved cases.\n",
      "default": "createdDateTime desc",
      "type": "string",
      "maxLength": 32
    },
    "TMV1-Filter": {
      "description": "Filter for retrieving a subset of cases.\n\nSupported fields:\n|Field|Description|Possible values|\n|---|---|---|\n|type|Type of the case|`Workbench`, `Forensics`,`ManagedService`, `TPIServiceNow`, `Others`|\n|priority|Priority of the case|`P0`, `P1`, `P2`, `P3`|\n|status|Status of the case|`Open`, `In-progress`,`Closed`|\n\nSupported operators:\n* 'eq' - Abbreviation of the operator 'equal to'\n* 'and' - Logical operator 'and'\n* 'or' - Logical operator 'or'\n* 'not' - Logical operator 'not'\n* '( )' - Symbols for grouping operands with their correct operator.\n",
      "type": "string",
      "maxLength": 270
    }
  },
  "required": []
}