import { z } from "zod"

export const inputParamsSchema = {
  "size": z.number().int().optional(),
  "offset": z.number().int().optional(),
  "order": z.string().optional(),
  "order_direction": z.string().optional(),
  "all_businesses": z.boolean().optional(),
  "cifs": z.array(z.string()).optional(),
  "accounting_responsibles_id": z.array(z.string()).optional(),
  "min_accounting_service_months": z.number().int().optional(),
  "max_accounting_service_months": z.number().int().optional(),
  "min_tickets_to_process": z.number().int().optional(),
  "max_tickets_to_process": z.number().int().optional(),
  "min_global_rating": z.number().int().optional(),
  "max_global_rating": z.number().int().optional(),
  "min_engagement": z.number().int().optional(),
  "max_engagement": z.number().int().optional(),
  "business_categories_id": z.array(z.string()).optional(),
  "search_string": z.string().optional(),
  "business_type": z.enum(["SOCIETY","UNSUPPORTED","AUTONOMOUS"]).optional(),
  "startup_certificate": z.number().int().optional(),
  "language": z.string().optional(),
  "invite_start_date": z.string().datetime({ offset: true }).optional(),
  "invite_end_date": z.string().datetime({ offset: true }).optional(),
  "services_id": z.array(z.string()).optional(),
  "deal_labels_id": z.array(z.string()).optional(),
  "opportunity_start_date": z.string().datetime({ offset: true }).optional(),
  "opportunity_end_date": z.string().datetime({ offset: true }).optional(),
  "paid_start_date": z.string().datetime({ offset: true }).optional(),
  "paid_end_date": z.string().datetime({ offset: true }).optional(),
  "discarded_start_date": z.string().datetime({ offset: true }).optional(),
  "discarded_end_date": z.string().datetime({ offset: true }).optional(),
  "updated_start_date": z.string().datetime({ offset: true }).optional(),
  "updated_end_date": z.string().datetime({ offset: true }).optional(),
  "recurrent_start_date": z.string().datetime({ offset: true }).optional(),
  "recurrent_end_date": z.string().datetime({ offset: true }).optional(),
  "products_id": z.array(z.string()).optional(),
  "products_out_id": z.array(z.string()).optional(),
  "services_out_id": z.array(z.string()).optional(),
  "ecommerce": z.array(z.string()).optional(),
  "not_blocked": z.boolean().optional(),
  "connected": z.boolean().optional(),
  "discarded": z.boolean().optional(),
  "opportunity": z.boolean().optional(),
  "paid": z.boolean().optional(),
  "recurrent": z.boolean().optional(),
  "has_products": z.boolean().optional(),
  "has_assigned_client": z.boolean().optional(),
  "signed": z.boolean().optional(),
  "with_recurrency": z.boolean().optional(),
  "with_bank_account": z.boolean().optional(),
  "with_fiscal_documents": z.boolean().optional(),
  "gocardless_active": z.boolean().optional(),
  "sage_active": z.boolean().optional(),
  "zip_code": z.string().optional(),
  "province": z.string().optional(),
  "min_invoices_last6_months_incomes": z.number().int().optional(),
  "max_invoices_last6_months_incomes": z.number().int().optional(),
  "min_transactions_last6_months_incomes": z.number().int().optional(),
  "max_transactions_last6_months_incomes": z.number().int().optional(),
  "min_annual_budget": z.number().int().optional(),
  "max_annual_budget": z.number().int().optional(),
  "census_ids": z.array(z.string()).optional(),
  "has_promotional_products": z.boolean().optional(),
  "tags_filter_mode": z.boolean().optional()
}