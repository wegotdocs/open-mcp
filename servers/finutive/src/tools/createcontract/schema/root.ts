import { z } from "zod"

export const inputParamsSchema = {
  "business_id": z.string(),
  "user_id": z.string().optional(),
  "modification_process": z.string().optional(),
  "automate_payroll": z.number().int().optional(),
  "date_contract": z.string().datetime({ offset: true }).optional(),
  "birthdate": z.string().datetime({ offset: true }).optional(),
  "title_date": z.string().datetime({ offset: true }).optional(),
  "seeker_date": z.string().datetime({ offset: true }).optional(),
  "start_date": z.string().datetime({ offset: true }).optional(),
  "end_date": z.string().datetime({ offset: true }).optional(),
  "replaces_to_limit_date": z.string().datetime({ offset: true }).optional(),
  "hour": z.string().optional(),
  "number_social_security": z.string().optional(),
  "dni": z.string().optional(),
  "firstname": z.string().optional(),
  "surname1": z.string().optional(),
  "surname2": z.string().optional(),
  "previously_worked_company": z.number().int().optional(),
  "origin_city": z.string().optional(),
  "origin_province": z.string().optional(),
  "civil_status": z.string().optional(),
  "nationality": z.string().optional(),
  "number_children": z.number().int().optional(),
  "address": z.string().optional(),
  "zip": z.string().optional(),
  "population": z.string().optional(),
  "province": z.string().optional(),
  "country": z.string().optional(),
  "phone": z.string().optional(),
  "mobile_phone": z.string().optional(),
  "email": z.string().optional(),
  "iban": z.string().optional(),
  "title": z.string().optional(),
  "job_functions": z.string().optional(),
  "category": z.string().optional(),
  "business_name": z.string().optional(),
  "hours": z.number().int().optional(),
  "hours_definition": z.string().optional(),
  "hours_by_days": z.string().optional(),
  "days": z.string().optional(),
  "replaces_to_person": z.string().optional(),
  "replaces_affiliation_number": z.string().optional(),
  "replaces_cause": z.string().optional(),
  "observations": z.string().optional(),
  "job_seeker": z.number().int().optional(),
  "youth_guarantee_fund": z.number().int().optional(),
  "salary": z.number().optional(),
  "contract_type": z.string().optional(),
  "contract_reason": z.string().optional(),
  "work_in_weekend": z.number().int().optional(),
  "notify_minimum_salary": z.number().int().optional(),
  "account": z.string().optional(),
  "time_offset": z.number().int().optional(),
  "trial_period": z.number().int().optional(),
  "trial_period_condition": z.number().int().optional(),
  "number_payments": z.number().int().optional(),
  "number_payments_condition": z.number().int().optional(),
  "headquarter": z.string().optional(),
  "irpf_worker": z.number().int().optional(),
  "irpf_perceived": z.number().int().optional(),
  "irpf_retained": z.number().int().optional(),
  "project_details": z.string().optional(),
  "extra_remuneration_concepts": z.string().optional(),
  "dni_or_nif": z.string().optional(),
  "detailed_timetable": z.string().optional(),
  "dni_files": z.array(z.string()).optional(),
  "academic_files": z.array(z.string()).optional(),
  "bank_files": z.array(z.string()).optional(),
  "model145": z.array(z.string()).optional(),
  "signed_contract": z.string().optional(),
  "last_payrolls": z.array(z.string()).optional(),
  "scholarship_files": z.array(z.string()).optional(),
  "attached_scholarship_files": z.array(z.string()).optional(),
  "create_flow": z.number().int().optional()
}