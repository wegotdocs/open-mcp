import { z } from "zod"

export const inputParamsSchema = {
  "annual_commit_monthly_billing": z.boolean().nullable().describe("A flag indicating if the primary office's plan is categorized as annual commit monthly billing."),
  "auto_call_recording": z.boolean().nullable().describe("Whether or not automatically record all calls of this office. Default is False.").optional(),
  "billing_address": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `billing_address` to the tool, first call the tool `expandSchema` with \"/properties/billing_address\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>The billing address of this created office.</property-description>"),
  "billing_contact": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `billing_contact` to the tool, first call the tool `expandSchema` with \"/properties/billing_contact\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>The billing contact information of this created office.</property-description>").optional(),
  "country": z.enum(["AR","AT","AU","BD","BE","BG","BH","BR","CA","CH","CI","CL","CN","CO","CR","CY","CZ","DE","DK","DO","DP","EC","EE","EG","ES","FI","FR","GB","GH","GR","GT","HK","HR","HU","ID","IE","IL","IN","IS","IT","JP","KE","KH","KR","KZ","LK","LT","LU","LV","MA","MD","MM","MT","MX","MY","NG","NL","NO","NZ","PA","PE","PH","PK","PL","PR","PT","PY","RO","RU","SA","SE","SG","SI","SK","SV","TH","TR","TW","UA","US","UY","VE","VN","ZA"]).nullable().describe("The office country."),
  "currency": z.enum(["AUD","CAD","EUR","GBP","JPY","NZD","USD"]).nullable().describe("The office's billing currency."),
  "e911_address": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `e911_address` to the tool, first call the tool `expandSchema` with \"/properties/e911_address\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>The emergency address of the created office.\n\nRequired for country codes of US, CA, AU, FR, GB, NZ.</property-description>").optional(),
  "first_action": z.enum(["menu","operators"]).nullable().describe("The desired action when the office receives a call.").optional(),
  "friday_hours": z.array(z.string()).nullable().describe("The Friday hours of operation. Default value is [\"08:00\", \"18:00\"].").optional(),
  "group_description": z.string().nullable().describe("The description of the office. Max 256 characters.").optional(),
  "hours_on": z.boolean().nullable().describe("The time frame when the office wants to receive calls. Default value is false, which means the office will always take calls (24/7).").optional(),
  "international_enabled": z.boolean().nullable().describe("A flag indicating if the primary office is able to make international phone calls.").optional(),
  "invoiced": z.boolean().nullable().describe("A flag indicating if the payment will be paid by invoice."),
  "mainline_number": z.string().nullable().describe("The mainline of the office.").optional(),
  "monday_hours": z.array(z.string()).nullable().describe("The Monday hours of operation. To specify when hours_on is set to True. e.g. [\"08:00\", \"12:00\", \"14:00\", \"18:00\"] => open from 8AM to Noon, and from 2PM to 6PM. Default value is [\"08:00\", \"18:00\"].").optional(),
  "name": z.string().nullable().describe("[single-line only]\n\nThe office name."),
  "no_operators_action": z.enum(["bridge_target","company_directory","department","directory","disabled","extension","menu","message","operator","person","scripted_ivr","voicemail"]).nullable().describe("The action to take if there is no one available to answer calls.").optional(),
  "plan_period": z.enum(["monthly","yearly"]).nullable().describe("The frequency at which the company will be billed."),
  "ring_seconds": z.number().int().nullable().describe("The number of seconds to allow the group line to ring before going to voicemail. Choose from 10 seconds to 45 seconds.").optional(),
  "routing_options": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `routing_options` to the tool, first call the tool `expandSchema` with \"/properties/routing_options\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Call routing options for this group.</property-description>").optional(),
  "saturday_hours": z.array(z.string()).nullable().describe("The Saturday hours of operation. Default is empty array.").optional(),
  "sunday_hours": z.array(z.string()).nullable().describe("The Sunday hours of operation. Default is empty array.").optional(),
  "thursday_hours": z.array(z.string()).nullable().describe("The Thursday hours of operation. Default value is [\"08:00\", \"18:00\"].").optional(),
  "timezone": z.string().nullable().describe("Timezone using a tz database name.").optional(),
  "tuesday_hours": z.array(z.string()).nullable().describe("The Tuesday hours of operation. Default value is [\"08:00\", \"18:00\"].").optional(),
  "unified_billing": z.boolean().nullable().describe("A flag indicating if to send a unified invoice."),
  "use_same_address": z.boolean().nullable().describe("A flag indicating if the billing address and the emergency address are the same.").optional(),
  "voice_intelligence": z.record(z.any()).describe("<llm-instruction>This part of the input schema is truncated. If you want to pass the property `voice_intelligence` to the tool, first call the tool `expandSchema` with \"/properties/voice_intelligence\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Configure voice intelligence.</property-description>").optional(),
  "wednesday_hours": z.array(z.string()).nullable().describe("The Wednesday hours of operation. Default value is [\"08:00\", \"18:00\"].").optional()
}